#include "il2cpp-config.h"

#ifndef _MSC_VER
# include <alloca.h>
#else
# include <malloc.h>
#endif


#include <cstring>
#include <string.h>
#include <stdio.h>
#include <cmath>
#include <limits>
#include <assert.h>
#include <stdint.h>

#include "codegen/il2cpp-codegen.h"
#include "il2cpp-object-internals.h"

template <typename R, typename T1, typename T2>
struct VirtFuncInvoker2
{
	typedef R (*Func)(void*, T1, T2, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5>
struct VirtFuncInvoker5
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3>
struct VirtFuncInvoker3
{
	typedef R (*Func)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename R, typename T1>
struct VirtFuncInvoker1
{
	typedef R (*Func)(void*, T1, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct VirtFuncInvoker6
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct VirtActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4>
struct VirtFuncInvoker4
{
	typedef R (*Func)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct VirtActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8>
struct VirtFuncInvoker8
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, T8, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, p8, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7>
struct VirtFuncInvoker7
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9>
struct VirtFuncInvoker9
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, T8, T9, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8, T9 p9)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, p8, p9, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11>
struct VirtFuncInvoker11
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8, T9 p9, T10 p10, T11 p11)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, invokeData.method);
	}
};
template <typename R, typename T1, typename T2>
struct GenericVirtFuncInvoker2
{
	typedef R (*Func)(void*, T1, T2, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5>
struct GenericVirtFuncInvoker5
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3>
struct GenericVirtFuncInvoker3
{
	typedef R (*Func)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename R, typename T1>
struct GenericVirtFuncInvoker1
{
	typedef R (*Func)(void*, T1, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct GenericVirtFuncInvoker6
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct GenericVirtActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4>
struct GenericVirtFuncInvoker4
{
	typedef R (*Func)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct GenericVirtActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8>
struct GenericVirtFuncInvoker8
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, T8, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, p8, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7>
struct GenericVirtFuncInvoker7
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9>
struct GenericVirtFuncInvoker9
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, T8, T9, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8, T9 p9)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, p8, p9, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11>
struct GenericVirtFuncInvoker11
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8, T9 p9, T10 p10, T11 p11)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, invokeData.method);
	}
};
template <typename R, typename T1, typename T2>
struct InterfaceFuncInvoker2
{
	typedef R (*Func)(void*, T1, T2, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5>
struct InterfaceFuncInvoker5
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
struct InterfaceActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3>
struct InterfaceFuncInvoker3
{
	typedef R (*Func)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename R, typename T1>
struct InterfaceFuncInvoker1
{
	typedef R (*Func)(void*, T1, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct InterfaceFuncInvoker6
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct InterfaceActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4>
struct InterfaceFuncInvoker4
{
	typedef R (*Func)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct InterfaceActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8>
struct InterfaceFuncInvoker8
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, T8, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, p8, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7>
struct InterfaceFuncInvoker7
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9>
struct InterfaceFuncInvoker9
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, T8, T9, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8, T9 p9)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, p8, p9, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11>
struct InterfaceFuncInvoker11
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8, T9 p9, T10 p10, T11 p11)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, invokeData.method);
	}
};
template <typename R, typename T1, typename T2>
struct GenericInterfaceFuncInvoker2
{
	typedef R (*Func)(void*, T1, T2, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5>
struct GenericInterfaceFuncInvoker5
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3>
struct GenericInterfaceFuncInvoker3
{
	typedef R (*Func)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename R, typename T1>
struct GenericInterfaceFuncInvoker1
{
	typedef R (*Func)(void*, T1, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct GenericInterfaceFuncInvoker6
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct GenericInterfaceActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4>
struct GenericInterfaceFuncInvoker4
{
	typedef R (*Func)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct GenericInterfaceActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8>
struct GenericInterfaceFuncInvoker8
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, T8, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, p8, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7>
struct GenericInterfaceFuncInvoker7
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9>
struct GenericInterfaceFuncInvoker9
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, T8, T9, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8, T9 p9)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, p8, p9, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11>
struct GenericInterfaceFuncInvoker11
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8, T9 p9, T10 p10, T11 p11)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, invokeData.method);
	}
};

// FMOD.ATTRIBUTES_3D[]
struct ATTRIBUTES_3DU5BU5D_t5427259BEC6244F4081124FF88F25A12CBF725EF;
// FMOD.CB_3D_ROLLOFF_CALLBACK
struct CB_3D_ROLLOFF_CALLBACK_t2CC01B82803744FC8D8A78F9670439F441EE82DD;
// FMOD.CHANNELCONTROL_CALLBACK
struct CHANNELCONTROL_CALLBACK_t95D7949ECD13791F21B2CC1501D3F741AB1C9CF5;
// FMOD.CHANNELMASK[]
struct CHANNELMASKU5BU5D_tD17766B4270FA0C460B27576B618990903A56A5B;
// FMOD.CONSTANTS
struct CONSTANTS_tB41B65F58BF62599BB23F9C1E78A32C0BBED3D2E;
// FMOD.DEBUG_CALLBACK
struct DEBUG_CALLBACK_t6A7351E61776A499C1A1BE9A923E71A21416E783;
// FMOD.DSP_ALLOC_FUNC
struct DSP_ALLOC_FUNC_t8CD6D271F70AFD7BFE9A856DAD1D444E72AA422D;
// FMOD.DSP_BUFFER_ARRAY
struct DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291;
// FMOD.DSP_CREATECALLBACK
struct DSP_CREATECALLBACK_t6510E2AEECAAD7C3DCCE0E608DF42AF53BB2AFB4;
// FMOD.DSP_DFT_FFTREAL_FUNC
struct DSP_DFT_FFTREAL_FUNC_t73B4E8FC3D8FA9D701BC82CD1EBD979E3873D3E5;
// FMOD.DSP_DFT_IFFTREAL_FUNC
struct DSP_DFT_IFFTREAL_FUNC_t536096AAC4FEBBF600001E6FAE00307F932D2494;
// FMOD.DSP_FREE_FUNC
struct DSP_FREE_FUNC_t0C9E6DE1DF61298098E07E792A9A1BF26AA681C2;
// FMOD.DSP_GETBLOCKSIZE_FUNC
struct DSP_GETBLOCKSIZE_FUNC_t9B624C10ADE32AAC618ACF14395A8A59BDDFDD50;
// FMOD.DSP_GETCLOCK_FUNC
struct DSP_GETCLOCK_FUNC_t0449CC42281AF16DB70CB8E93459A7B5D5C62A75;
// FMOD.DSP_GETLISTENERATTRIBUTES_FUNC
struct DSP_GETLISTENERATTRIBUTES_FUNC_t69622B724F9617BD5217ACCF1EB398B9F6060D7B;
// FMOD.DSP_GETPARAM_BOOL_CALLBACK
struct DSP_GETPARAM_BOOL_CALLBACK_tAD8EBD00416D502B580D2869800D43E2C3E52069;
// FMOD.DSP_GETPARAM_DATA_CALLBACK
struct DSP_GETPARAM_DATA_CALLBACK_t2E82033F2FF7DC3D377C9B9B60A1F453A286D372;
// FMOD.DSP_GETPARAM_FLOAT_CALLBACK
struct DSP_GETPARAM_FLOAT_CALLBACK_t8401A9811354731A09C32E110B876C472C71A0A9;
// FMOD.DSP_GETPARAM_INT_CALLBACK
struct DSP_GETPARAM_INT_CALLBACK_t7AAF6AFAFD8D24554AA1490F81B3C4B370DF8EA6;
// FMOD.DSP_GETSAMPLERATE_FUNC
struct DSP_GETSAMPLERATE_FUNC_t25AB56A22F09DA2A058DC879C9916BB13E9C2E02;
// FMOD.DSP_GETSPEAKERMODE_FUNC
struct DSP_GETSPEAKERMODE_FUNC_t8047C7AB197EF964C7E2299C1EF3B5A00F345B79;
// FMOD.DSP_GETUSERDATA_FUNC
struct DSP_GETUSERDATA_FUNC_tF11A456B243BF11A5E4283EBBDA9220E904177A8;
// FMOD.DSP_LOG_FUNC
struct DSP_LOG_FUNC_t85E329EB1F7C54E80A66F8FBA3DB2C2C58E72493;
// FMOD.DSP_METERING_INFO
struct DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2;
// FMOD.DSP_PAN_GETROLLOFFGAIN_FUNC
struct DSP_PAN_GETROLLOFFGAIN_FUNC_tB6AB67EB1F301E9C6AFD60A29B8314A585D3A05C;
// FMOD.DSP_PAN_SUMMONOMATRIX_FUNC
struct DSP_PAN_SUMMONOMATRIX_FUNC_t4FEAF41A824EF70D7AE3CC079690C889B3F3584E;
// FMOD.DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC
struct DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC_tA7FBF2E8C0EA206F652B515515C002B789849C7B;
// FMOD.DSP_PAN_SUMSTEREOMATRIX_FUNC
struct DSP_PAN_SUMSTEREOMATRIX_FUNC_tBDAFBEB725DE435CC966204D9A134DF3D5BB8092;
// FMOD.DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC
struct DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC_tD083096D805C0022D80A8CEE8DE038D2588A63F3;
// FMOD.DSP_PAN_SUMSURROUNDMATRIX_FUNC
struct DSP_PAN_SUMSURROUNDMATRIX_FUNC_t57199FB9B779135FCFB32AFE2B8ADE90F5065619;
// FMOD.DSP_PARAMETER_DESC_BOOL
struct DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD;
// FMOD.DSP_PARAMETER_DESC_INT
struct DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA;
// FMOD.DSP_PARAMETER_DESC_UNION
struct DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D;
// FMOD.DSP_PROCESS_CALLBACK
struct DSP_PROCESS_CALLBACK_tDBD865DB753B70FC9D7366E33380253692DC88CB;
// FMOD.DSP_READCALLBACK
struct DSP_READCALLBACK_tA3F0E8A151B3385E3BFDB117670F3572746ECE6B;
// FMOD.DSP_REALLOC_FUNC
struct DSP_REALLOC_FUNC_t1F4302C05A784F080C70909A2A758DFBAFC3F4E0;
// FMOD.DSP_RELEASECALLBACK
struct DSP_RELEASECALLBACK_t92C9D067D3CF7847DB0F73813A5833B6E4D0C6EE;
// FMOD.DSP_RESETCALLBACK
struct DSP_RESETCALLBACK_t8EA9624AAC1D240E70DB5855727C840681FB659C;
// FMOD.DSP_SETPARAM_BOOL_CALLBACK
struct DSP_SETPARAM_BOOL_CALLBACK_tACA9458F120A18B395CB1EE2F9A3C8ACEC2C2349;
// FMOD.DSP_SETPARAM_DATA_CALLBACK
struct DSP_SETPARAM_DATA_CALLBACK_tDB9125291A634749692E0D00301A136B5C3D34DE;
// FMOD.DSP_SETPARAM_FLOAT_CALLBACK
struct DSP_SETPARAM_FLOAT_CALLBACK_t7EFE910C4496F3D95D1E3487B97D08AD011006C8;
// FMOD.DSP_SETPARAM_INT_CALLBACK
struct DSP_SETPARAM_INT_CALLBACK_t10AE9EEDA039984760035B14CD3E84A401F749E3;
// FMOD.DSP_SETPOSITIONCALLBACK
struct DSP_SETPOSITIONCALLBACK_t9A480C4F691C838E0267D2D8515075AC431CB2B7;
// FMOD.DSP_SHOULDIPROCESS_CALLBACK
struct DSP_SHOULDIPROCESS_CALLBACK_t5545B686955F4562B7A1F21C22438EC50D6CFF28;
// FMOD.DSP_SYSTEM_DEREGISTER_CALLBACK
struct DSP_SYSTEM_DEREGISTER_CALLBACK_tB1D240F0C4635096EEDB65641DC430EB03DD0699;
// FMOD.DSP_SYSTEM_MIX_CALLBACK
struct DSP_SYSTEM_MIX_CALLBACK_t38470781C5A19912A1FFF609AEFB9FC7695C3836;
// FMOD.DSP_SYSTEM_REGISTER_CALLBACK
struct DSP_SYSTEM_REGISTER_CALLBACK_t9D6891252B2A9A8667CF1BE598C9BBC50450CCFA;
// FMOD.Error
struct Error_tF66A4E578ACBA0BAF6AD67ACE64E592AB5ADB83F;
// FMOD.FILE_ASYNCCANCEL_CALLBACK
struct FILE_ASYNCCANCEL_CALLBACK_t6FB6AA5C72C18AE5B41EDCA973157115A2EAEF3D;
// FMOD.FILE_ASYNCDONE_FUNC
struct FILE_ASYNCDONE_FUNC_tFBC4B11B35F53B2638037291E5304EA64DA389BC;
// FMOD.FILE_ASYNCREAD_CALLBACK
struct FILE_ASYNCREAD_CALLBACK_tC94093AEE8D56351A512BB4239C46642E969F9D3;
// FMOD.FILE_CLOSE_CALLBACK
struct FILE_CLOSE_CALLBACK_tA347FC35A3EDE3EA674838B9302CA7847B2D0A59;
// FMOD.FILE_OPEN_CALLBACK
struct FILE_OPEN_CALLBACK_t7A7741CFAFE85C3A76DBEE69DF461E6D96AEF17C;
// FMOD.FILE_READ_CALLBACK
struct FILE_READ_CALLBACK_t98BD5E40D0AC284218606A892F750513E9403C1C;
// FMOD.FILE_SEEK_CALLBACK
struct FILE_SEEK_CALLBACK_tCA1713616668F850F4F7CB185CFE66D7728365A1;
// FMOD.SOUND_NONBLOCK_CALLBACK
struct SOUND_NONBLOCK_CALLBACK_tFDA9F7F30FE6A3D367ACB86746046DD480BC45CE;
// FMOD.SOUND_PCMREAD_CALLBACK
struct SOUND_PCMREAD_CALLBACK_t73F82A176E129053584188355C74C98D216AF44B;
// FMOD.SOUND_PCMSETPOS_CALLBACK
struct SOUND_PCMSETPOS_CALLBACK_t2CA9012A6D4A7E750DC9C96F698AD9F4FA1175DD;
// FMOD.StringHelper/ThreadSafeEncoding
struct ThreadSafeEncoding_t9C88ACD17730C478FB2685CA11D1ABC64C1A1771;
// System.AsyncCallback
struct AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4;
// System.Byte[]
struct ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821;
// System.Char[]
struct CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2;
// System.Delegate
struct Delegate_t;
// System.DelegateData
struct DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE;
// System.Delegate[]
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86;
// System.IAsyncResult
struct IAsyncResult_t8E194308510B375B42432981AE5E7488C458D598;
// System.Int32[]
struct Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83;
// System.IntPtr[]
struct IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD;
// System.Reflection.MethodInfo
struct MethodInfo_t;
// System.Single[]
struct SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5;
// System.Single[][]
struct SingleU5BU5DU5BU5D_tC2E25498616DDBEA3B03D43855DEBC928046392E;
// System.String
struct String_t;
// System.Text.UTF8Encoding
struct UTF8Encoding_t77ED103B749A387EF072C3429F48C91D12CA08DE;
// System.UInt64[]
struct UInt64U5BU5D_tA808FE881491284FF25AFDF5C4BC92A826031EF4;
// System.Void
struct Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017;

IL2CPP_EXTERN_C RuntimeClass* ATTRIBUTES_3DU5BU5D_t5427259BEC6244F4081124FF88F25A12CBF725EF_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* CHANNELCONTROL_CALLBACK_TYPE_tD8A1A40A9AB52B763E8BA35E8C0D3E8FD4807085_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* CHANNELCONTROL_TYPE_t727DE3EF3D7858112AF66D3B6F2C202B9DAA295C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* CHANNELMASKU5BU5D_tD17766B4270FA0C460B27576B618990903A56A5B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* CHANNELMASK_t7F51D2E2062C22CF864A752E22262AE47BC660B5_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DEBUG_FLAGS_t064690B82E3CFF643A403FD4A2D0322FE1B0AD56_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_ALLOC_FUNC_t8CD6D271F70AFD7BFE9A856DAD1D444E72AA422D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_CREATECALLBACK_t6510E2AEECAAD7C3DCCE0E608DF42AF53BB2AFB4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_DFT_FFTREAL_FUNC_t73B4E8FC3D8FA9D701BC82CD1EBD979E3873D3E5_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_DFT_IFFTREAL_FUNC_t536096AAC4FEBBF600001E6FAE00307F932D2494_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_FREE_FUNC_t0C9E6DE1DF61298098E07E792A9A1BF26AA681C2_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_GETBLOCKSIZE_FUNC_t9B624C10ADE32AAC618ACF14395A8A59BDDFDD50_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_GETCLOCK_FUNC_t0449CC42281AF16DB70CB8E93459A7B5D5C62A75_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_GETLISTENERATTRIBUTES_FUNC_t69622B724F9617BD5217ACCF1EB398B9F6060D7B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_GETPARAM_BOOL_CALLBACK_tAD8EBD00416D502B580D2869800D43E2C3E52069_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_GETPARAM_DATA_CALLBACK_t2E82033F2FF7DC3D377C9B9B60A1F453A286D372_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_GETPARAM_FLOAT_CALLBACK_t8401A9811354731A09C32E110B876C472C71A0A9_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_GETPARAM_INT_CALLBACK_t7AAF6AFAFD8D24554AA1490F81B3C4B370DF8EA6_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_GETSAMPLERATE_FUNC_t25AB56A22F09DA2A058DC879C9916BB13E9C2E02_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_GETSPEAKERMODE_FUNC_t8047C7AB197EF964C7E2299C1EF3B5A00F345B79_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_GETUSERDATA_FUNC_tF11A456B243BF11A5E4283EBBDA9220E904177A8_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_LOG_FUNC_t85E329EB1F7C54E80A66F8FBA3DB2C2C58E72493_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_PAN_3D_ROLLOFF_TYPE_t8281FE1B3F501AE31EA34324C52C8F1DB1E9B8A2_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_PAN_GETROLLOFFGAIN_FUNC_tB6AB67EB1F301E9C6AFD60A29B8314A585D3A05C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_PAN_SUMMONOMATRIX_FUNC_t4FEAF41A824EF70D7AE3CC079690C889B3F3584E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC_tA7FBF2E8C0EA206F652B515515C002B789849C7B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_PAN_SUMSTEREOMATRIX_FUNC_tBDAFBEB725DE435CC966204D9A134DF3D5BB8092_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC_tD083096D805C0022D80A8CEE8DE038D2588A63F3_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_PAN_SUMSURROUNDMATRIX_FUNC_t57199FB9B779135FCFB32AFE2B8ADE90F5065619_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_PAN_SURROUND_FLAGS_t115C25A3E1D90A75DEC1CA06FF4B54FEBB3F04F0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_PROCESS_CALLBACK_tDBD865DB753B70FC9D7366E33380253692DC88CB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_PROCESS_OPERATION_t6B32805470F5CAAC59B13EAF05AA73D4342B0C43_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_READCALLBACK_tA3F0E8A151B3385E3BFDB117670F3572746ECE6B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_REALLOC_FUNC_t1F4302C05A784F080C70909A2A758DFBAFC3F4E0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_RELEASECALLBACK_t92C9D067D3CF7847DB0F73813A5833B6E4D0C6EE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_RESETCALLBACK_t8EA9624AAC1D240E70DB5855727C840681FB659C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_SETPARAM_BOOL_CALLBACK_tACA9458F120A18B395CB1EE2F9A3C8ACEC2C2349_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_SETPARAM_DATA_CALLBACK_tDB9125291A634749692E0D00301A136B5C3D34DE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_SETPARAM_FLOAT_CALLBACK_t7EFE910C4496F3D95D1E3487B97D08AD011006C8_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_SETPARAM_INT_CALLBACK_t10AE9EEDA039984760035B14CD3E84A401F749E3_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_SETPOSITIONCALLBACK_t9A480C4F691C838E0267D2D8515075AC431CB2B7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_SHOULDIPROCESS_CALLBACK_t5545B686955F4562B7A1F21C22438EC50D6CFF28_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_SYSTEM_DEREGISTER_CALLBACK_tB1D240F0C4635096EEDB65641DC430EB03DD0699_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_SYSTEM_MIX_CALLBACK_t38470781C5A19912A1FFF609AEFB9FC7695C3836_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DSP_SYSTEM_REGISTER_CALLBACK_t9D6891252B2A9A8667CF1BE598C9BBC50450CCFA_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* FILE_ASYNCCANCEL_CALLBACK_t6FB6AA5C72C18AE5B41EDCA973157115A2EAEF3D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* FILE_ASYNCDONE_FUNC_tFBC4B11B35F53B2638037291E5304EA64DA389BC_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* FILE_ASYNCREAD_CALLBACK_tC94093AEE8D56351A512BB4239C46642E969F9D3_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* FILE_CLOSE_CALLBACK_tA347FC35A3EDE3EA674838B9302CA7847B2D0A59_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* FILE_OPEN_CALLBACK_t7A7741CFAFE85C3A76DBEE69DF461E6D96AEF17C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* FILE_READ_CALLBACK_t98BD5E40D0AC284218606A892F750513E9403C1C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* FILE_SEEK_CALLBACK_tCA1713616668F850F4F7CB185CFE66D7728365A1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IDisposable_t7218B22548186B208D65EA5B7870503810A2D15A_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IntPtr_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MEMORY_TYPE_tD54CA7DAFC85A6084D80FE45AC3B645475B00AD1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Math_tFB388E53C7FDC6FCCF9A19ABF5A4E521FBD52E19_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SOUND_NONBLOCK_CALLBACK_tFDA9F7F30FE6A3D367ACB86746046DD480BC45CE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SOUND_PCMREAD_CALLBACK_t73F82A176E129053584188355C74C98D216AF44B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SOUND_PCMSETPOS_CALLBACK_t2CA9012A6D4A7E750DC9C96F698AD9F4FA1175DD_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SPEAKERMODE_t336E2FFFB19398BDA6AC314E55997DF0CC1068A1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SingleU5BU5DU5BU5D_tC2E25498616DDBEA3B03D43855DEBC928046392E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StringHelper_tCA6285337EBB683D188638581D30D196C340F0FC_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C String_t* _stringLiteral00E35609C478A2A7D2CEC783B9B9059908183DEC;
IL2CPP_EXTERN_C String_t* _stringLiteral04AEAD014F55AC660B0B1182069764F5D0C3BF80;
IL2CPP_EXTERN_C String_t* _stringLiteral04FE608EFBFC660FA0611648A3914BB64D0130B0;
IL2CPP_EXTERN_C String_t* _stringLiteral06C9CF7FB416F524DFBD7DFF48E5FA3B11D7B36E;
IL2CPP_EXTERN_C String_t* _stringLiteral0C5010009110185671A31A0E07413133941FE55B;
IL2CPP_EXTERN_C String_t* _stringLiteral0E57DA20603FF34D2332F776AFAB077E04FA4C3B;
IL2CPP_EXTERN_C String_t* _stringLiteral1262E28428306BA15867A5BDAAACA60CAD945478;
IL2CPP_EXTERN_C String_t* _stringLiteral16E01A10D0A304A64A3EE28A9870520D32B238FB;
IL2CPP_EXTERN_C String_t* _stringLiteral1E0E45298F8961E27346BFE811260535E08F2B7C;
IL2CPP_EXTERN_C String_t* _stringLiteral1EA33B9041002499391F3C500DEC64A829EAC9E0;
IL2CPP_EXTERN_C String_t* _stringLiteral274401FED9C7F8ACC261DB37DB2CFDCB10F26A50;
IL2CPP_EXTERN_C String_t* _stringLiteral291B3ADE2FCBA6E001DCF9BA7AD0F6FEDA3D837F;
IL2CPP_EXTERN_C String_t* _stringLiteral2A82FBD5000452E77BB92C5CFE9271BA08271A8B;
IL2CPP_EXTERN_C String_t* _stringLiteral2E87BFC418D79CB7DCDE6C0406B71846A52C7E87;
IL2CPP_EXTERN_C String_t* _stringLiteral337B019F14E948BACB9245F438D79C26DBEEDDD3;
IL2CPP_EXTERN_C String_t* _stringLiteral358103AD0C4D35DE02BF55B8A13FCD789BC2A01C;
IL2CPP_EXTERN_C String_t* _stringLiteral35AC55BE88D18336A51AA9DD8689776AB453352D;
IL2CPP_EXTERN_C String_t* _stringLiteral3716D64264F900396F1AF7FC16D7B86FDF992A50;
IL2CPP_EXTERN_C String_t* _stringLiteral372DD476A620F27F38A3038098C3B73B973376DE;
IL2CPP_EXTERN_C String_t* _stringLiteral37FB64D7B3DB6B01804478A5CCD1910CA30D1C2F;
IL2CPP_EXTERN_C String_t* _stringLiteral44597A0AD2AEF379C9C2274BA9C5BBBBB25CBAC5;
IL2CPP_EXTERN_C String_t* _stringLiteral464506B8C3856BCF4F5987373E5853D3FDD0A000;
IL2CPP_EXTERN_C String_t* _stringLiteral4C155B7C5F00C9698F2D1A6218FF4AEAFF021490;
IL2CPP_EXTERN_C String_t* _stringLiteral4C7ECF3C94E4FF975EF117DE4FD95EC459882CBB;
IL2CPP_EXTERN_C String_t* _stringLiteral4CB592841E1CA27BCCD3F0845429E727DE1E4CF1;
IL2CPP_EXTERN_C String_t* _stringLiteral507ED0E36352605B93FABBE5DCDAFA0308A43CC7;
IL2CPP_EXTERN_C String_t* _stringLiteral52262EFB96A34A85EE0540DDD94CF71F30F0CA12;
IL2CPP_EXTERN_C String_t* _stringLiteral524A635A0B998546C2CFD90E667A04818F0DF754;
IL2CPP_EXTERN_C String_t* _stringLiteral5D24783BC3514543ED9BD164E49F027D77B501F5;
IL2CPP_EXTERN_C String_t* _stringLiteral5D73A8446848EE8D69BB4D55B7184D3AE36EC357;
IL2CPP_EXTERN_C String_t* _stringLiteral5E6D08EBB6D7C7508C659DEC1FAF9E6F78C62CE2;
IL2CPP_EXTERN_C String_t* _stringLiteral62173CC54188FA134B084765935ABDE0F4A746CD;
IL2CPP_EXTERN_C String_t* _stringLiteral6347B7ABF2D931AC1CC8D391F199DFCC2ADB172F;
IL2CPP_EXTERN_C String_t* _stringLiteral67800F5FF638B75A1DE556F29A2EB34799CB292A;
IL2CPP_EXTERN_C String_t* _stringLiteral6CDC3D5C90BAF4D76ADDE757B61755FF82818A97;
IL2CPP_EXTERN_C String_t* _stringLiteral6F717CBBC6921445DCD628AC36CC31FD8957630E;
IL2CPP_EXTERN_C String_t* _stringLiteral7039092078754EAB2E27854EFEA5657A2EE76ACA;
IL2CPP_EXTERN_C String_t* _stringLiteral7202793CE9C9E5B6DE73F9045E35C1458039098E;
IL2CPP_EXTERN_C String_t* _stringLiteral737DAE0B51BCE2E6E2820BC9093CE3E83F60FF2E;
IL2CPP_EXTERN_C String_t* _stringLiteral7BF2F3C68230F7C6D1DAC873639E46E15A12D704;
IL2CPP_EXTERN_C String_t* _stringLiteral7E458DCF9436B35C29829158BBB86B837094551F;
IL2CPP_EXTERN_C String_t* _stringLiteral80BE0F7F008E15F5C2CB7BED1371723136E509A5;
IL2CPP_EXTERN_C String_t* _stringLiteral82203622D48EECE467AAD73EDA2AF29EAB27D95E;
IL2CPP_EXTERN_C String_t* _stringLiteral82A552809AC43EB9D33A9E554F5A4F070DCAEDD8;
IL2CPP_EXTERN_C String_t* _stringLiteral8369934099AA41CFF00B2563E03224B57942E09E;
IL2CPP_EXTERN_C String_t* _stringLiteral85C4F42855872799BC5CC70ADB474D804E96568A;
IL2CPP_EXTERN_C String_t* _stringLiteral9E151D8A6223F91FE18701AE2FF1C8F10AD05370;
IL2CPP_EXTERN_C String_t* _stringLiteralA3F370A0BCC5D78D4E7D79A1C0B2EDF1CBA01202;
IL2CPP_EXTERN_C String_t* _stringLiteralA4E19215C62F4E24F142B85D9D2F7C2404CAA132;
IL2CPP_EXTERN_C String_t* _stringLiteralA8CE0AEA7B11396BD17BA0ADB88D41DEA6F51697;
IL2CPP_EXTERN_C String_t* _stringLiteralAE9C75A5B8773536C41D377E4B3D70649E9C6BD5;
IL2CPP_EXTERN_C String_t* _stringLiteralB1E7DCB08463BCC79AA75FB35BBE48A599985451;
IL2CPP_EXTERN_C String_t* _stringLiteralB3A219399951E91DDB2050261B698F81D4FAB090;
IL2CPP_EXTERN_C String_t* _stringLiteralB3C8D1763AB0AD1A4F84A1089A0044C6DE0E3A6C;
IL2CPP_EXTERN_C String_t* _stringLiteralB54C39247E145C71D52960518EFB2DCC62A6D909;
IL2CPP_EXTERN_C String_t* _stringLiteralB7100BBEB7CB9346E1769E0BA66A8035F00E1883;
IL2CPP_EXTERN_C String_t* _stringLiteralB8A45029C3878A14E011B8243CA653CBD0670100;
IL2CPP_EXTERN_C String_t* _stringLiteralB9405E3CE6FF22CF6AEA0C67B3D8730A5257E8D9;
IL2CPP_EXTERN_C String_t* _stringLiteralB9E81176E055594F0240A4496BB828B8EDB9E34C;
IL2CPP_EXTERN_C String_t* _stringLiteralBEA6C6A8BCF150860E2DEE482D4EE7860E576EB7;
IL2CPP_EXTERN_C String_t* _stringLiteralC74069EC2237D3A55DAA0A986877ACDC86D6AFAE;
IL2CPP_EXTERN_C String_t* _stringLiteralC8CF3AD6BFF243918463AE6244EB97629454FDC6;
IL2CPP_EXTERN_C String_t* _stringLiteralCBDB0B22E6485EEBCB74C43B046BA64BAC59610E;
IL2CPP_EXTERN_C String_t* _stringLiteralCE6D80392E2071F9BB8DB7A58033C819C07D06C5;
IL2CPP_EXTERN_C String_t* _stringLiteralD3508371B6BE4EDBC387BC309D2983D034F5D1AB;
IL2CPP_EXTERN_C String_t* _stringLiteralD40527B4F8994F79BB8BFC3692051D6249B94554;
IL2CPP_EXTERN_C String_t* _stringLiteralD419792622968B091A390F9287163748F26B2C19;
IL2CPP_EXTERN_C String_t* _stringLiteralD888D7A9D7614798D56A6D0CCC306BB8459AC2BA;
IL2CPP_EXTERN_C String_t* _stringLiteralD8FFD7C15DA0F79F364814F4C2BC6CCCFAF5D5BB;
IL2CPP_EXTERN_C String_t* _stringLiteralDFF58956B175847A604C0B346DF010D37CC56363;
IL2CPP_EXTERN_C String_t* _stringLiteralE39C2E0AF4090527216C6BD89025390ABEB1DECE;
IL2CPP_EXTERN_C String_t* _stringLiteralE43A3D0BA33983E390E47C6A064FC50E314FB877;
IL2CPP_EXTERN_C String_t* _stringLiteralE43EB9097E9A27052402B7E19F8A21EEC78B89AB;
IL2CPP_EXTERN_C String_t* _stringLiteralEB6F586D7370E2CDCBAAE95C6C6C55BDC69784AC;
IL2CPP_EXTERN_C String_t* _stringLiteralEC4570FB97BDF836A6DB79FDBDC3F63125ABFFBA;
IL2CPP_EXTERN_C String_t* _stringLiteralEE5D8371D4985AFC5063E5B0FFDF67AEA61DEB54;
IL2CPP_EXTERN_C String_t* _stringLiteralEF41E4DCDC1330BF3061C8BEAECEE7FE31300BE3;
IL2CPP_EXTERN_C String_t* _stringLiteralF52A1A1AE9D3CB71A16139435112084A5EA37898;
IL2CPP_EXTERN_C String_t* _stringLiteralF5DB72504F15ADA3E82328D5C75CEC9E4DE9775B;
IL2CPP_EXTERN_C String_t* _stringLiteralF8F0122104650DF412A4FE26C65D8DEB8C1111B3;
IL2CPP_EXTERN_C String_t* _stringLiteralFAC13A829F8125B7B316FC7E50DB89FE94F30EC0;
IL2CPP_EXTERN_C String_t* _stringLiteralFDFBB49255FE696F1E70B404A62ABAF4A4B2C4FF;
IL2CPP_EXTERN_C String_t* _stringLiteralFF52EEE98CD53219D87C69133DB0B2EB841E2781;
IL2CPP_EXTERN_C const RuntimeMethod* Marshal_PtrToStructure_TisDSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06_m999834B093023B040AB51001C89E09D979EE1378_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Marshal_UnsafeAddrOfPinnedArrayElement_TisByte_tF87C579059BD4633E6840EBBBEEF899C6E33EF07_m0F1B760143B0C170B0274CA8B82FE6C3F74D7962_RuntimeMethod_var;
IL2CPP_EXTERN_C const uint32_t ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3_com_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3_pinvoke_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t CB_3D_ROLLOFF_CALLBACK_BeginInvoke_mA91DF6B5F12B1F1F3F4F91946C89E3F8E680B250_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t CHANNELCONTROL_CALLBACK_BeginInvoke_m8ECD4B6045DDA00B388E67A02F4B8AE2773FDC9F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225_com_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225_pinvoke_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ChannelGroup_addGroup_mCE1145005428A1BEA29DC68CA9111F9CF27B6A7E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ChannelGroup_clearHandle_m3C24644E33F4627073F4A50BF9B0C83A7B049904_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ChannelGroup_getDelay_m56C301B16C1652BB132B09653912491F7F17848E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ChannelGroup_getName_m249DBCE8CDC68ECD72A98C92F305E556314C28DA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ChannelGroup_hasHandle_m00CF2E79B1782BD22AD93F7F79BA79636908470A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Channel_clearHandle_m2DC368368C90A088742321ED558AA1CDF14FF2F6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Channel_getDelay_m287DDE522276BC3ABEED7AB75E53D7E7C383C554_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Channel_hasHandle_mB3B2C4307E75D35F6521FF3374DAF1BEE793E506_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DEBUG_CALLBACK_BeginInvoke_m2F24A746033771950BBAAA296C522A3CC9751EA1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSPConnection_clearHandle_mB41639C441BCAFCEE499C99B8DC4887590E37D9F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSPConnection_hasHandle_m948CD8E4FC57BA00A23759F800ED31815DC3ADC2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_ALLOC_FUNC_BeginInvoke_m6AF8F5A88BB75F5E2BD243CCCE874C0D3E9EC7A8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_com_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_pinvoke_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_CREATECALLBACK_BeginInvoke_mA60B1BA7AAD55FC2954259026CA113CD69CFFBC6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A_com_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A_pinvoke_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_DFT_FFTREAL_FUNC_BeginInvoke_mF085C280F93448B0BB04483DD8683999914F6372_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_DFT_IFFTREAL_FUNC_BeginInvoke_mB65F27B24305A465B784305FE34FAD87133B84F4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_FREE_FUNC_BeginInvoke_mA96F6923C6F400351F2F3615B562479D1BDD8BD2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_GETBLOCKSIZE_FUNC_BeginInvoke_m3AE74F65DB0B8186EC91FD2F6B87BBF8F7BCE480_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_GETCLOCK_FUNC_BeginInvoke_mB286C24DE7199ECFA0D68B9D6F5C0C8E876857D0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_GETLISTENERATTRIBUTES_FUNC_BeginInvoke_m74CE7081BD5048FBEC9F5126E9B2ABFB6BD20F39_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_GETPARAM_BOOL_CALLBACK_BeginInvoke_mA48B0131BBA867B67DDDFD62A6CCEE5AE1A9C0AE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_GETPARAM_DATA_CALLBACK_BeginInvoke_mD23F9E7481E6A1D8A429037E5E66B382896956EC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_GETPARAM_FLOAT_CALLBACK_BeginInvoke_m28B4C62ABEBA2824CB07BE389CB6014FE23D79E6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_GETPARAM_INT_CALLBACK_BeginInvoke_m3F5F85ED8075499520E658284021C27DFA334516_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_GETSAMPLERATE_FUNC_BeginInvoke_m002624DFF04BC6A1D64F2A00AFE9E79D10B46CB6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_GETSPEAKERMODE_FUNC_BeginInvoke_m075A5037DA7FFA1CF82DC45F332E8F583641EB33_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_GETUSERDATA_FUNC_BeginInvoke_m1E9EF1352C24B776EB3989BF8FE825BFA38E24BC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_LOG_FUNC_BeginInvoke_mFA4484DF40E4A4A751070B20E64D5B61C0157C04_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_com_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_pinvoke_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_PAN_GETROLLOFFGAIN_FUNC_BeginInvoke_mCC10E944B759E7B17769E9C605EFF70804D3C77C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_PAN_SUMMONOMATRIX_FUNC_BeginInvoke_m78B09693F3C4A627AC50E5DD11870DDCCBFA2FA6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC_BeginInvoke_m3BBD2179045ADCAAF1098B5AFC532A6058A251D3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_PAN_SUMSTEREOMATRIX_FUNC_BeginInvoke_mA2EDB9D4419713B7B82ECA83E94272B8F3C6FD10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC_BeginInvoke_mBA81F11F4372FD9E91DF7DA48A73559E6D9B5323_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_PAN_SUMSURROUNDMATRIX_FUNC_BeginInvoke_m425C0F36DA35F8141A796D7BE089E706E8E11062_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_PARAMETER_3DATTRIBUTES_MULTI_t2A4823DEE96E94AAFA950F4ADEB624339AF83EC9_com_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_PARAMETER_3DATTRIBUTES_MULTI_t2A4823DEE96E94AAFA950F4ADEB624339AF83EC9_pinvoke_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06_com_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06_pinvoke_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_PARAMETER_FFT_getSpectrum_m5E564B8921A54BFBCA697CB2D392BA9CF30AA22A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_PARAMETER_FFT_getSpectrum_m75C1E931F14E6CCC06A3510A4C97F67AA0B45F53_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_PARAMETER_FFT_get_spectrum_m70A9088ECAB92315C280AF324099F262B60AAE85_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A_com_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A_pinvoke_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_PROCESS_CALLBACK_BeginInvoke_m2821E91594696831ECA43E505513C15E8398C1A4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_READCALLBACK_BeginInvoke_mB4289A24A584B8F6BF1ED9707CF724F30A9D7BF5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_REALLOC_FUNC_BeginInvoke_m29FF6BD8EFC9515BAD89EEA4070A49688DCF2E61_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_RELEASECALLBACK_BeginInvoke_m408923374DDE7B9485D80E91F3218E39A16DCD62_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_RESETCALLBACK_BeginInvoke_m2977C7B4D50169CC0716D6A594BE8DECCD538FA8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_SETPARAM_BOOL_CALLBACK_BeginInvoke_m7A83172D4DF4E128CF05DB5FE0CC3C6C51FC50A0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_SETPARAM_DATA_CALLBACK_BeginInvoke_m860C014414CA03403B9224D849D09D4AEAA6243A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_SETPARAM_FLOAT_CALLBACK_BeginInvoke_mCCE592105B231E4D8CF1C575BAF21CCE4E5CFB48_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_SETPARAM_INT_CALLBACK_BeginInvoke_m0D006A966A8D6C3C52DEC8E90B030E19C842297F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_SETPOSITIONCALLBACK_BeginInvoke_m265B3B8E4113FECD209810F88BB1EC0A42BF04E5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_SHOULDIPROCESS_CALLBACK_BeginInvoke_m5083780AE122DBA5DE092B044BA17A72B35E0F6E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_STATE_DFT_FUNCTIONS_t91F97904EBEE894390A661250A4ECDB1C4FF7900_com_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_STATE_DFT_FUNCTIONS_t91F97904EBEE894390A661250A4ECDB1C4FF7900_pinvoke_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B_com_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B_pinvoke_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_STATE_PAN_FUNCTIONS_tAE8544175DB4E96F165A7CFF512529541ABD9B24_com_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_STATE_PAN_FUNCTIONS_tAE8544175DB4E96F165A7CFF512529541ABD9B24_pinvoke_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_SYSTEM_DEREGISTER_CALLBACK_BeginInvoke_m4E09F021A6014173C00A32FBE513ED79E73F9825_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_SYSTEM_MIX_CALLBACK_BeginInvoke_m597015EFC44E0158D44302D8A2ADC6307DA7E63A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_SYSTEM_REGISTER_CALLBACK_BeginInvoke_m7FA177CACC6FF4FC14992C7E66282173F3BFA03D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_addInput_m1235C517F88AAE47B6F4A7851D88E26DD54D509C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_clearHandle_m0942228427F13F284BE689298BC0AA1A58C5E8DE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_getInfo_m53B878536F6955F09E3DABF1BE0A859506E9F14B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_getInfo_m610C2DFF511AE47B571676D398136D93E7E6BA00_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_getParameterBool_mC2E00FAE1822A4405D180DE4D20A3556E177C8C1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_getParameterData_m317D997B9F2401DEB58AD919CFEA4F310FEBDAB2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_getParameterFloat_m0F47E864FA9E66C02B869531F6766B6B9A134902_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_getParameterInfo_m3691F7765AC1E3CEA0DC3D71E976CD89C25DFF97_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_getParameterInt_mEFE0D395D967F2A9C9E1F6982E61CC12437CC41A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_hasHandle_m868B7E09CABEDF221DF99B3E3E4CEEFBBAAB94F0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DSP_setParameterData_m2ABDC24CA116256E4EAD46675812E55A3C1A376C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Debug_Initialize_m40FFA79E069B196800950100EB202FCF5F6D1E67_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Error_String_m4E033F159090A200942421BB1204E0EF1E0A1C6B_MetadataUsageId;
struct ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604 ;
struct DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291;;
struct DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshaled_pinvoke;
struct DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshaled_pinvoke;;
struct DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2;;
struct DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_pinvoke;
struct DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_pinvoke;;
struct DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD;;
struct DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshaled_com;
struct DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshaled_com;;
struct DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshaled_pinvoke;
struct DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshaled_pinvoke;;
struct DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA;;
struct DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshaled_com;
struct DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshaled_com;;
struct DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshaled_pinvoke;
struct DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshaled_pinvoke;;
struct DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D;;
struct DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshaled_com;
struct DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshaled_com;;
struct DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshaled_pinvoke;
struct DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshaled_pinvoke;;
struct Delegate_t_marshaled_com;
struct Delegate_t_marshaled_pinvoke;

struct ATTRIBUTES_3DU5BU5D_t5427259BEC6244F4081124FF88F25A12CBF725EF;
struct CHANNELMASKU5BU5D_tD17766B4270FA0C460B27576B618990903A56A5B;
struct ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821;
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86;
struct Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83;
struct IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD;
struct SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5;
struct SingleU5BU5DU5BU5D_tC2E25498616DDBEA3B03D43855DEBC928046392E;
struct UInt64U5BU5D_tA808FE881491284FF25AFDF5C4BC92A826031EF4;

IL2CPP_EXTERN_C_BEGIN
IL2CPP_EXTERN_C_END

#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// <Module>
struct  U3CModuleU3E_t663C82293580521E4AE8E136FF7B9C981B4A6E24 
{
public:

public:
};


// System.Object


// FMOD.CONSTANTS
struct  CONSTANTS_tB41B65F58BF62599BB23F9C1E78A32C0BBED3D2E  : public RuntimeObject
{
public:

public:
};


// FMOD.Error
struct  Error_tF66A4E578ACBA0BAF6AD67ACE64E592AB5ADB83F  : public RuntimeObject
{
public:

public:
};

struct Il2CppArrayBounds;

// System.Array


// System.String
struct  String_t  : public RuntimeObject
{
public:
	// System.Int32 System.String::m_stringLength
	int32_t ___m_stringLength_0;
	// System.Char System.String::m_firstChar
	Il2CppChar ___m_firstChar_1;

public:
	inline static int32_t get_offset_of_m_stringLength_0() { return static_cast<int32_t>(offsetof(String_t, ___m_stringLength_0)); }
	inline int32_t get_m_stringLength_0() const { return ___m_stringLength_0; }
	inline int32_t* get_address_of_m_stringLength_0() { return &___m_stringLength_0; }
	inline void set_m_stringLength_0(int32_t value)
	{
		___m_stringLength_0 = value;
	}

	inline static int32_t get_offset_of_m_firstChar_1() { return static_cast<int32_t>(offsetof(String_t, ___m_firstChar_1)); }
	inline Il2CppChar get_m_firstChar_1() const { return ___m_firstChar_1; }
	inline Il2CppChar* get_address_of_m_firstChar_1() { return &___m_firstChar_1; }
	inline void set_m_firstChar_1(Il2CppChar value)
	{
		___m_firstChar_1 = value;
	}
};

struct String_t_StaticFields
{
public:
	// System.String System.String::Empty
	String_t* ___Empty_5;

public:
	inline static int32_t get_offset_of_Empty_5() { return static_cast<int32_t>(offsetof(String_t_StaticFields, ___Empty_5)); }
	inline String_t* get_Empty_5() const { return ___Empty_5; }
	inline String_t** get_address_of_Empty_5() { return &___Empty_5; }
	inline void set_Empty_5(String_t* value)
	{
		___Empty_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Empty_5), (void*)value);
	}
};


// System.ValueType
struct  ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF  : public RuntimeObject
{
public:

public:
};

// Native definition for P/Invoke marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_com
{
};

// FMOD.CHANNELCONTROL_DSP_INDEX
struct  CHANNELCONTROL_DSP_INDEX_tAB7691B2299F8C5DE96C8D902FB1C5A9C4B579C1 
{
public:
	union
	{
		struct
		{
		};
		uint8_t CHANNELCONTROL_DSP_INDEX_tAB7691B2299F8C5DE96C8D902FB1C5A9C4B579C1__padding[1];
	};

public:
};


// FMOD.COMPLEX
struct  COMPLEX_t2B00196B5684BC071BA62F43EBBD6081D18F8CC2 
{
public:
	// System.Single FMOD.COMPLEX::real
	float ___real_0;
	// System.Single FMOD.COMPLEX::imag
	float ___imag_1;

public:
	inline static int32_t get_offset_of_real_0() { return static_cast<int32_t>(offsetof(COMPLEX_t2B00196B5684BC071BA62F43EBBD6081D18F8CC2, ___real_0)); }
	inline float get_real_0() const { return ___real_0; }
	inline float* get_address_of_real_0() { return &___real_0; }
	inline void set_real_0(float value)
	{
		___real_0 = value;
	}

	inline static int32_t get_offset_of_imag_1() { return static_cast<int32_t>(offsetof(COMPLEX_t2B00196B5684BC071BA62F43EBBD6081D18F8CC2, ___imag_1)); }
	inline float get_imag_1() const { return ___imag_1; }
	inline float* get_address_of_imag_1() { return &___imag_1; }
	inline void set_imag_1(float value)
	{
		___imag_1 = value;
	}
};


// FMOD.DSP_PARAMETER_DESC_DATA
struct  DSP_PARAMETER_DESC_DATA_t89D149EB4BE38580C0EAE075A7496296F0BC4DA9 
{
public:
	// System.Int32 FMOD.DSP_PARAMETER_DESC_DATA::datatype
	int32_t ___datatype_0;

public:
	inline static int32_t get_offset_of_datatype_0() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_DESC_DATA_t89D149EB4BE38580C0EAE075A7496296F0BC4DA9, ___datatype_0)); }
	inline int32_t get_datatype_0() const { return ___datatype_0; }
	inline int32_t* get_address_of_datatype_0() { return &___datatype_0; }
	inline void set_datatype_0(int32_t value)
	{
		___datatype_0 = value;
	}
};


// FMOD.DSP_PARAMETER_OVERALLGAIN
struct  DSP_PARAMETER_OVERALLGAIN_t8D5E60B6A2AD8C968117AF0A9C03070CC6F283A2 
{
public:
	// System.Single FMOD.DSP_PARAMETER_OVERALLGAIN::linear_gain
	float ___linear_gain_0;
	// System.Single FMOD.DSP_PARAMETER_OVERALLGAIN::linear_gain_additive
	float ___linear_gain_additive_1;

public:
	inline static int32_t get_offset_of_linear_gain_0() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_OVERALLGAIN_t8D5E60B6A2AD8C968117AF0A9C03070CC6F283A2, ___linear_gain_0)); }
	inline float get_linear_gain_0() const { return ___linear_gain_0; }
	inline float* get_address_of_linear_gain_0() { return &___linear_gain_0; }
	inline void set_linear_gain_0(float value)
	{
		___linear_gain_0 = value;
	}

	inline static int32_t get_offset_of_linear_gain_additive_1() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_OVERALLGAIN_t8D5E60B6A2AD8C968117AF0A9C03070CC6F283A2, ___linear_gain_additive_1)); }
	inline float get_linear_gain_additive_1() const { return ___linear_gain_additive_1; }
	inline float* get_address_of_linear_gain_additive_1() { return &___linear_gain_additive_1; }
	inline void set_linear_gain_additive_1(float value)
	{
		___linear_gain_additive_1 = value;
	}
};


// FMOD.DSP_PARAMETER_SIDECHAIN
struct  DSP_PARAMETER_SIDECHAIN_t9D9662E28DA59A795A7ECD90724973712C01F20C 
{
public:
	// System.Int32 FMOD.DSP_PARAMETER_SIDECHAIN::sidechainenable
	int32_t ___sidechainenable_0;

public:
	inline static int32_t get_offset_of_sidechainenable_0() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_SIDECHAIN_t9D9662E28DA59A795A7ECD90724973712C01F20C, ___sidechainenable_0)); }
	inline int32_t get_sidechainenable_0() const { return ___sidechainenable_0; }
	inline int32_t* get_address_of_sidechainenable_0() { return &___sidechainenable_0; }
	inline void set_sidechainenable_0(int32_t value)
	{
		___sidechainenable_0 = value;
	}
};


// FMOD.DSP_STATE_DFT_FUNCTIONS
struct  DSP_STATE_DFT_FUNCTIONS_t91F97904EBEE894390A661250A4ECDB1C4FF7900 
{
public:
	// FMOD.DSP_DFT_FFTREAL_FUNC FMOD.DSP_STATE_DFT_FUNCTIONS::fftreal
	DSP_DFT_FFTREAL_FUNC_t73B4E8FC3D8FA9D701BC82CD1EBD979E3873D3E5 * ___fftreal_0;
	// FMOD.DSP_DFT_IFFTREAL_FUNC FMOD.DSP_STATE_DFT_FUNCTIONS::inversefftreal
	DSP_DFT_IFFTREAL_FUNC_t536096AAC4FEBBF600001E6FAE00307F932D2494 * ___inversefftreal_1;

public:
	inline static int32_t get_offset_of_fftreal_0() { return static_cast<int32_t>(offsetof(DSP_STATE_DFT_FUNCTIONS_t91F97904EBEE894390A661250A4ECDB1C4FF7900, ___fftreal_0)); }
	inline DSP_DFT_FFTREAL_FUNC_t73B4E8FC3D8FA9D701BC82CD1EBD979E3873D3E5 * get_fftreal_0() const { return ___fftreal_0; }
	inline DSP_DFT_FFTREAL_FUNC_t73B4E8FC3D8FA9D701BC82CD1EBD979E3873D3E5 ** get_address_of_fftreal_0() { return &___fftreal_0; }
	inline void set_fftreal_0(DSP_DFT_FFTREAL_FUNC_t73B4E8FC3D8FA9D701BC82CD1EBD979E3873D3E5 * value)
	{
		___fftreal_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___fftreal_0), (void*)value);
	}

	inline static int32_t get_offset_of_inversefftreal_1() { return static_cast<int32_t>(offsetof(DSP_STATE_DFT_FUNCTIONS_t91F97904EBEE894390A661250A4ECDB1C4FF7900, ___inversefftreal_1)); }
	inline DSP_DFT_IFFTREAL_FUNC_t536096AAC4FEBBF600001E6FAE00307F932D2494 * get_inversefftreal_1() const { return ___inversefftreal_1; }
	inline DSP_DFT_IFFTREAL_FUNC_t536096AAC4FEBBF600001E6FAE00307F932D2494 ** get_address_of_inversefftreal_1() { return &___inversefftreal_1; }
	inline void set_inversefftreal_1(DSP_DFT_IFFTREAL_FUNC_t536096AAC4FEBBF600001E6FAE00307F932D2494 * value)
	{
		___inversefftreal_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___inversefftreal_1), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of FMOD.DSP_STATE_DFT_FUNCTIONS
struct DSP_STATE_DFT_FUNCTIONS_t91F97904EBEE894390A661250A4ECDB1C4FF7900_marshaled_pinvoke
{
	Il2CppMethodPointer ___fftreal_0;
	Il2CppMethodPointer ___inversefftreal_1;
};
// Native definition for COM marshalling of FMOD.DSP_STATE_DFT_FUNCTIONS
struct DSP_STATE_DFT_FUNCTIONS_t91F97904EBEE894390A661250A4ECDB1C4FF7900_marshaled_com
{
	Il2CppMethodPointer ___fftreal_0;
	Il2CppMethodPointer ___inversefftreal_1;
};

// FMOD.DSP_STATE_PAN_FUNCTIONS
struct  DSP_STATE_PAN_FUNCTIONS_tAE8544175DB4E96F165A7CFF512529541ABD9B24 
{
public:
	// FMOD.DSP_PAN_SUMMONOMATRIX_FUNC FMOD.DSP_STATE_PAN_FUNCTIONS::summonomatrix
	DSP_PAN_SUMMONOMATRIX_FUNC_t4FEAF41A824EF70D7AE3CC079690C889B3F3584E * ___summonomatrix_0;
	// FMOD.DSP_PAN_SUMSTEREOMATRIX_FUNC FMOD.DSP_STATE_PAN_FUNCTIONS::sumstereomatrix
	DSP_PAN_SUMSTEREOMATRIX_FUNC_tBDAFBEB725DE435CC966204D9A134DF3D5BB8092 * ___sumstereomatrix_1;
	// FMOD.DSP_PAN_SUMSURROUNDMATRIX_FUNC FMOD.DSP_STATE_PAN_FUNCTIONS::sumsurroundmatrix
	DSP_PAN_SUMSURROUNDMATRIX_FUNC_t57199FB9B779135FCFB32AFE2B8ADE90F5065619 * ___sumsurroundmatrix_2;
	// FMOD.DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC FMOD.DSP_STATE_PAN_FUNCTIONS::summonotosurroundmatrix
	DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC_tA7FBF2E8C0EA206F652B515515C002B789849C7B * ___summonotosurroundmatrix_3;
	// FMOD.DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC FMOD.DSP_STATE_PAN_FUNCTIONS::sumstereotosurroundmatrix
	DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC_tD083096D805C0022D80A8CEE8DE038D2588A63F3 * ___sumstereotosurroundmatrix_4;
	// FMOD.DSP_PAN_GETROLLOFFGAIN_FUNC FMOD.DSP_STATE_PAN_FUNCTIONS::getrolloffgain
	DSP_PAN_GETROLLOFFGAIN_FUNC_tB6AB67EB1F301E9C6AFD60A29B8314A585D3A05C * ___getrolloffgain_5;

public:
	inline static int32_t get_offset_of_summonomatrix_0() { return static_cast<int32_t>(offsetof(DSP_STATE_PAN_FUNCTIONS_tAE8544175DB4E96F165A7CFF512529541ABD9B24, ___summonomatrix_0)); }
	inline DSP_PAN_SUMMONOMATRIX_FUNC_t4FEAF41A824EF70D7AE3CC079690C889B3F3584E * get_summonomatrix_0() const { return ___summonomatrix_0; }
	inline DSP_PAN_SUMMONOMATRIX_FUNC_t4FEAF41A824EF70D7AE3CC079690C889B3F3584E ** get_address_of_summonomatrix_0() { return &___summonomatrix_0; }
	inline void set_summonomatrix_0(DSP_PAN_SUMMONOMATRIX_FUNC_t4FEAF41A824EF70D7AE3CC079690C889B3F3584E * value)
	{
		___summonomatrix_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___summonomatrix_0), (void*)value);
	}

	inline static int32_t get_offset_of_sumstereomatrix_1() { return static_cast<int32_t>(offsetof(DSP_STATE_PAN_FUNCTIONS_tAE8544175DB4E96F165A7CFF512529541ABD9B24, ___sumstereomatrix_1)); }
	inline DSP_PAN_SUMSTEREOMATRIX_FUNC_tBDAFBEB725DE435CC966204D9A134DF3D5BB8092 * get_sumstereomatrix_1() const { return ___sumstereomatrix_1; }
	inline DSP_PAN_SUMSTEREOMATRIX_FUNC_tBDAFBEB725DE435CC966204D9A134DF3D5BB8092 ** get_address_of_sumstereomatrix_1() { return &___sumstereomatrix_1; }
	inline void set_sumstereomatrix_1(DSP_PAN_SUMSTEREOMATRIX_FUNC_tBDAFBEB725DE435CC966204D9A134DF3D5BB8092 * value)
	{
		___sumstereomatrix_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sumstereomatrix_1), (void*)value);
	}

	inline static int32_t get_offset_of_sumsurroundmatrix_2() { return static_cast<int32_t>(offsetof(DSP_STATE_PAN_FUNCTIONS_tAE8544175DB4E96F165A7CFF512529541ABD9B24, ___sumsurroundmatrix_2)); }
	inline DSP_PAN_SUMSURROUNDMATRIX_FUNC_t57199FB9B779135FCFB32AFE2B8ADE90F5065619 * get_sumsurroundmatrix_2() const { return ___sumsurroundmatrix_2; }
	inline DSP_PAN_SUMSURROUNDMATRIX_FUNC_t57199FB9B779135FCFB32AFE2B8ADE90F5065619 ** get_address_of_sumsurroundmatrix_2() { return &___sumsurroundmatrix_2; }
	inline void set_sumsurroundmatrix_2(DSP_PAN_SUMSURROUNDMATRIX_FUNC_t57199FB9B779135FCFB32AFE2B8ADE90F5065619 * value)
	{
		___sumsurroundmatrix_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sumsurroundmatrix_2), (void*)value);
	}

	inline static int32_t get_offset_of_summonotosurroundmatrix_3() { return static_cast<int32_t>(offsetof(DSP_STATE_PAN_FUNCTIONS_tAE8544175DB4E96F165A7CFF512529541ABD9B24, ___summonotosurroundmatrix_3)); }
	inline DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC_tA7FBF2E8C0EA206F652B515515C002B789849C7B * get_summonotosurroundmatrix_3() const { return ___summonotosurroundmatrix_3; }
	inline DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC_tA7FBF2E8C0EA206F652B515515C002B789849C7B ** get_address_of_summonotosurroundmatrix_3() { return &___summonotosurroundmatrix_3; }
	inline void set_summonotosurroundmatrix_3(DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC_tA7FBF2E8C0EA206F652B515515C002B789849C7B * value)
	{
		___summonotosurroundmatrix_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___summonotosurroundmatrix_3), (void*)value);
	}

	inline static int32_t get_offset_of_sumstereotosurroundmatrix_4() { return static_cast<int32_t>(offsetof(DSP_STATE_PAN_FUNCTIONS_tAE8544175DB4E96F165A7CFF512529541ABD9B24, ___sumstereotosurroundmatrix_4)); }
	inline DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC_tD083096D805C0022D80A8CEE8DE038D2588A63F3 * get_sumstereotosurroundmatrix_4() const { return ___sumstereotosurroundmatrix_4; }
	inline DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC_tD083096D805C0022D80A8CEE8DE038D2588A63F3 ** get_address_of_sumstereotosurroundmatrix_4() { return &___sumstereotosurroundmatrix_4; }
	inline void set_sumstereotosurroundmatrix_4(DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC_tD083096D805C0022D80A8CEE8DE038D2588A63F3 * value)
	{
		___sumstereotosurroundmatrix_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sumstereotosurroundmatrix_4), (void*)value);
	}

	inline static int32_t get_offset_of_getrolloffgain_5() { return static_cast<int32_t>(offsetof(DSP_STATE_PAN_FUNCTIONS_tAE8544175DB4E96F165A7CFF512529541ABD9B24, ___getrolloffgain_5)); }
	inline DSP_PAN_GETROLLOFFGAIN_FUNC_tB6AB67EB1F301E9C6AFD60A29B8314A585D3A05C * get_getrolloffgain_5() const { return ___getrolloffgain_5; }
	inline DSP_PAN_GETROLLOFFGAIN_FUNC_tB6AB67EB1F301E9C6AFD60A29B8314A585D3A05C ** get_address_of_getrolloffgain_5() { return &___getrolloffgain_5; }
	inline void set_getrolloffgain_5(DSP_PAN_GETROLLOFFGAIN_FUNC_tB6AB67EB1F301E9C6AFD60A29B8314A585D3A05C * value)
	{
		___getrolloffgain_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___getrolloffgain_5), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of FMOD.DSP_STATE_PAN_FUNCTIONS
struct DSP_STATE_PAN_FUNCTIONS_tAE8544175DB4E96F165A7CFF512529541ABD9B24_marshaled_pinvoke
{
	Il2CppMethodPointer ___summonomatrix_0;
	Il2CppMethodPointer ___sumstereomatrix_1;
	Il2CppMethodPointer ___sumsurroundmatrix_2;
	Il2CppMethodPointer ___summonotosurroundmatrix_3;
	Il2CppMethodPointer ___sumstereotosurroundmatrix_4;
	Il2CppMethodPointer ___getrolloffgain_5;
};
// Native definition for COM marshalling of FMOD.DSP_STATE_PAN_FUNCTIONS
struct DSP_STATE_PAN_FUNCTIONS_tAE8544175DB4E96F165A7CFF512529541ABD9B24_marshaled_com
{
	Il2CppMethodPointer ___summonomatrix_0;
	Il2CppMethodPointer ___sumstereomatrix_1;
	Il2CppMethodPointer ___sumsurroundmatrix_2;
	Il2CppMethodPointer ___summonotosurroundmatrix_3;
	Il2CppMethodPointer ___sumstereotosurroundmatrix_4;
	Il2CppMethodPointer ___getrolloffgain_5;
};

// FMOD.Debug
struct  Debug_tBC7EE68C97EDBA311B48B09947850F18694F28F6 
{
public:
	union
	{
		struct
		{
		};
		uint8_t Debug_tBC7EE68C97EDBA311B48B09947850F18694F28F6__padding[1];
	};

public:
};


// FMOD.VECTOR
struct  VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D 
{
public:
	// System.Single FMOD.VECTOR::x
	float ___x_0;
	// System.Single FMOD.VECTOR::y
	float ___y_1;
	// System.Single FMOD.VECTOR::z
	float ___z_2;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}

	inline static int32_t get_offset_of_z_2() { return static_cast<int32_t>(offsetof(VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D, ___z_2)); }
	inline float get_z_2() const { return ___z_2; }
	inline float* get_address_of_z_2() { return &___z_2; }
	inline void set_z_2(float value)
	{
		___z_2 = value;
	}
};


// System.Boolean
struct  Boolean_tB53F6830F670160873277339AA58F15CAED4399C 
{
public:
	// System.Boolean System.Boolean::m_value
	bool ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C, ___m_value_0)); }
	inline bool get_m_value_0() const { return ___m_value_0; }
	inline bool* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(bool value)
	{
		___m_value_0 = value;
	}
};

struct Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields
{
public:
	// System.String System.Boolean::TrueString
	String_t* ___TrueString_5;
	// System.String System.Boolean::FalseString
	String_t* ___FalseString_6;

public:
	inline static int32_t get_offset_of_TrueString_5() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___TrueString_5)); }
	inline String_t* get_TrueString_5() const { return ___TrueString_5; }
	inline String_t** get_address_of_TrueString_5() { return &___TrueString_5; }
	inline void set_TrueString_5(String_t* value)
	{
		___TrueString_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___TrueString_5), (void*)value);
	}

	inline static int32_t get_offset_of_FalseString_6() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___FalseString_6)); }
	inline String_t* get_FalseString_6() const { return ___FalseString_6; }
	inline String_t** get_address_of_FalseString_6() { return &___FalseString_6; }
	inline void set_FalseString_6(String_t* value)
	{
		___FalseString_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FalseString_6), (void*)value);
	}
};


// System.Byte
struct  Byte_tF87C579059BD4633E6840EBBBEEF899C6E33EF07 
{
public:
	// System.Byte System.Byte::m_value
	uint8_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Byte_tF87C579059BD4633E6840EBBBEEF899C6E33EF07, ___m_value_0)); }
	inline uint8_t get_m_value_0() const { return ___m_value_0; }
	inline uint8_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint8_t value)
	{
		___m_value_0 = value;
	}
};


// System.Enum
struct  Enum_t2AF27C02B8653AE29442467390005ABC74D8F521  : public ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF
{
public:

public:
};

struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields
{
public:
	// System.Char[] System.Enum::enumSeperatorCharArray
	CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* ___enumSeperatorCharArray_0;

public:
	inline static int32_t get_offset_of_enumSeperatorCharArray_0() { return static_cast<int32_t>(offsetof(Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields, ___enumSeperatorCharArray_0)); }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* get_enumSeperatorCharArray_0() const { return ___enumSeperatorCharArray_0; }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2** get_address_of_enumSeperatorCharArray_0() { return &___enumSeperatorCharArray_0; }
	inline void set_enumSeperatorCharArray_0(CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* value)
	{
		___enumSeperatorCharArray_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___enumSeperatorCharArray_0), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_com
{
};

// System.Int32
struct  Int32_t585191389E07734F19F3156FF88FB3EF4800D102 
{
public:
	// System.Int32 System.Int32::m_value
	int32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Int32_t585191389E07734F19F3156FF88FB3EF4800D102, ___m_value_0)); }
	inline int32_t get_m_value_0() const { return ___m_value_0; }
	inline int32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(int32_t value)
	{
		___m_value_0 = value;
	}
};


// System.IntPtr
struct  IntPtr_t 
{
public:
	// System.Void* System.IntPtr::m_value
	void* ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(IntPtr_t, ___m_value_0)); }
	inline void* get_m_value_0() const { return ___m_value_0; }
	inline void** get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(void* value)
	{
		___m_value_0 = value;
	}
};

struct IntPtr_t_StaticFields
{
public:
	// System.IntPtr System.IntPtr::Zero
	intptr_t ___Zero_1;

public:
	inline static int32_t get_offset_of_Zero_1() { return static_cast<int32_t>(offsetof(IntPtr_t_StaticFields, ___Zero_1)); }
	inline intptr_t get_Zero_1() const { return ___Zero_1; }
	inline intptr_t* get_address_of_Zero_1() { return &___Zero_1; }
	inline void set_Zero_1(intptr_t value)
	{
		___Zero_1 = value;
	}
};


// System.Runtime.InteropServices.GCHandle
struct  GCHandle_t39FAEE3EA592432C93B574A31DD83B87F1847DE3 
{
public:
	// System.Int32 System.Runtime.InteropServices.GCHandle::handle
	int32_t ___handle_0;

public:
	inline static int32_t get_offset_of_handle_0() { return static_cast<int32_t>(offsetof(GCHandle_t39FAEE3EA592432C93B574A31DD83B87F1847DE3, ___handle_0)); }
	inline int32_t get_handle_0() const { return ___handle_0; }
	inline int32_t* get_address_of_handle_0() { return &___handle_0; }
	inline void set_handle_0(int32_t value)
	{
		___handle_0 = value;
	}
};


// System.Single
struct  Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1 
{
public:
	// System.Single System.Single::m_value
	float ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1, ___m_value_0)); }
	inline float get_m_value_0() const { return ___m_value_0; }
	inline float* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(float value)
	{
		___m_value_0 = value;
	}
};


// System.UInt32
struct  UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B 
{
public:
	// System.UInt32 System.UInt32::m_value
	uint32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B, ___m_value_0)); }
	inline uint32_t get_m_value_0() const { return ___m_value_0; }
	inline uint32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint32_t value)
	{
		___m_value_0 = value;
	}
};


// System.UInt64
struct  UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E 
{
public:
	// System.UInt64 System.UInt64::m_value
	uint64_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E, ___m_value_0)); }
	inline uint64_t get_m_value_0() const { return ___m_value_0; }
	inline uint64_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint64_t value)
	{
		___m_value_0 = value;
	}
};


// System.Void
struct  Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017 
{
public:
	union
	{
		struct
		{
		};
		uint8_t Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017__padding[1];
	};

public:
};


// FMOD.ASYNCREADINFO
struct  ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3 
{
public:
	// System.IntPtr FMOD.ASYNCREADINFO::handle
	intptr_t ___handle_0;
	// System.UInt32 FMOD.ASYNCREADINFO::offset
	uint32_t ___offset_1;
	// System.UInt32 FMOD.ASYNCREADINFO::sizebytes
	uint32_t ___sizebytes_2;
	// System.Int32 FMOD.ASYNCREADINFO::priority
	int32_t ___priority_3;
	// System.IntPtr FMOD.ASYNCREADINFO::userdata
	intptr_t ___userdata_4;
	// System.IntPtr FMOD.ASYNCREADINFO::buffer
	intptr_t ___buffer_5;
	// System.UInt32 FMOD.ASYNCREADINFO::bytesread
	uint32_t ___bytesread_6;
	// FMOD.FILE_ASYNCDONE_FUNC FMOD.ASYNCREADINFO::done
	FILE_ASYNCDONE_FUNC_tFBC4B11B35F53B2638037291E5304EA64DA389BC * ___done_7;

public:
	inline static int32_t get_offset_of_handle_0() { return static_cast<int32_t>(offsetof(ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3, ___handle_0)); }
	inline intptr_t get_handle_0() const { return ___handle_0; }
	inline intptr_t* get_address_of_handle_0() { return &___handle_0; }
	inline void set_handle_0(intptr_t value)
	{
		___handle_0 = value;
	}

	inline static int32_t get_offset_of_offset_1() { return static_cast<int32_t>(offsetof(ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3, ___offset_1)); }
	inline uint32_t get_offset_1() const { return ___offset_1; }
	inline uint32_t* get_address_of_offset_1() { return &___offset_1; }
	inline void set_offset_1(uint32_t value)
	{
		___offset_1 = value;
	}

	inline static int32_t get_offset_of_sizebytes_2() { return static_cast<int32_t>(offsetof(ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3, ___sizebytes_2)); }
	inline uint32_t get_sizebytes_2() const { return ___sizebytes_2; }
	inline uint32_t* get_address_of_sizebytes_2() { return &___sizebytes_2; }
	inline void set_sizebytes_2(uint32_t value)
	{
		___sizebytes_2 = value;
	}

	inline static int32_t get_offset_of_priority_3() { return static_cast<int32_t>(offsetof(ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3, ___priority_3)); }
	inline int32_t get_priority_3() const { return ___priority_3; }
	inline int32_t* get_address_of_priority_3() { return &___priority_3; }
	inline void set_priority_3(int32_t value)
	{
		___priority_3 = value;
	}

	inline static int32_t get_offset_of_userdata_4() { return static_cast<int32_t>(offsetof(ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3, ___userdata_4)); }
	inline intptr_t get_userdata_4() const { return ___userdata_4; }
	inline intptr_t* get_address_of_userdata_4() { return &___userdata_4; }
	inline void set_userdata_4(intptr_t value)
	{
		___userdata_4 = value;
	}

	inline static int32_t get_offset_of_buffer_5() { return static_cast<int32_t>(offsetof(ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3, ___buffer_5)); }
	inline intptr_t get_buffer_5() const { return ___buffer_5; }
	inline intptr_t* get_address_of_buffer_5() { return &___buffer_5; }
	inline void set_buffer_5(intptr_t value)
	{
		___buffer_5 = value;
	}

	inline static int32_t get_offset_of_bytesread_6() { return static_cast<int32_t>(offsetof(ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3, ___bytesread_6)); }
	inline uint32_t get_bytesread_6() const { return ___bytesread_6; }
	inline uint32_t* get_address_of_bytesread_6() { return &___bytesread_6; }
	inline void set_bytesread_6(uint32_t value)
	{
		___bytesread_6 = value;
	}

	inline static int32_t get_offset_of_done_7() { return static_cast<int32_t>(offsetof(ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3, ___done_7)); }
	inline FILE_ASYNCDONE_FUNC_tFBC4B11B35F53B2638037291E5304EA64DA389BC * get_done_7() const { return ___done_7; }
	inline FILE_ASYNCDONE_FUNC_tFBC4B11B35F53B2638037291E5304EA64DA389BC ** get_address_of_done_7() { return &___done_7; }
	inline void set_done_7(FILE_ASYNCDONE_FUNC_tFBC4B11B35F53B2638037291E5304EA64DA389BC * value)
	{
		___done_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___done_7), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of FMOD.ASYNCREADINFO
struct ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3_marshaled_pinvoke
{
	intptr_t ___handle_0;
	uint32_t ___offset_1;
	uint32_t ___sizebytes_2;
	int32_t ___priority_3;
	intptr_t ___userdata_4;
	intptr_t ___buffer_5;
	uint32_t ___bytesread_6;
	Il2CppMethodPointer ___done_7;
};
// Native definition for COM marshalling of FMOD.ASYNCREADINFO
struct ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3_marshaled_com
{
	intptr_t ___handle_0;
	uint32_t ___offset_1;
	uint32_t ___sizebytes_2;
	int32_t ___priority_3;
	intptr_t ___userdata_4;
	intptr_t ___buffer_5;
	uint32_t ___bytesread_6;
	Il2CppMethodPointer ___done_7;
};

// FMOD.ATTRIBUTES_3D
struct  ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604 
{
public:
	// FMOD.VECTOR FMOD.ATTRIBUTES_3D::position
	VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D  ___position_0;
	// FMOD.VECTOR FMOD.ATTRIBUTES_3D::velocity
	VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D  ___velocity_1;
	// FMOD.VECTOR FMOD.ATTRIBUTES_3D::forward
	VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D  ___forward_2;
	// FMOD.VECTOR FMOD.ATTRIBUTES_3D::up
	VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D  ___up_3;

public:
	inline static int32_t get_offset_of_position_0() { return static_cast<int32_t>(offsetof(ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604, ___position_0)); }
	inline VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D  get_position_0() const { return ___position_0; }
	inline VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * get_address_of_position_0() { return &___position_0; }
	inline void set_position_0(VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D  value)
	{
		___position_0 = value;
	}

	inline static int32_t get_offset_of_velocity_1() { return static_cast<int32_t>(offsetof(ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604, ___velocity_1)); }
	inline VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D  get_velocity_1() const { return ___velocity_1; }
	inline VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * get_address_of_velocity_1() { return &___velocity_1; }
	inline void set_velocity_1(VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D  value)
	{
		___velocity_1 = value;
	}

	inline static int32_t get_offset_of_forward_2() { return static_cast<int32_t>(offsetof(ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604, ___forward_2)); }
	inline VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D  get_forward_2() const { return ___forward_2; }
	inline VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * get_address_of_forward_2() { return &___forward_2; }
	inline void set_forward_2(VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D  value)
	{
		___forward_2 = value;
	}

	inline static int32_t get_offset_of_up_3() { return static_cast<int32_t>(offsetof(ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604, ___up_3)); }
	inline VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D  get_up_3() const { return ___up_3; }
	inline VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * get_address_of_up_3() { return &___up_3; }
	inline void set_up_3(VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D  value)
	{
		___up_3 = value;
	}
};


// FMOD.CHANNELCONTROL_CALLBACK_TYPE
struct  CHANNELCONTROL_CALLBACK_TYPE_tD8A1A40A9AB52B763E8BA35E8C0D3E8FD4807085 
{
public:
	// System.Int32 FMOD.CHANNELCONTROL_CALLBACK_TYPE::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(CHANNELCONTROL_CALLBACK_TYPE_tD8A1A40A9AB52B763E8BA35E8C0D3E8FD4807085, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.CHANNELCONTROL_TYPE
struct  CHANNELCONTROL_TYPE_t727DE3EF3D7858112AF66D3B6F2C202B9DAA295C 
{
public:
	// System.Int32 FMOD.CHANNELCONTROL_TYPE::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(CHANNELCONTROL_TYPE_t727DE3EF3D7858112AF66D3B6F2C202B9DAA295C, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.CHANNELMASK
struct  CHANNELMASK_t7F51D2E2062C22CF864A752E22262AE47BC660B5 
{
public:
	// System.UInt32 FMOD.CHANNELMASK::value__
	uint32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(CHANNELMASK_t7F51D2E2062C22CF864A752E22262AE47BC660B5, ___value___2)); }
	inline uint32_t get_value___2() const { return ___value___2; }
	inline uint32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(uint32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.CHANNELORDER
struct  CHANNELORDER_t86B15BD2F278B06DDF584B49534E6C157B3FCB0A 
{
public:
	// System.Int32 FMOD.CHANNELORDER::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(CHANNELORDER_t86B15BD2F278B06DDF584B49534E6C157B3FCB0A, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.Channel
struct  Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 
{
public:
	// System.IntPtr FMOD.Channel::handle
	intptr_t ___handle_0;

public:
	inline static int32_t get_offset_of_handle_0() { return static_cast<int32_t>(offsetof(Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4, ___handle_0)); }
	inline intptr_t get_handle_0() const { return ___handle_0; }
	inline intptr_t* get_address_of_handle_0() { return &___handle_0; }
	inline void set_handle_0(intptr_t value)
	{
		___handle_0 = value;
	}
};


// FMOD.ChannelGroup
struct  ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 
{
public:
	// System.IntPtr FMOD.ChannelGroup::handle
	intptr_t ___handle_0;

public:
	inline static int32_t get_offset_of_handle_0() { return static_cast<int32_t>(offsetof(ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069, ___handle_0)); }
	inline intptr_t get_handle_0() const { return ___handle_0; }
	inline intptr_t* get_address_of_handle_0() { return &___handle_0; }
	inline void set_handle_0(intptr_t value)
	{
		___handle_0 = value;
	}
};


// FMOD.DEBUG_FLAGS
struct  DEBUG_FLAGS_t064690B82E3CFF643A403FD4A2D0322FE1B0AD56 
{
public:
	// System.UInt32 FMOD.DEBUG_FLAGS::value__
	uint32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DEBUG_FLAGS_t064690B82E3CFF643A403FD4A2D0322FE1B0AD56, ___value___2)); }
	inline uint32_t get_value___2() const { return ___value___2; }
	inline uint32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(uint32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DEBUG_MODE
struct  DEBUG_MODE_t267022F6C33E24A1481B4E1E2CDAC34C5713CCD2 
{
public:
	// System.Int32 FMOD.DEBUG_MODE::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DEBUG_MODE_t267022F6C33E24A1481B4E1E2CDAC34C5713CCD2, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DRIVER_STATE
struct  DRIVER_STATE_tBCD5DFBDB00059EF6883D2B39A4E2D50ABDC6285 
{
public:
	// System.UInt32 FMOD.DRIVER_STATE::value__
	uint32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DRIVER_STATE_tBCD5DFBDB00059EF6883D2B39A4E2D50ABDC6285, ___value___2)); }
	inline uint32_t get_value___2() const { return ___value___2; }
	inline uint32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(uint32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP
struct  DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 
{
public:
	// System.IntPtr FMOD.DSP::handle
	intptr_t ___handle_0;

public:
	inline static int32_t get_offset_of_handle_0() { return static_cast<int32_t>(offsetof(DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0, ___handle_0)); }
	inline intptr_t get_handle_0() const { return ___handle_0; }
	inline intptr_t* get_address_of_handle_0() { return &___handle_0; }
	inline void set_handle_0(intptr_t value)
	{
		___handle_0 = value;
	}
};


// FMOD.DSPCONNECTION_TYPE
struct  DSPCONNECTION_TYPE_t71A1321313345E8B352D34BB9CDC53E6D461C6ED 
{
public:
	// System.Int32 FMOD.DSPCONNECTION_TYPE::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSPCONNECTION_TYPE_t71A1321313345E8B352D34BB9CDC53E6D461C6ED, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSPConnection
struct  DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 
{
public:
	// System.IntPtr FMOD.DSPConnection::handle
	intptr_t ___handle_0;

public:
	inline static int32_t get_offset_of_handle_0() { return static_cast<int32_t>(offsetof(DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0, ___handle_0)); }
	inline intptr_t get_handle_0() const { return ___handle_0; }
	inline intptr_t* get_address_of_handle_0() { return &___handle_0; }
	inline void set_handle_0(intptr_t value)
	{
		___handle_0 = value;
	}
};


// FMOD.DSP_CHANNELMIX
struct  DSP_CHANNELMIX_t134FCBA66F5123100019D61CE97D3FB8E2643233 
{
public:
	// System.Int32 FMOD.DSP_CHANNELMIX::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_CHANNELMIX_t134FCBA66F5123100019D61CE97D3FB8E2643233, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_CHANNELMIX_OUTPUT
struct  DSP_CHANNELMIX_OUTPUT_t994733BB3C341D03BC195FF2963CD8A4FC8976F0 
{
public:
	// System.Int32 FMOD.DSP_CHANNELMIX_OUTPUT::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_CHANNELMIX_OUTPUT_t994733BB3C341D03BC195FF2963CD8A4FC8976F0, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_CHORUS
struct  DSP_CHORUS_t4B69C1C7B975B9618C7BF853988889DAF6351355 
{
public:
	// System.Int32 FMOD.DSP_CHORUS::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_CHORUS_t4B69C1C7B975B9618C7BF853988889DAF6351355, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_COMPRESSOR
struct  DSP_COMPRESSOR_tDB261F3B23FF5B8BE0D05A0B19E8B821B8464A8E 
{
public:
	// System.Int32 FMOD.DSP_COMPRESSOR::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_COMPRESSOR_tDB261F3B23FF5B8BE0D05A0B19E8B821B8464A8E, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_CONVOLUTION_REVERB
struct  DSP_CONVOLUTION_REVERB_tF7695089662FAC5462FB402132BB999BD73C0B6F 
{
public:
	// System.Int32 FMOD.DSP_CONVOLUTION_REVERB::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_CONVOLUTION_REVERB_tF7695089662FAC5462FB402132BB999BD73C0B6F, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_DELAY
struct  DSP_DELAY_tEEA19BA6F4AE0CAD9BFB195299D4D44E8597D97F 
{
public:
	// System.Int32 FMOD.DSP_DELAY::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_DELAY_tEEA19BA6F4AE0CAD9BFB195299D4D44E8597D97F, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_DESCRIPTION
struct  DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A 
{
public:
	// System.UInt32 FMOD.DSP_DESCRIPTION::pluginsdkversion
	uint32_t ___pluginsdkversion_0;
	// System.Byte[] FMOD.DSP_DESCRIPTION::name
	ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* ___name_1;
	// System.UInt32 FMOD.DSP_DESCRIPTION::version
	uint32_t ___version_2;
	// System.Int32 FMOD.DSP_DESCRIPTION::numinputbuffers
	int32_t ___numinputbuffers_3;
	// System.Int32 FMOD.DSP_DESCRIPTION::numoutputbuffers
	int32_t ___numoutputbuffers_4;
	// FMOD.DSP_CREATECALLBACK FMOD.DSP_DESCRIPTION::create
	DSP_CREATECALLBACK_t6510E2AEECAAD7C3DCCE0E608DF42AF53BB2AFB4 * ___create_5;
	// FMOD.DSP_RELEASECALLBACK FMOD.DSP_DESCRIPTION::release
	DSP_RELEASECALLBACK_t92C9D067D3CF7847DB0F73813A5833B6E4D0C6EE * ___release_6;
	// FMOD.DSP_RESETCALLBACK FMOD.DSP_DESCRIPTION::reset
	DSP_RESETCALLBACK_t8EA9624AAC1D240E70DB5855727C840681FB659C * ___reset_7;
	// FMOD.DSP_READCALLBACK FMOD.DSP_DESCRIPTION::read
	DSP_READCALLBACK_tA3F0E8A151B3385E3BFDB117670F3572746ECE6B * ___read_8;
	// FMOD.DSP_PROCESS_CALLBACK FMOD.DSP_DESCRIPTION::process
	DSP_PROCESS_CALLBACK_tDBD865DB753B70FC9D7366E33380253692DC88CB * ___process_9;
	// FMOD.DSP_SETPOSITIONCALLBACK FMOD.DSP_DESCRIPTION::setposition
	DSP_SETPOSITIONCALLBACK_t9A480C4F691C838E0267D2D8515075AC431CB2B7 * ___setposition_10;
	// System.Int32 FMOD.DSP_DESCRIPTION::numparameters
	int32_t ___numparameters_11;
	// System.IntPtr FMOD.DSP_DESCRIPTION::paramdesc
	intptr_t ___paramdesc_12;
	// FMOD.DSP_SETPARAM_FLOAT_CALLBACK FMOD.DSP_DESCRIPTION::setparameterfloat
	DSP_SETPARAM_FLOAT_CALLBACK_t7EFE910C4496F3D95D1E3487B97D08AD011006C8 * ___setparameterfloat_13;
	// FMOD.DSP_SETPARAM_INT_CALLBACK FMOD.DSP_DESCRIPTION::setparameterint
	DSP_SETPARAM_INT_CALLBACK_t10AE9EEDA039984760035B14CD3E84A401F749E3 * ___setparameterint_14;
	// FMOD.DSP_SETPARAM_BOOL_CALLBACK FMOD.DSP_DESCRIPTION::setparameterbool
	DSP_SETPARAM_BOOL_CALLBACK_tACA9458F120A18B395CB1EE2F9A3C8ACEC2C2349 * ___setparameterbool_15;
	// FMOD.DSP_SETPARAM_DATA_CALLBACK FMOD.DSP_DESCRIPTION::setparameterdata
	DSP_SETPARAM_DATA_CALLBACK_tDB9125291A634749692E0D00301A136B5C3D34DE * ___setparameterdata_16;
	// FMOD.DSP_GETPARAM_FLOAT_CALLBACK FMOD.DSP_DESCRIPTION::getparameterfloat
	DSP_GETPARAM_FLOAT_CALLBACK_t8401A9811354731A09C32E110B876C472C71A0A9 * ___getparameterfloat_17;
	// FMOD.DSP_GETPARAM_INT_CALLBACK FMOD.DSP_DESCRIPTION::getparameterint
	DSP_GETPARAM_INT_CALLBACK_t7AAF6AFAFD8D24554AA1490F81B3C4B370DF8EA6 * ___getparameterint_18;
	// FMOD.DSP_GETPARAM_BOOL_CALLBACK FMOD.DSP_DESCRIPTION::getparameterbool
	DSP_GETPARAM_BOOL_CALLBACK_tAD8EBD00416D502B580D2869800D43E2C3E52069 * ___getparameterbool_19;
	// FMOD.DSP_GETPARAM_DATA_CALLBACK FMOD.DSP_DESCRIPTION::getparameterdata
	DSP_GETPARAM_DATA_CALLBACK_t2E82033F2FF7DC3D377C9B9B60A1F453A286D372 * ___getparameterdata_20;
	// FMOD.DSP_SHOULDIPROCESS_CALLBACK FMOD.DSP_DESCRIPTION::shouldiprocess
	DSP_SHOULDIPROCESS_CALLBACK_t5545B686955F4562B7A1F21C22438EC50D6CFF28 * ___shouldiprocess_21;
	// System.IntPtr FMOD.DSP_DESCRIPTION::userdata
	intptr_t ___userdata_22;
	// FMOD.DSP_SYSTEM_REGISTER_CALLBACK FMOD.DSP_DESCRIPTION::sys_register
	DSP_SYSTEM_REGISTER_CALLBACK_t9D6891252B2A9A8667CF1BE598C9BBC50450CCFA * ___sys_register_23;
	// FMOD.DSP_SYSTEM_DEREGISTER_CALLBACK FMOD.DSP_DESCRIPTION::sys_deregister
	DSP_SYSTEM_DEREGISTER_CALLBACK_tB1D240F0C4635096EEDB65641DC430EB03DD0699 * ___sys_deregister_24;
	// FMOD.DSP_SYSTEM_MIX_CALLBACK FMOD.DSP_DESCRIPTION::sys_mix
	DSP_SYSTEM_MIX_CALLBACK_t38470781C5A19912A1FFF609AEFB9FC7695C3836 * ___sys_mix_25;

public:
	inline static int32_t get_offset_of_pluginsdkversion_0() { return static_cast<int32_t>(offsetof(DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A, ___pluginsdkversion_0)); }
	inline uint32_t get_pluginsdkversion_0() const { return ___pluginsdkversion_0; }
	inline uint32_t* get_address_of_pluginsdkversion_0() { return &___pluginsdkversion_0; }
	inline void set_pluginsdkversion_0(uint32_t value)
	{
		___pluginsdkversion_0 = value;
	}

	inline static int32_t get_offset_of_name_1() { return static_cast<int32_t>(offsetof(DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A, ___name_1)); }
	inline ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* get_name_1() const { return ___name_1; }
	inline ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821** get_address_of_name_1() { return &___name_1; }
	inline void set_name_1(ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* value)
	{
		___name_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___name_1), (void*)value);
	}

	inline static int32_t get_offset_of_version_2() { return static_cast<int32_t>(offsetof(DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A, ___version_2)); }
	inline uint32_t get_version_2() const { return ___version_2; }
	inline uint32_t* get_address_of_version_2() { return &___version_2; }
	inline void set_version_2(uint32_t value)
	{
		___version_2 = value;
	}

	inline static int32_t get_offset_of_numinputbuffers_3() { return static_cast<int32_t>(offsetof(DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A, ___numinputbuffers_3)); }
	inline int32_t get_numinputbuffers_3() const { return ___numinputbuffers_3; }
	inline int32_t* get_address_of_numinputbuffers_3() { return &___numinputbuffers_3; }
	inline void set_numinputbuffers_3(int32_t value)
	{
		___numinputbuffers_3 = value;
	}

	inline static int32_t get_offset_of_numoutputbuffers_4() { return static_cast<int32_t>(offsetof(DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A, ___numoutputbuffers_4)); }
	inline int32_t get_numoutputbuffers_4() const { return ___numoutputbuffers_4; }
	inline int32_t* get_address_of_numoutputbuffers_4() { return &___numoutputbuffers_4; }
	inline void set_numoutputbuffers_4(int32_t value)
	{
		___numoutputbuffers_4 = value;
	}

	inline static int32_t get_offset_of_create_5() { return static_cast<int32_t>(offsetof(DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A, ___create_5)); }
	inline DSP_CREATECALLBACK_t6510E2AEECAAD7C3DCCE0E608DF42AF53BB2AFB4 * get_create_5() const { return ___create_5; }
	inline DSP_CREATECALLBACK_t6510E2AEECAAD7C3DCCE0E608DF42AF53BB2AFB4 ** get_address_of_create_5() { return &___create_5; }
	inline void set_create_5(DSP_CREATECALLBACK_t6510E2AEECAAD7C3DCCE0E608DF42AF53BB2AFB4 * value)
	{
		___create_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___create_5), (void*)value);
	}

	inline static int32_t get_offset_of_release_6() { return static_cast<int32_t>(offsetof(DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A, ___release_6)); }
	inline DSP_RELEASECALLBACK_t92C9D067D3CF7847DB0F73813A5833B6E4D0C6EE * get_release_6() const { return ___release_6; }
	inline DSP_RELEASECALLBACK_t92C9D067D3CF7847DB0F73813A5833B6E4D0C6EE ** get_address_of_release_6() { return &___release_6; }
	inline void set_release_6(DSP_RELEASECALLBACK_t92C9D067D3CF7847DB0F73813A5833B6E4D0C6EE * value)
	{
		___release_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___release_6), (void*)value);
	}

	inline static int32_t get_offset_of_reset_7() { return static_cast<int32_t>(offsetof(DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A, ___reset_7)); }
	inline DSP_RESETCALLBACK_t8EA9624AAC1D240E70DB5855727C840681FB659C * get_reset_7() const { return ___reset_7; }
	inline DSP_RESETCALLBACK_t8EA9624AAC1D240E70DB5855727C840681FB659C ** get_address_of_reset_7() { return &___reset_7; }
	inline void set_reset_7(DSP_RESETCALLBACK_t8EA9624AAC1D240E70DB5855727C840681FB659C * value)
	{
		___reset_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___reset_7), (void*)value);
	}

	inline static int32_t get_offset_of_read_8() { return static_cast<int32_t>(offsetof(DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A, ___read_8)); }
	inline DSP_READCALLBACK_tA3F0E8A151B3385E3BFDB117670F3572746ECE6B * get_read_8() const { return ___read_8; }
	inline DSP_READCALLBACK_tA3F0E8A151B3385E3BFDB117670F3572746ECE6B ** get_address_of_read_8() { return &___read_8; }
	inline void set_read_8(DSP_READCALLBACK_tA3F0E8A151B3385E3BFDB117670F3572746ECE6B * value)
	{
		___read_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___read_8), (void*)value);
	}

	inline static int32_t get_offset_of_process_9() { return static_cast<int32_t>(offsetof(DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A, ___process_9)); }
	inline DSP_PROCESS_CALLBACK_tDBD865DB753B70FC9D7366E33380253692DC88CB * get_process_9() const { return ___process_9; }
	inline DSP_PROCESS_CALLBACK_tDBD865DB753B70FC9D7366E33380253692DC88CB ** get_address_of_process_9() { return &___process_9; }
	inline void set_process_9(DSP_PROCESS_CALLBACK_tDBD865DB753B70FC9D7366E33380253692DC88CB * value)
	{
		___process_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___process_9), (void*)value);
	}

	inline static int32_t get_offset_of_setposition_10() { return static_cast<int32_t>(offsetof(DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A, ___setposition_10)); }
	inline DSP_SETPOSITIONCALLBACK_t9A480C4F691C838E0267D2D8515075AC431CB2B7 * get_setposition_10() const { return ___setposition_10; }
	inline DSP_SETPOSITIONCALLBACK_t9A480C4F691C838E0267D2D8515075AC431CB2B7 ** get_address_of_setposition_10() { return &___setposition_10; }
	inline void set_setposition_10(DSP_SETPOSITIONCALLBACK_t9A480C4F691C838E0267D2D8515075AC431CB2B7 * value)
	{
		___setposition_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___setposition_10), (void*)value);
	}

	inline static int32_t get_offset_of_numparameters_11() { return static_cast<int32_t>(offsetof(DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A, ___numparameters_11)); }
	inline int32_t get_numparameters_11() const { return ___numparameters_11; }
	inline int32_t* get_address_of_numparameters_11() { return &___numparameters_11; }
	inline void set_numparameters_11(int32_t value)
	{
		___numparameters_11 = value;
	}

	inline static int32_t get_offset_of_paramdesc_12() { return static_cast<int32_t>(offsetof(DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A, ___paramdesc_12)); }
	inline intptr_t get_paramdesc_12() const { return ___paramdesc_12; }
	inline intptr_t* get_address_of_paramdesc_12() { return &___paramdesc_12; }
	inline void set_paramdesc_12(intptr_t value)
	{
		___paramdesc_12 = value;
	}

	inline static int32_t get_offset_of_setparameterfloat_13() { return static_cast<int32_t>(offsetof(DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A, ___setparameterfloat_13)); }
	inline DSP_SETPARAM_FLOAT_CALLBACK_t7EFE910C4496F3D95D1E3487B97D08AD011006C8 * get_setparameterfloat_13() const { return ___setparameterfloat_13; }
	inline DSP_SETPARAM_FLOAT_CALLBACK_t7EFE910C4496F3D95D1E3487B97D08AD011006C8 ** get_address_of_setparameterfloat_13() { return &___setparameterfloat_13; }
	inline void set_setparameterfloat_13(DSP_SETPARAM_FLOAT_CALLBACK_t7EFE910C4496F3D95D1E3487B97D08AD011006C8 * value)
	{
		___setparameterfloat_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___setparameterfloat_13), (void*)value);
	}

	inline static int32_t get_offset_of_setparameterint_14() { return static_cast<int32_t>(offsetof(DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A, ___setparameterint_14)); }
	inline DSP_SETPARAM_INT_CALLBACK_t10AE9EEDA039984760035B14CD3E84A401F749E3 * get_setparameterint_14() const { return ___setparameterint_14; }
	inline DSP_SETPARAM_INT_CALLBACK_t10AE9EEDA039984760035B14CD3E84A401F749E3 ** get_address_of_setparameterint_14() { return &___setparameterint_14; }
	inline void set_setparameterint_14(DSP_SETPARAM_INT_CALLBACK_t10AE9EEDA039984760035B14CD3E84A401F749E3 * value)
	{
		___setparameterint_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___setparameterint_14), (void*)value);
	}

	inline static int32_t get_offset_of_setparameterbool_15() { return static_cast<int32_t>(offsetof(DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A, ___setparameterbool_15)); }
	inline DSP_SETPARAM_BOOL_CALLBACK_tACA9458F120A18B395CB1EE2F9A3C8ACEC2C2349 * get_setparameterbool_15() const { return ___setparameterbool_15; }
	inline DSP_SETPARAM_BOOL_CALLBACK_tACA9458F120A18B395CB1EE2F9A3C8ACEC2C2349 ** get_address_of_setparameterbool_15() { return &___setparameterbool_15; }
	inline void set_setparameterbool_15(DSP_SETPARAM_BOOL_CALLBACK_tACA9458F120A18B395CB1EE2F9A3C8ACEC2C2349 * value)
	{
		___setparameterbool_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___setparameterbool_15), (void*)value);
	}

	inline static int32_t get_offset_of_setparameterdata_16() { return static_cast<int32_t>(offsetof(DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A, ___setparameterdata_16)); }
	inline DSP_SETPARAM_DATA_CALLBACK_tDB9125291A634749692E0D00301A136B5C3D34DE * get_setparameterdata_16() const { return ___setparameterdata_16; }
	inline DSP_SETPARAM_DATA_CALLBACK_tDB9125291A634749692E0D00301A136B5C3D34DE ** get_address_of_setparameterdata_16() { return &___setparameterdata_16; }
	inline void set_setparameterdata_16(DSP_SETPARAM_DATA_CALLBACK_tDB9125291A634749692E0D00301A136B5C3D34DE * value)
	{
		___setparameterdata_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___setparameterdata_16), (void*)value);
	}

	inline static int32_t get_offset_of_getparameterfloat_17() { return static_cast<int32_t>(offsetof(DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A, ___getparameterfloat_17)); }
	inline DSP_GETPARAM_FLOAT_CALLBACK_t8401A9811354731A09C32E110B876C472C71A0A9 * get_getparameterfloat_17() const { return ___getparameterfloat_17; }
	inline DSP_GETPARAM_FLOAT_CALLBACK_t8401A9811354731A09C32E110B876C472C71A0A9 ** get_address_of_getparameterfloat_17() { return &___getparameterfloat_17; }
	inline void set_getparameterfloat_17(DSP_GETPARAM_FLOAT_CALLBACK_t8401A9811354731A09C32E110B876C472C71A0A9 * value)
	{
		___getparameterfloat_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___getparameterfloat_17), (void*)value);
	}

	inline static int32_t get_offset_of_getparameterint_18() { return static_cast<int32_t>(offsetof(DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A, ___getparameterint_18)); }
	inline DSP_GETPARAM_INT_CALLBACK_t7AAF6AFAFD8D24554AA1490F81B3C4B370DF8EA6 * get_getparameterint_18() const { return ___getparameterint_18; }
	inline DSP_GETPARAM_INT_CALLBACK_t7AAF6AFAFD8D24554AA1490F81B3C4B370DF8EA6 ** get_address_of_getparameterint_18() { return &___getparameterint_18; }
	inline void set_getparameterint_18(DSP_GETPARAM_INT_CALLBACK_t7AAF6AFAFD8D24554AA1490F81B3C4B370DF8EA6 * value)
	{
		___getparameterint_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___getparameterint_18), (void*)value);
	}

	inline static int32_t get_offset_of_getparameterbool_19() { return static_cast<int32_t>(offsetof(DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A, ___getparameterbool_19)); }
	inline DSP_GETPARAM_BOOL_CALLBACK_tAD8EBD00416D502B580D2869800D43E2C3E52069 * get_getparameterbool_19() const { return ___getparameterbool_19; }
	inline DSP_GETPARAM_BOOL_CALLBACK_tAD8EBD00416D502B580D2869800D43E2C3E52069 ** get_address_of_getparameterbool_19() { return &___getparameterbool_19; }
	inline void set_getparameterbool_19(DSP_GETPARAM_BOOL_CALLBACK_tAD8EBD00416D502B580D2869800D43E2C3E52069 * value)
	{
		___getparameterbool_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___getparameterbool_19), (void*)value);
	}

	inline static int32_t get_offset_of_getparameterdata_20() { return static_cast<int32_t>(offsetof(DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A, ___getparameterdata_20)); }
	inline DSP_GETPARAM_DATA_CALLBACK_t2E82033F2FF7DC3D377C9B9B60A1F453A286D372 * get_getparameterdata_20() const { return ___getparameterdata_20; }
	inline DSP_GETPARAM_DATA_CALLBACK_t2E82033F2FF7DC3D377C9B9B60A1F453A286D372 ** get_address_of_getparameterdata_20() { return &___getparameterdata_20; }
	inline void set_getparameterdata_20(DSP_GETPARAM_DATA_CALLBACK_t2E82033F2FF7DC3D377C9B9B60A1F453A286D372 * value)
	{
		___getparameterdata_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___getparameterdata_20), (void*)value);
	}

	inline static int32_t get_offset_of_shouldiprocess_21() { return static_cast<int32_t>(offsetof(DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A, ___shouldiprocess_21)); }
	inline DSP_SHOULDIPROCESS_CALLBACK_t5545B686955F4562B7A1F21C22438EC50D6CFF28 * get_shouldiprocess_21() const { return ___shouldiprocess_21; }
	inline DSP_SHOULDIPROCESS_CALLBACK_t5545B686955F4562B7A1F21C22438EC50D6CFF28 ** get_address_of_shouldiprocess_21() { return &___shouldiprocess_21; }
	inline void set_shouldiprocess_21(DSP_SHOULDIPROCESS_CALLBACK_t5545B686955F4562B7A1F21C22438EC50D6CFF28 * value)
	{
		___shouldiprocess_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___shouldiprocess_21), (void*)value);
	}

	inline static int32_t get_offset_of_userdata_22() { return static_cast<int32_t>(offsetof(DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A, ___userdata_22)); }
	inline intptr_t get_userdata_22() const { return ___userdata_22; }
	inline intptr_t* get_address_of_userdata_22() { return &___userdata_22; }
	inline void set_userdata_22(intptr_t value)
	{
		___userdata_22 = value;
	}

	inline static int32_t get_offset_of_sys_register_23() { return static_cast<int32_t>(offsetof(DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A, ___sys_register_23)); }
	inline DSP_SYSTEM_REGISTER_CALLBACK_t9D6891252B2A9A8667CF1BE598C9BBC50450CCFA * get_sys_register_23() const { return ___sys_register_23; }
	inline DSP_SYSTEM_REGISTER_CALLBACK_t9D6891252B2A9A8667CF1BE598C9BBC50450CCFA ** get_address_of_sys_register_23() { return &___sys_register_23; }
	inline void set_sys_register_23(DSP_SYSTEM_REGISTER_CALLBACK_t9D6891252B2A9A8667CF1BE598C9BBC50450CCFA * value)
	{
		___sys_register_23 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sys_register_23), (void*)value);
	}

	inline static int32_t get_offset_of_sys_deregister_24() { return static_cast<int32_t>(offsetof(DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A, ___sys_deregister_24)); }
	inline DSP_SYSTEM_DEREGISTER_CALLBACK_tB1D240F0C4635096EEDB65641DC430EB03DD0699 * get_sys_deregister_24() const { return ___sys_deregister_24; }
	inline DSP_SYSTEM_DEREGISTER_CALLBACK_tB1D240F0C4635096EEDB65641DC430EB03DD0699 ** get_address_of_sys_deregister_24() { return &___sys_deregister_24; }
	inline void set_sys_deregister_24(DSP_SYSTEM_DEREGISTER_CALLBACK_tB1D240F0C4635096EEDB65641DC430EB03DD0699 * value)
	{
		___sys_deregister_24 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sys_deregister_24), (void*)value);
	}

	inline static int32_t get_offset_of_sys_mix_25() { return static_cast<int32_t>(offsetof(DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A, ___sys_mix_25)); }
	inline DSP_SYSTEM_MIX_CALLBACK_t38470781C5A19912A1FFF609AEFB9FC7695C3836 * get_sys_mix_25() const { return ___sys_mix_25; }
	inline DSP_SYSTEM_MIX_CALLBACK_t38470781C5A19912A1FFF609AEFB9FC7695C3836 ** get_address_of_sys_mix_25() { return &___sys_mix_25; }
	inline void set_sys_mix_25(DSP_SYSTEM_MIX_CALLBACK_t38470781C5A19912A1FFF609AEFB9FC7695C3836 * value)
	{
		___sys_mix_25 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sys_mix_25), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of FMOD.DSP_DESCRIPTION
struct DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A_marshaled_pinvoke
{
	uint32_t ___pluginsdkversion_0;
	uint8_t ___name_1[32];
	uint32_t ___version_2;
	int32_t ___numinputbuffers_3;
	int32_t ___numoutputbuffers_4;
	Il2CppMethodPointer ___create_5;
	Il2CppMethodPointer ___release_6;
	Il2CppMethodPointer ___reset_7;
	Il2CppMethodPointer ___read_8;
	Il2CppMethodPointer ___process_9;
	Il2CppMethodPointer ___setposition_10;
	int32_t ___numparameters_11;
	intptr_t ___paramdesc_12;
	Il2CppMethodPointer ___setparameterfloat_13;
	Il2CppMethodPointer ___setparameterint_14;
	Il2CppMethodPointer ___setparameterbool_15;
	Il2CppMethodPointer ___setparameterdata_16;
	Il2CppMethodPointer ___getparameterfloat_17;
	Il2CppMethodPointer ___getparameterint_18;
	Il2CppMethodPointer ___getparameterbool_19;
	Il2CppMethodPointer ___getparameterdata_20;
	Il2CppMethodPointer ___shouldiprocess_21;
	intptr_t ___userdata_22;
	Il2CppMethodPointer ___sys_register_23;
	Il2CppMethodPointer ___sys_deregister_24;
	Il2CppMethodPointer ___sys_mix_25;
};
// Native definition for COM marshalling of FMOD.DSP_DESCRIPTION
struct DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A_marshaled_com
{
	uint32_t ___pluginsdkversion_0;
	uint8_t ___name_1[32];
	uint32_t ___version_2;
	int32_t ___numinputbuffers_3;
	int32_t ___numoutputbuffers_4;
	Il2CppMethodPointer ___create_5;
	Il2CppMethodPointer ___release_6;
	Il2CppMethodPointer ___reset_7;
	Il2CppMethodPointer ___read_8;
	Il2CppMethodPointer ___process_9;
	Il2CppMethodPointer ___setposition_10;
	int32_t ___numparameters_11;
	intptr_t ___paramdesc_12;
	Il2CppMethodPointer ___setparameterfloat_13;
	Il2CppMethodPointer ___setparameterint_14;
	Il2CppMethodPointer ___setparameterbool_15;
	Il2CppMethodPointer ___setparameterdata_16;
	Il2CppMethodPointer ___getparameterfloat_17;
	Il2CppMethodPointer ___getparameterint_18;
	Il2CppMethodPointer ___getparameterbool_19;
	Il2CppMethodPointer ___getparameterdata_20;
	Il2CppMethodPointer ___shouldiprocess_21;
	intptr_t ___userdata_22;
	Il2CppMethodPointer ___sys_register_23;
	Il2CppMethodPointer ___sys_deregister_24;
	Il2CppMethodPointer ___sys_mix_25;
};

// FMOD.DSP_DISTORTION
struct  DSP_DISTORTION_tB7B96F3494C38C6994205293B2857A8F43E03EEB 
{
public:
	// System.Int32 FMOD.DSP_DISTORTION::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_DISTORTION_tB7B96F3494C38C6994205293B2857A8F43E03EEB, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_ECHO
struct  DSP_ECHO_t4ABEAFA56AE3A4F0B3CA1AD4B05ADDD41C76CC41 
{
public:
	// System.Int32 FMOD.DSP_ECHO::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_ECHO_t4ABEAFA56AE3A4F0B3CA1AD4B05ADDD41C76CC41, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_ENVELOPEFOLLOWER
struct  DSP_ENVELOPEFOLLOWER_tED3224DF46194616A355DF8531626E3120C7858E 
{
public:
	// System.Int32 FMOD.DSP_ENVELOPEFOLLOWER::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_ENVELOPEFOLLOWER_tED3224DF46194616A355DF8531626E3120C7858E, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_FADER
struct  DSP_FADER_t7CE548FCB0D2E9F80A7533E3E10F17B40F3AD8F6 
{
public:
	// System.Int32 FMOD.DSP_FADER::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_FADER_t7CE548FCB0D2E9F80A7533E3E10F17B40F3AD8F6, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_FFT
struct  DSP_FFT_t81D45A58B42AB3C81C7419DEF7F9172300A730E4 
{
public:
	// System.Int32 FMOD.DSP_FFT::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_FFT_t81D45A58B42AB3C81C7419DEF7F9172300A730E4, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_FFT_WINDOW
struct  DSP_FFT_WINDOW_t0F3829CDEB8620553F04A194F63FEA1A36033251 
{
public:
	// System.Int32 FMOD.DSP_FFT_WINDOW::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_FFT_WINDOW_t0F3829CDEB8620553F04A194F63FEA1A36033251, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_FLANGE
struct  DSP_FLANGE_t56DBC2B6485A5717805B7AD84BEE03A5C18272D3 
{
public:
	// System.Int32 FMOD.DSP_FLANGE::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_FLANGE_t56DBC2B6485A5717805B7AD84BEE03A5C18272D3, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_HIGHPASS
struct  DSP_HIGHPASS_t9835D370DA72EB672BBBCBEABEB65FB29DE0E827 
{
public:
	// System.Int32 FMOD.DSP_HIGHPASS::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_HIGHPASS_t9835D370DA72EB672BBBCBEABEB65FB29DE0E827, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_HIGHPASS_SIMPLE
struct  DSP_HIGHPASS_SIMPLE_t2D9777FAC666DB7347007F07F661C12313ED3E4D 
{
public:
	// System.Int32 FMOD.DSP_HIGHPASS_SIMPLE::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_HIGHPASS_SIMPLE_t2D9777FAC666DB7347007F07F661C12313ED3E4D, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_ITECHO
struct  DSP_ITECHO_t044BCBC7203F81C70B8C09320323416CDB817EE6 
{
public:
	// System.Int32 FMOD.DSP_ITECHO::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_ITECHO_t044BCBC7203F81C70B8C09320323416CDB817EE6, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_ITLOWPASS
struct  DSP_ITLOWPASS_tBDF0EBAAF8DC5A882F28A0C850588A741FDF18C3 
{
public:
	// System.Int32 FMOD.DSP_ITLOWPASS::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_ITLOWPASS_tBDF0EBAAF8DC5A882F28A0C850588A741FDF18C3, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_LIMITER
struct  DSP_LIMITER_t1CF99F38C7985EC57D4E9080DEB937E892CBA2E2 
{
public:
	// System.Int32 FMOD.DSP_LIMITER::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_LIMITER_t1CF99F38C7985EC57D4E9080DEB937E892CBA2E2, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_LOWPASS
struct  DSP_LOWPASS_t177CA21058D50926C5924FCABFFEA874F16BF127 
{
public:
	// System.Int32 FMOD.DSP_LOWPASS::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_LOWPASS_t177CA21058D50926C5924FCABFFEA874F16BF127, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_LOWPASS_SIMPLE
struct  DSP_LOWPASS_SIMPLE_t4A4D6AE78D83C6583AE060DDFF2010D6AD68F4D2 
{
public:
	// System.Int32 FMOD.DSP_LOWPASS_SIMPLE::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_LOWPASS_SIMPLE_t4A4D6AE78D83C6583AE060DDFF2010D6AD68F4D2, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_METERING_INFO
struct  DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2 
{
public:
	// System.Int32 FMOD.DSP_METERING_INFO::numsamples
	int32_t ___numsamples_0;
	// System.Single[] FMOD.DSP_METERING_INFO::peaklevel
	SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___peaklevel_1;
	// System.Single[] FMOD.DSP_METERING_INFO::rmslevel
	SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___rmslevel_2;
	// System.Int16 FMOD.DSP_METERING_INFO::numchannels
	int16_t ___numchannels_3;

public:
	inline static int32_t get_offset_of_numsamples_0() { return static_cast<int32_t>(offsetof(DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2, ___numsamples_0)); }
	inline int32_t get_numsamples_0() const { return ___numsamples_0; }
	inline int32_t* get_address_of_numsamples_0() { return &___numsamples_0; }
	inline void set_numsamples_0(int32_t value)
	{
		___numsamples_0 = value;
	}

	inline static int32_t get_offset_of_peaklevel_1() { return static_cast<int32_t>(offsetof(DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2, ___peaklevel_1)); }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* get_peaklevel_1() const { return ___peaklevel_1; }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5** get_address_of_peaklevel_1() { return &___peaklevel_1; }
	inline void set_peaklevel_1(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* value)
	{
		___peaklevel_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___peaklevel_1), (void*)value);
	}

	inline static int32_t get_offset_of_rmslevel_2() { return static_cast<int32_t>(offsetof(DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2, ___rmslevel_2)); }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* get_rmslevel_2() const { return ___rmslevel_2; }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5** get_address_of_rmslevel_2() { return &___rmslevel_2; }
	inline void set_rmslevel_2(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* value)
	{
		___rmslevel_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___rmslevel_2), (void*)value);
	}

	inline static int32_t get_offset_of_numchannels_3() { return static_cast<int32_t>(offsetof(DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2, ___numchannels_3)); }
	inline int16_t get_numchannels_3() const { return ___numchannels_3; }
	inline int16_t* get_address_of_numchannels_3() { return &___numchannels_3; }
	inline void set_numchannels_3(int16_t value)
	{
		___numchannels_3 = value;
	}
};

// Native definition for P/Invoke marshalling of FMOD.DSP_METERING_INFO
struct DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_pinvoke
{
	int32_t ___numsamples_0;
	float ___peaklevel_1[32];
	float ___rmslevel_2[32];
	int16_t ___numchannels_3;
};
// Native definition for COM marshalling of FMOD.DSP_METERING_INFO
struct DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_com
{
	int32_t ___numsamples_0;
	float ___peaklevel_1[32];
	float ___rmslevel_2[32];
	int16_t ___numchannels_3;
};

// FMOD.DSP_MULTIBAND_EQ
struct  DSP_MULTIBAND_EQ_tB4AD86B184B3B88BBE854486628C7929BB0B8C92 
{
public:
	// System.Int32 FMOD.DSP_MULTIBAND_EQ::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_MULTIBAND_EQ_tB4AD86B184B3B88BBE854486628C7929BB0B8C92, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_MULTIBAND_EQ_FILTER_TYPE
struct  DSP_MULTIBAND_EQ_FILTER_TYPE_tF15FC4E6CD12440B4C9680FACA0C0469B73BE05A 
{
public:
	// System.Int32 FMOD.DSP_MULTIBAND_EQ_FILTER_TYPE::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_MULTIBAND_EQ_FILTER_TYPE_tF15FC4E6CD12440B4C9680FACA0C0469B73BE05A, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_NORMALIZE
struct  DSP_NORMALIZE_t7D4CC7B81216C622400E864D59C2DA17DFAC2EB6 
{
public:
	// System.Int32 FMOD.DSP_NORMALIZE::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_NORMALIZE_t7D4CC7B81216C622400E864D59C2DA17DFAC2EB6, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_OBJECTPAN
struct  DSP_OBJECTPAN_tB1D6662B2089BE5B1A46B7D64386AA6D545BDDF6 
{
public:
	// System.Int32 FMOD.DSP_OBJECTPAN::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_OBJECTPAN_tB1D6662B2089BE5B1A46B7D64386AA6D545BDDF6, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_OSCILLATOR
struct  DSP_OSCILLATOR_tDFB025AD254B28DBEF0B30423F60BF6808894CCC 
{
public:
	// System.Int32 FMOD.DSP_OSCILLATOR::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_OSCILLATOR_tDFB025AD254B28DBEF0B30423F60BF6808894CCC, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_PAN
struct  DSP_PAN_tEF3BF9F3553B9C763DCC12A37378546F9A13C6CF 
{
public:
	// System.Int32 FMOD.DSP_PAN::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_PAN_tEF3BF9F3553B9C763DCC12A37378546F9A13C6CF, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_PAN_2D_STEREO_MODE_TYPE
struct  DSP_PAN_2D_STEREO_MODE_TYPE_tA161CBA3617E177AD4571FBE9E0035B49652CFE4 
{
public:
	// System.Int32 FMOD.DSP_PAN_2D_STEREO_MODE_TYPE::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_PAN_2D_STEREO_MODE_TYPE_tA161CBA3617E177AD4571FBE9E0035B49652CFE4, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_PAN_3D_EXTENT_MODE_TYPE
struct  DSP_PAN_3D_EXTENT_MODE_TYPE_tA58C10641644459CD24847D389C94C5FAA8DAD78 
{
public:
	// System.Int32 FMOD.DSP_PAN_3D_EXTENT_MODE_TYPE::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_PAN_3D_EXTENT_MODE_TYPE_tA58C10641644459CD24847D389C94C5FAA8DAD78, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_PAN_3D_ROLLOFF_TYPE
struct  DSP_PAN_3D_ROLLOFF_TYPE_t8281FE1B3F501AE31EA34324C52C8F1DB1E9B8A2 
{
public:
	// System.Int32 FMOD.DSP_PAN_3D_ROLLOFF_TYPE::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_PAN_3D_ROLLOFF_TYPE_t8281FE1B3F501AE31EA34324C52C8F1DB1E9B8A2, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_PAN_MODE_TYPE
struct  DSP_PAN_MODE_TYPE_t6DC6CFD0589ADC07D6024DA7812BA9BDD3AB4E17 
{
public:
	// System.Int32 FMOD.DSP_PAN_MODE_TYPE::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_PAN_MODE_TYPE_t6DC6CFD0589ADC07D6024DA7812BA9BDD3AB4E17, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_PAN_SURROUND_FLAGS
struct  DSP_PAN_SURROUND_FLAGS_t115C25A3E1D90A75DEC1CA06FF4B54FEBB3F04F0 
{
public:
	// System.Int32 FMOD.DSP_PAN_SURROUND_FLAGS::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_PAN_SURROUND_FLAGS_t115C25A3E1D90A75DEC1CA06FF4B54FEBB3F04F0, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_PARAMEQ
struct  DSP_PARAMEQ_t184222A2662AFDFEED25542C7817CE394D074EB4 
{
public:
	// System.Int32 FMOD.DSP_PARAMEQ::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_PARAMEQ_t184222A2662AFDFEED25542C7817CE394D074EB4, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_PARAMETER_DATA_TYPE
struct  DSP_PARAMETER_DATA_TYPE_t76F507F79A055E8B237CEBCE70BCF1C905C6A226 
{
public:
	// System.Int32 FMOD.DSP_PARAMETER_DATA_TYPE::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_DATA_TYPE_t76F507F79A055E8B237CEBCE70BCF1C905C6A226, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_PARAMETER_DESC_BOOL
struct  DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD 
{
public:
	// System.Boolean FMOD.DSP_PARAMETER_DESC_BOOL::defaultval
	bool ___defaultval_0;
	// System.IntPtr FMOD.DSP_PARAMETER_DESC_BOOL::valuenames
	intptr_t ___valuenames_1;

public:
	inline static int32_t get_offset_of_defaultval_0() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD, ___defaultval_0)); }
	inline bool get_defaultval_0() const { return ___defaultval_0; }
	inline bool* get_address_of_defaultval_0() { return &___defaultval_0; }
	inline void set_defaultval_0(bool value)
	{
		___defaultval_0 = value;
	}

	inline static int32_t get_offset_of_valuenames_1() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD, ___valuenames_1)); }
	inline intptr_t get_valuenames_1() const { return ___valuenames_1; }
	inline intptr_t* get_address_of_valuenames_1() { return &___valuenames_1; }
	inline void set_valuenames_1(intptr_t value)
	{
		___valuenames_1 = value;
	}
};

// Native definition for P/Invoke marshalling of FMOD.DSP_PARAMETER_DESC_BOOL
struct DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshaled_pinvoke
{
	int32_t ___defaultval_0;
	intptr_t ___valuenames_1;
};
// Native definition for COM marshalling of FMOD.DSP_PARAMETER_DESC_BOOL
struct DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshaled_com
{
	int32_t ___defaultval_0;
	intptr_t ___valuenames_1;
};

// FMOD.DSP_PARAMETER_DESC_INT
struct  DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA 
{
public:
	// System.Int32 FMOD.DSP_PARAMETER_DESC_INT::min
	int32_t ___min_0;
	// System.Int32 FMOD.DSP_PARAMETER_DESC_INT::max
	int32_t ___max_1;
	// System.Int32 FMOD.DSP_PARAMETER_DESC_INT::defaultval
	int32_t ___defaultval_2;
	// System.Boolean FMOD.DSP_PARAMETER_DESC_INT::goestoinf
	bool ___goestoinf_3;
	// System.IntPtr FMOD.DSP_PARAMETER_DESC_INT::valuenames
	intptr_t ___valuenames_4;

public:
	inline static int32_t get_offset_of_min_0() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA, ___min_0)); }
	inline int32_t get_min_0() const { return ___min_0; }
	inline int32_t* get_address_of_min_0() { return &___min_0; }
	inline void set_min_0(int32_t value)
	{
		___min_0 = value;
	}

	inline static int32_t get_offset_of_max_1() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA, ___max_1)); }
	inline int32_t get_max_1() const { return ___max_1; }
	inline int32_t* get_address_of_max_1() { return &___max_1; }
	inline void set_max_1(int32_t value)
	{
		___max_1 = value;
	}

	inline static int32_t get_offset_of_defaultval_2() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA, ___defaultval_2)); }
	inline int32_t get_defaultval_2() const { return ___defaultval_2; }
	inline int32_t* get_address_of_defaultval_2() { return &___defaultval_2; }
	inline void set_defaultval_2(int32_t value)
	{
		___defaultval_2 = value;
	}

	inline static int32_t get_offset_of_goestoinf_3() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA, ___goestoinf_3)); }
	inline bool get_goestoinf_3() const { return ___goestoinf_3; }
	inline bool* get_address_of_goestoinf_3() { return &___goestoinf_3; }
	inline void set_goestoinf_3(bool value)
	{
		___goestoinf_3 = value;
	}

	inline static int32_t get_offset_of_valuenames_4() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA, ___valuenames_4)); }
	inline intptr_t get_valuenames_4() const { return ___valuenames_4; }
	inline intptr_t* get_address_of_valuenames_4() { return &___valuenames_4; }
	inline void set_valuenames_4(intptr_t value)
	{
		___valuenames_4 = value;
	}
};

// Native definition for P/Invoke marshalling of FMOD.DSP_PARAMETER_DESC_INT
struct DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshaled_pinvoke
{
	int32_t ___min_0;
	int32_t ___max_1;
	int32_t ___defaultval_2;
	int32_t ___goestoinf_3;
	intptr_t ___valuenames_4;
};
// Native definition for COM marshalling of FMOD.DSP_PARAMETER_DESC_INT
struct DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshaled_com
{
	int32_t ___min_0;
	int32_t ___max_1;
	int32_t ___defaultval_2;
	int32_t ___goestoinf_3;
	intptr_t ___valuenames_4;
};

// FMOD.DSP_PARAMETER_FFT
struct  DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A 
{
public:
	// System.Int32 FMOD.DSP_PARAMETER_FFT::length
	int32_t ___length_0;
	// System.Int32 FMOD.DSP_PARAMETER_FFT::numchannels
	int32_t ___numchannels_1;
	// System.IntPtr[] FMOD.DSP_PARAMETER_FFT::spectrum_internal
	IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* ___spectrum_internal_2;

public:
	inline static int32_t get_offset_of_length_0() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A, ___length_0)); }
	inline int32_t get_length_0() const { return ___length_0; }
	inline int32_t* get_address_of_length_0() { return &___length_0; }
	inline void set_length_0(int32_t value)
	{
		___length_0 = value;
	}

	inline static int32_t get_offset_of_numchannels_1() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A, ___numchannels_1)); }
	inline int32_t get_numchannels_1() const { return ___numchannels_1; }
	inline int32_t* get_address_of_numchannels_1() { return &___numchannels_1; }
	inline void set_numchannels_1(int32_t value)
	{
		___numchannels_1 = value;
	}

	inline static int32_t get_offset_of_spectrum_internal_2() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A, ___spectrum_internal_2)); }
	inline IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* get_spectrum_internal_2() const { return ___spectrum_internal_2; }
	inline IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD** get_address_of_spectrum_internal_2() { return &___spectrum_internal_2; }
	inline void set_spectrum_internal_2(IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* value)
	{
		___spectrum_internal_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___spectrum_internal_2), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of FMOD.DSP_PARAMETER_FFT
struct DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A_marshaled_pinvoke
{
	int32_t ___length_0;
	int32_t ___numchannels_1;
	intptr_t ___spectrum_internal_2[32];
};
// Native definition for COM marshalling of FMOD.DSP_PARAMETER_FFT
struct DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A_marshaled_com
{
	int32_t ___length_0;
	int32_t ___numchannels_1;
	intptr_t ___spectrum_internal_2[32];
};

// FMOD.DSP_PARAMETER_FLOAT_MAPPING_PIECEWISE_LINEAR
struct  DSP_PARAMETER_FLOAT_MAPPING_PIECEWISE_LINEAR_tFB7DF9B3BD2E5C252CAF326AD286E33169ACE7A4 
{
public:
	// System.Int32 FMOD.DSP_PARAMETER_FLOAT_MAPPING_PIECEWISE_LINEAR::numpoints
	int32_t ___numpoints_0;
	// System.IntPtr FMOD.DSP_PARAMETER_FLOAT_MAPPING_PIECEWISE_LINEAR::pointparamvalues
	intptr_t ___pointparamvalues_1;
	// System.IntPtr FMOD.DSP_PARAMETER_FLOAT_MAPPING_PIECEWISE_LINEAR::pointpositions
	intptr_t ___pointpositions_2;

public:
	inline static int32_t get_offset_of_numpoints_0() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_FLOAT_MAPPING_PIECEWISE_LINEAR_tFB7DF9B3BD2E5C252CAF326AD286E33169ACE7A4, ___numpoints_0)); }
	inline int32_t get_numpoints_0() const { return ___numpoints_0; }
	inline int32_t* get_address_of_numpoints_0() { return &___numpoints_0; }
	inline void set_numpoints_0(int32_t value)
	{
		___numpoints_0 = value;
	}

	inline static int32_t get_offset_of_pointparamvalues_1() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_FLOAT_MAPPING_PIECEWISE_LINEAR_tFB7DF9B3BD2E5C252CAF326AD286E33169ACE7A4, ___pointparamvalues_1)); }
	inline intptr_t get_pointparamvalues_1() const { return ___pointparamvalues_1; }
	inline intptr_t* get_address_of_pointparamvalues_1() { return &___pointparamvalues_1; }
	inline void set_pointparamvalues_1(intptr_t value)
	{
		___pointparamvalues_1 = value;
	}

	inline static int32_t get_offset_of_pointpositions_2() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_FLOAT_MAPPING_PIECEWISE_LINEAR_tFB7DF9B3BD2E5C252CAF326AD286E33169ACE7A4, ___pointpositions_2)); }
	inline intptr_t get_pointpositions_2() const { return ___pointpositions_2; }
	inline intptr_t* get_address_of_pointpositions_2() { return &___pointpositions_2; }
	inline void set_pointpositions_2(intptr_t value)
	{
		___pointpositions_2 = value;
	}
};


// FMOD.DSP_PARAMETER_FLOAT_MAPPING_TYPE
struct  DSP_PARAMETER_FLOAT_MAPPING_TYPE_tB64E13AC689CF11FD9608090C09141C38EAA336F 
{
public:
	// System.Int32 FMOD.DSP_PARAMETER_FLOAT_MAPPING_TYPE::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_FLOAT_MAPPING_TYPE_tB64E13AC689CF11FD9608090C09141C38EAA336F, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_PARAMETER_TYPE
struct  DSP_PARAMETER_TYPE_tBCFFA375A8258242A503DA91324D32352D908366 
{
public:
	// System.Int32 FMOD.DSP_PARAMETER_TYPE::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_TYPE_tBCFFA375A8258242A503DA91324D32352D908366, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_PITCHSHIFT
struct  DSP_PITCHSHIFT_t4B225367AEC3F3ED4C6E0EF16F5F86556FB27589 
{
public:
	// System.Int32 FMOD.DSP_PITCHSHIFT::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_PITCHSHIFT_t4B225367AEC3F3ED4C6E0EF16F5F86556FB27589, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_PROCESS_OPERATION
struct  DSP_PROCESS_OPERATION_t6B32805470F5CAAC59B13EAF05AA73D4342B0C43 
{
public:
	// System.Int32 FMOD.DSP_PROCESS_OPERATION::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_PROCESS_OPERATION_t6B32805470F5CAAC59B13EAF05AA73D4342B0C43, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_RESAMPLER
struct  DSP_RESAMPLER_tF512E479DB428092D07D6845C5204F5CC67C656F 
{
public:
	// System.Int32 FMOD.DSP_RESAMPLER::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_RESAMPLER_tF512E479DB428092D07D6845C5204F5CC67C656F, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_RETURN
struct  DSP_RETURN_tE3F412122D99402057B22FC6C248ABE297274E2C 
{
public:
	// System.Int32 FMOD.DSP_RETURN::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_RETURN_tE3F412122D99402057B22FC6C248ABE297274E2C, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_SEND
struct  DSP_SEND_tD0AAA8834B0F939B5EA61ABC6D0720CC27FBF12E 
{
public:
	// System.Int32 FMOD.DSP_SEND::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_SEND_tD0AAA8834B0F939B5EA61ABC6D0720CC27FBF12E, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_SFXREVERB
struct  DSP_SFXREVERB_t6F428F0373411B63623AEAFBEE467514FF518D91 
{
public:
	// System.Int32 FMOD.DSP_SFXREVERB::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_SFXREVERB_t6F428F0373411B63623AEAFBEE467514FF518D91, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_STATE
struct  DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 
{
public:
	// System.IntPtr FMOD.DSP_STATE::instance
	intptr_t ___instance_0;
	// System.IntPtr FMOD.DSP_STATE::plugindata
	intptr_t ___plugindata_1;
	// System.UInt32 FMOD.DSP_STATE::channelmask
	uint32_t ___channelmask_2;
	// System.Int32 FMOD.DSP_STATE::source_speakermode
	int32_t ___source_speakermode_3;
	// System.IntPtr FMOD.DSP_STATE::sidechaindata
	intptr_t ___sidechaindata_4;
	// System.Int32 FMOD.DSP_STATE::sidechainchannels
	int32_t ___sidechainchannels_5;
	// System.IntPtr FMOD.DSP_STATE::functions
	intptr_t ___functions_6;
	// System.Int32 FMOD.DSP_STATE::systemobject
	int32_t ___systemobject_7;

public:
	inline static int32_t get_offset_of_instance_0() { return static_cast<int32_t>(offsetof(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2, ___instance_0)); }
	inline intptr_t get_instance_0() const { return ___instance_0; }
	inline intptr_t* get_address_of_instance_0() { return &___instance_0; }
	inline void set_instance_0(intptr_t value)
	{
		___instance_0 = value;
	}

	inline static int32_t get_offset_of_plugindata_1() { return static_cast<int32_t>(offsetof(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2, ___plugindata_1)); }
	inline intptr_t get_plugindata_1() const { return ___plugindata_1; }
	inline intptr_t* get_address_of_plugindata_1() { return &___plugindata_1; }
	inline void set_plugindata_1(intptr_t value)
	{
		___plugindata_1 = value;
	}

	inline static int32_t get_offset_of_channelmask_2() { return static_cast<int32_t>(offsetof(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2, ___channelmask_2)); }
	inline uint32_t get_channelmask_2() const { return ___channelmask_2; }
	inline uint32_t* get_address_of_channelmask_2() { return &___channelmask_2; }
	inline void set_channelmask_2(uint32_t value)
	{
		___channelmask_2 = value;
	}

	inline static int32_t get_offset_of_source_speakermode_3() { return static_cast<int32_t>(offsetof(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2, ___source_speakermode_3)); }
	inline int32_t get_source_speakermode_3() const { return ___source_speakermode_3; }
	inline int32_t* get_address_of_source_speakermode_3() { return &___source_speakermode_3; }
	inline void set_source_speakermode_3(int32_t value)
	{
		___source_speakermode_3 = value;
	}

	inline static int32_t get_offset_of_sidechaindata_4() { return static_cast<int32_t>(offsetof(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2, ___sidechaindata_4)); }
	inline intptr_t get_sidechaindata_4() const { return ___sidechaindata_4; }
	inline intptr_t* get_address_of_sidechaindata_4() { return &___sidechaindata_4; }
	inline void set_sidechaindata_4(intptr_t value)
	{
		___sidechaindata_4 = value;
	}

	inline static int32_t get_offset_of_sidechainchannels_5() { return static_cast<int32_t>(offsetof(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2, ___sidechainchannels_5)); }
	inline int32_t get_sidechainchannels_5() const { return ___sidechainchannels_5; }
	inline int32_t* get_address_of_sidechainchannels_5() { return &___sidechainchannels_5; }
	inline void set_sidechainchannels_5(int32_t value)
	{
		___sidechainchannels_5 = value;
	}

	inline static int32_t get_offset_of_functions_6() { return static_cast<int32_t>(offsetof(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2, ___functions_6)); }
	inline intptr_t get_functions_6() const { return ___functions_6; }
	inline intptr_t* get_address_of_functions_6() { return &___functions_6; }
	inline void set_functions_6(intptr_t value)
	{
		___functions_6 = value;
	}

	inline static int32_t get_offset_of_systemobject_7() { return static_cast<int32_t>(offsetof(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2, ___systemobject_7)); }
	inline int32_t get_systemobject_7() const { return ___systemobject_7; }
	inline int32_t* get_address_of_systemobject_7() { return &___systemobject_7; }
	inline void set_systemobject_7(int32_t value)
	{
		___systemobject_7 = value;
	}
};


// FMOD.DSP_STATE_FUNCTIONS
struct  DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B 
{
public:
	// FMOD.DSP_ALLOC_FUNC FMOD.DSP_STATE_FUNCTIONS::alloc
	DSP_ALLOC_FUNC_t8CD6D271F70AFD7BFE9A856DAD1D444E72AA422D * ___alloc_0;
	// FMOD.DSP_REALLOC_FUNC FMOD.DSP_STATE_FUNCTIONS::realloc
	DSP_REALLOC_FUNC_t1F4302C05A784F080C70909A2A758DFBAFC3F4E0 * ___realloc_1;
	// FMOD.DSP_FREE_FUNC FMOD.DSP_STATE_FUNCTIONS::free
	DSP_FREE_FUNC_t0C9E6DE1DF61298098E07E792A9A1BF26AA681C2 * ___free_2;
	// FMOD.DSP_GETSAMPLERATE_FUNC FMOD.DSP_STATE_FUNCTIONS::getsamplerate
	DSP_GETSAMPLERATE_FUNC_t25AB56A22F09DA2A058DC879C9916BB13E9C2E02 * ___getsamplerate_3;
	// FMOD.DSP_GETBLOCKSIZE_FUNC FMOD.DSP_STATE_FUNCTIONS::getblocksize
	DSP_GETBLOCKSIZE_FUNC_t9B624C10ADE32AAC618ACF14395A8A59BDDFDD50 * ___getblocksize_4;
	// System.IntPtr FMOD.DSP_STATE_FUNCTIONS::dft
	intptr_t ___dft_5;
	// System.IntPtr FMOD.DSP_STATE_FUNCTIONS::pan
	intptr_t ___pan_6;
	// FMOD.DSP_GETSPEAKERMODE_FUNC FMOD.DSP_STATE_FUNCTIONS::getspeakermode
	DSP_GETSPEAKERMODE_FUNC_t8047C7AB197EF964C7E2299C1EF3B5A00F345B79 * ___getspeakermode_7;
	// FMOD.DSP_GETCLOCK_FUNC FMOD.DSP_STATE_FUNCTIONS::getclock
	DSP_GETCLOCK_FUNC_t0449CC42281AF16DB70CB8E93459A7B5D5C62A75 * ___getclock_8;
	// FMOD.DSP_GETLISTENERATTRIBUTES_FUNC FMOD.DSP_STATE_FUNCTIONS::getlistenerattributes
	DSP_GETLISTENERATTRIBUTES_FUNC_t69622B724F9617BD5217ACCF1EB398B9F6060D7B * ___getlistenerattributes_9;
	// FMOD.DSP_LOG_FUNC FMOD.DSP_STATE_FUNCTIONS::log
	DSP_LOG_FUNC_t85E329EB1F7C54E80A66F8FBA3DB2C2C58E72493 * ___log_10;
	// FMOD.DSP_GETUSERDATA_FUNC FMOD.DSP_STATE_FUNCTIONS::getuserdata
	DSP_GETUSERDATA_FUNC_tF11A456B243BF11A5E4283EBBDA9220E904177A8 * ___getuserdata_11;

public:
	inline static int32_t get_offset_of_alloc_0() { return static_cast<int32_t>(offsetof(DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B, ___alloc_0)); }
	inline DSP_ALLOC_FUNC_t8CD6D271F70AFD7BFE9A856DAD1D444E72AA422D * get_alloc_0() const { return ___alloc_0; }
	inline DSP_ALLOC_FUNC_t8CD6D271F70AFD7BFE9A856DAD1D444E72AA422D ** get_address_of_alloc_0() { return &___alloc_0; }
	inline void set_alloc_0(DSP_ALLOC_FUNC_t8CD6D271F70AFD7BFE9A856DAD1D444E72AA422D * value)
	{
		___alloc_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___alloc_0), (void*)value);
	}

	inline static int32_t get_offset_of_realloc_1() { return static_cast<int32_t>(offsetof(DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B, ___realloc_1)); }
	inline DSP_REALLOC_FUNC_t1F4302C05A784F080C70909A2A758DFBAFC3F4E0 * get_realloc_1() const { return ___realloc_1; }
	inline DSP_REALLOC_FUNC_t1F4302C05A784F080C70909A2A758DFBAFC3F4E0 ** get_address_of_realloc_1() { return &___realloc_1; }
	inline void set_realloc_1(DSP_REALLOC_FUNC_t1F4302C05A784F080C70909A2A758DFBAFC3F4E0 * value)
	{
		___realloc_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___realloc_1), (void*)value);
	}

	inline static int32_t get_offset_of_free_2() { return static_cast<int32_t>(offsetof(DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B, ___free_2)); }
	inline DSP_FREE_FUNC_t0C9E6DE1DF61298098E07E792A9A1BF26AA681C2 * get_free_2() const { return ___free_2; }
	inline DSP_FREE_FUNC_t0C9E6DE1DF61298098E07E792A9A1BF26AA681C2 ** get_address_of_free_2() { return &___free_2; }
	inline void set_free_2(DSP_FREE_FUNC_t0C9E6DE1DF61298098E07E792A9A1BF26AA681C2 * value)
	{
		___free_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___free_2), (void*)value);
	}

	inline static int32_t get_offset_of_getsamplerate_3() { return static_cast<int32_t>(offsetof(DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B, ___getsamplerate_3)); }
	inline DSP_GETSAMPLERATE_FUNC_t25AB56A22F09DA2A058DC879C9916BB13E9C2E02 * get_getsamplerate_3() const { return ___getsamplerate_3; }
	inline DSP_GETSAMPLERATE_FUNC_t25AB56A22F09DA2A058DC879C9916BB13E9C2E02 ** get_address_of_getsamplerate_3() { return &___getsamplerate_3; }
	inline void set_getsamplerate_3(DSP_GETSAMPLERATE_FUNC_t25AB56A22F09DA2A058DC879C9916BB13E9C2E02 * value)
	{
		___getsamplerate_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___getsamplerate_3), (void*)value);
	}

	inline static int32_t get_offset_of_getblocksize_4() { return static_cast<int32_t>(offsetof(DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B, ___getblocksize_4)); }
	inline DSP_GETBLOCKSIZE_FUNC_t9B624C10ADE32AAC618ACF14395A8A59BDDFDD50 * get_getblocksize_4() const { return ___getblocksize_4; }
	inline DSP_GETBLOCKSIZE_FUNC_t9B624C10ADE32AAC618ACF14395A8A59BDDFDD50 ** get_address_of_getblocksize_4() { return &___getblocksize_4; }
	inline void set_getblocksize_4(DSP_GETBLOCKSIZE_FUNC_t9B624C10ADE32AAC618ACF14395A8A59BDDFDD50 * value)
	{
		___getblocksize_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___getblocksize_4), (void*)value);
	}

	inline static int32_t get_offset_of_dft_5() { return static_cast<int32_t>(offsetof(DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B, ___dft_5)); }
	inline intptr_t get_dft_5() const { return ___dft_5; }
	inline intptr_t* get_address_of_dft_5() { return &___dft_5; }
	inline void set_dft_5(intptr_t value)
	{
		___dft_5 = value;
	}

	inline static int32_t get_offset_of_pan_6() { return static_cast<int32_t>(offsetof(DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B, ___pan_6)); }
	inline intptr_t get_pan_6() const { return ___pan_6; }
	inline intptr_t* get_address_of_pan_6() { return &___pan_6; }
	inline void set_pan_6(intptr_t value)
	{
		___pan_6 = value;
	}

	inline static int32_t get_offset_of_getspeakermode_7() { return static_cast<int32_t>(offsetof(DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B, ___getspeakermode_7)); }
	inline DSP_GETSPEAKERMODE_FUNC_t8047C7AB197EF964C7E2299C1EF3B5A00F345B79 * get_getspeakermode_7() const { return ___getspeakermode_7; }
	inline DSP_GETSPEAKERMODE_FUNC_t8047C7AB197EF964C7E2299C1EF3B5A00F345B79 ** get_address_of_getspeakermode_7() { return &___getspeakermode_7; }
	inline void set_getspeakermode_7(DSP_GETSPEAKERMODE_FUNC_t8047C7AB197EF964C7E2299C1EF3B5A00F345B79 * value)
	{
		___getspeakermode_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___getspeakermode_7), (void*)value);
	}

	inline static int32_t get_offset_of_getclock_8() { return static_cast<int32_t>(offsetof(DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B, ___getclock_8)); }
	inline DSP_GETCLOCK_FUNC_t0449CC42281AF16DB70CB8E93459A7B5D5C62A75 * get_getclock_8() const { return ___getclock_8; }
	inline DSP_GETCLOCK_FUNC_t0449CC42281AF16DB70CB8E93459A7B5D5C62A75 ** get_address_of_getclock_8() { return &___getclock_8; }
	inline void set_getclock_8(DSP_GETCLOCK_FUNC_t0449CC42281AF16DB70CB8E93459A7B5D5C62A75 * value)
	{
		___getclock_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___getclock_8), (void*)value);
	}

	inline static int32_t get_offset_of_getlistenerattributes_9() { return static_cast<int32_t>(offsetof(DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B, ___getlistenerattributes_9)); }
	inline DSP_GETLISTENERATTRIBUTES_FUNC_t69622B724F9617BD5217ACCF1EB398B9F6060D7B * get_getlistenerattributes_9() const { return ___getlistenerattributes_9; }
	inline DSP_GETLISTENERATTRIBUTES_FUNC_t69622B724F9617BD5217ACCF1EB398B9F6060D7B ** get_address_of_getlistenerattributes_9() { return &___getlistenerattributes_9; }
	inline void set_getlistenerattributes_9(DSP_GETLISTENERATTRIBUTES_FUNC_t69622B724F9617BD5217ACCF1EB398B9F6060D7B * value)
	{
		___getlistenerattributes_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___getlistenerattributes_9), (void*)value);
	}

	inline static int32_t get_offset_of_log_10() { return static_cast<int32_t>(offsetof(DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B, ___log_10)); }
	inline DSP_LOG_FUNC_t85E329EB1F7C54E80A66F8FBA3DB2C2C58E72493 * get_log_10() const { return ___log_10; }
	inline DSP_LOG_FUNC_t85E329EB1F7C54E80A66F8FBA3DB2C2C58E72493 ** get_address_of_log_10() { return &___log_10; }
	inline void set_log_10(DSP_LOG_FUNC_t85E329EB1F7C54E80A66F8FBA3DB2C2C58E72493 * value)
	{
		___log_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___log_10), (void*)value);
	}

	inline static int32_t get_offset_of_getuserdata_11() { return static_cast<int32_t>(offsetof(DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B, ___getuserdata_11)); }
	inline DSP_GETUSERDATA_FUNC_tF11A456B243BF11A5E4283EBBDA9220E904177A8 * get_getuserdata_11() const { return ___getuserdata_11; }
	inline DSP_GETUSERDATA_FUNC_tF11A456B243BF11A5E4283EBBDA9220E904177A8 ** get_address_of_getuserdata_11() { return &___getuserdata_11; }
	inline void set_getuserdata_11(DSP_GETUSERDATA_FUNC_tF11A456B243BF11A5E4283EBBDA9220E904177A8 * value)
	{
		___getuserdata_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___getuserdata_11), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of FMOD.DSP_STATE_FUNCTIONS
struct DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B_marshaled_pinvoke
{
	Il2CppMethodPointer ___alloc_0;
	Il2CppMethodPointer ___realloc_1;
	Il2CppMethodPointer ___free_2;
	Il2CppMethodPointer ___getsamplerate_3;
	Il2CppMethodPointer ___getblocksize_4;
	intptr_t ___dft_5;
	intptr_t ___pan_6;
	Il2CppMethodPointer ___getspeakermode_7;
	Il2CppMethodPointer ___getclock_8;
	Il2CppMethodPointer ___getlistenerattributes_9;
	Il2CppMethodPointer ___log_10;
	Il2CppMethodPointer ___getuserdata_11;
};
// Native definition for COM marshalling of FMOD.DSP_STATE_FUNCTIONS
struct DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B_marshaled_com
{
	Il2CppMethodPointer ___alloc_0;
	Il2CppMethodPointer ___realloc_1;
	Il2CppMethodPointer ___free_2;
	Il2CppMethodPointer ___getsamplerate_3;
	Il2CppMethodPointer ___getblocksize_4;
	intptr_t ___dft_5;
	intptr_t ___pan_6;
	Il2CppMethodPointer ___getspeakermode_7;
	Il2CppMethodPointer ___getclock_8;
	Il2CppMethodPointer ___getlistenerattributes_9;
	Il2CppMethodPointer ___log_10;
	Il2CppMethodPointer ___getuserdata_11;
};

// FMOD.DSP_THREE_EQ
struct  DSP_THREE_EQ_t30C01B9446AFBC13062A063727AB57C508BAA26B 
{
public:
	// System.Int32 FMOD.DSP_THREE_EQ::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_THREE_EQ_t30C01B9446AFBC13062A063727AB57C508BAA26B, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_THREE_EQ_CROSSOVERSLOPE_TYPE
struct  DSP_THREE_EQ_CROSSOVERSLOPE_TYPE_t3E987FB444AFE2FD601714962AF89FCD65A05478 
{
public:
	// System.Int32 FMOD.DSP_THREE_EQ_CROSSOVERSLOPE_TYPE::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_THREE_EQ_CROSSOVERSLOPE_TYPE_t3E987FB444AFE2FD601714962AF89FCD65A05478, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_TRANSCEIVER
struct  DSP_TRANSCEIVER_t6762C8571D9DD169999C10C510DD5713B8AB8F54 
{
public:
	// System.Int32 FMOD.DSP_TRANSCEIVER::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_TRANSCEIVER_t6762C8571D9DD169999C10C510DD5713B8AB8F54, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_TRANSCEIVER_SPEAKERMODE
struct  DSP_TRANSCEIVER_SPEAKERMODE_tD1F03792D24F8356AC9D9BDD39E09F556A069927 
{
public:
	// System.Int32 FMOD.DSP_TRANSCEIVER_SPEAKERMODE::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_TRANSCEIVER_SPEAKERMODE_tD1F03792D24F8356AC9D9BDD39E09F556A069927, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_TREMOLO
struct  DSP_TREMOLO_t381C60E336D58CBA9F38D5C2E278B689F282CB9A 
{
public:
	// System.Int32 FMOD.DSP_TREMOLO::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_TREMOLO_t381C60E336D58CBA9F38D5C2E278B689F282CB9A, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.DSP_TYPE
struct  DSP_TYPE_t190A65E5BA586522745DF57DF196CCC47B03BAE6 
{
public:
	// System.Int32 FMOD.DSP_TYPE::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DSP_TYPE_t190A65E5BA586522745DF57DF196CCC47B03BAE6, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.ERRORCALLBACK_INSTANCETYPE
struct  ERRORCALLBACK_INSTANCETYPE_t4EFD5CE9C6DA52491C1ABADFD95A6EE51678CFE9 
{
public:
	// System.Int32 FMOD.ERRORCALLBACK_INSTANCETYPE::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ERRORCALLBACK_INSTANCETYPE_t4EFD5CE9C6DA52491C1ABADFD95A6EE51678CFE9, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.MEMORY_TYPE
struct  MEMORY_TYPE_tD54CA7DAFC85A6084D80FE45AC3B645475B00AD1 
{
public:
	// System.UInt32 FMOD.MEMORY_TYPE::value__
	uint32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(MEMORY_TYPE_tD54CA7DAFC85A6084D80FE45AC3B645475B00AD1, ___value___2)); }
	inline uint32_t get_value___2() const { return ___value___2; }
	inline uint32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(uint32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.MODE
struct  MODE_t65AA27962E0C95697975266AF2328A6B9D91352E 
{
public:
	// System.UInt32 FMOD.MODE::value__
	uint32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(MODE_t65AA27962E0C95697975266AF2328A6B9D91352E, ___value___2)); }
	inline uint32_t get_value___2() const { return ___value___2; }
	inline uint32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(uint32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.RESULT
struct  RESULT_tF3F53ADDA8F8896CCA7F204BC866E5C1573A62FC 
{
public:
	// System.Int32 FMOD.RESULT::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(RESULT_tF3F53ADDA8F8896CCA7F204BC866E5C1573A62FC, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.SOUND_FORMAT
struct  SOUND_FORMAT_t5FEEB7D2984DCE22869EE1D87FE0A407D8BB105A 
{
public:
	// System.Int32 FMOD.SOUND_FORMAT::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SOUND_FORMAT_t5FEEB7D2984DCE22869EE1D87FE0A407D8BB105A, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.SOUND_TYPE
struct  SOUND_TYPE_tB667769B3388825224F9C7C969BADB77F147B6ED 
{
public:
	// System.Int32 FMOD.SOUND_TYPE::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SOUND_TYPE_tB667769B3388825224F9C7C969BADB77F147B6ED, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.SPEAKERMODE
struct  SPEAKERMODE_t336E2FFFB19398BDA6AC314E55997DF0CC1068A1 
{
public:
	// System.Int32 FMOD.SPEAKERMODE::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SPEAKERMODE_t336E2FFFB19398BDA6AC314E55997DF0CC1068A1, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// FMOD.Sound
struct  Sound_t885E85646940F117BE88C2AF5A78E8E51374D688 
{
public:
	// System.IntPtr FMOD.Sound::handle
	intptr_t ___handle_0;

public:
	inline static int32_t get_offset_of_handle_0() { return static_cast<int32_t>(offsetof(Sound_t885E85646940F117BE88C2AF5A78E8E51374D688, ___handle_0)); }
	inline intptr_t get_handle_0() const { return ___handle_0; }
	inline intptr_t* get_address_of_handle_0() { return &___handle_0; }
	inline void set_handle_0(intptr_t value)
	{
		___handle_0 = value;
	}
};


// FMOD.StringHelper_ThreadSafeEncoding
struct  ThreadSafeEncoding_t9C88ACD17730C478FB2685CA11D1ABC64C1A1771  : public RuntimeObject
{
public:
	// System.Text.UTF8Encoding FMOD.StringHelper_ThreadSafeEncoding::encoding
	UTF8Encoding_t77ED103B749A387EF072C3429F48C91D12CA08DE * ___encoding_0;
	// System.Byte[] FMOD.StringHelper_ThreadSafeEncoding::encodedBuffer
	ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* ___encodedBuffer_1;
	// System.Char[] FMOD.StringHelper_ThreadSafeEncoding::decodedBuffer
	CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* ___decodedBuffer_2;
	// System.Boolean FMOD.StringHelper_ThreadSafeEncoding::inUse
	bool ___inUse_3;
	// System.Runtime.InteropServices.GCHandle FMOD.StringHelper_ThreadSafeEncoding::gcHandle
	GCHandle_t39FAEE3EA592432C93B574A31DD83B87F1847DE3  ___gcHandle_4;

public:
	inline static int32_t get_offset_of_encoding_0() { return static_cast<int32_t>(offsetof(ThreadSafeEncoding_t9C88ACD17730C478FB2685CA11D1ABC64C1A1771, ___encoding_0)); }
	inline UTF8Encoding_t77ED103B749A387EF072C3429F48C91D12CA08DE * get_encoding_0() const { return ___encoding_0; }
	inline UTF8Encoding_t77ED103B749A387EF072C3429F48C91D12CA08DE ** get_address_of_encoding_0() { return &___encoding_0; }
	inline void set_encoding_0(UTF8Encoding_t77ED103B749A387EF072C3429F48C91D12CA08DE * value)
	{
		___encoding_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___encoding_0), (void*)value);
	}

	inline static int32_t get_offset_of_encodedBuffer_1() { return static_cast<int32_t>(offsetof(ThreadSafeEncoding_t9C88ACD17730C478FB2685CA11D1ABC64C1A1771, ___encodedBuffer_1)); }
	inline ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* get_encodedBuffer_1() const { return ___encodedBuffer_1; }
	inline ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821** get_address_of_encodedBuffer_1() { return &___encodedBuffer_1; }
	inline void set_encodedBuffer_1(ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* value)
	{
		___encodedBuffer_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___encodedBuffer_1), (void*)value);
	}

	inline static int32_t get_offset_of_decodedBuffer_2() { return static_cast<int32_t>(offsetof(ThreadSafeEncoding_t9C88ACD17730C478FB2685CA11D1ABC64C1A1771, ___decodedBuffer_2)); }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* get_decodedBuffer_2() const { return ___decodedBuffer_2; }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2** get_address_of_decodedBuffer_2() { return &___decodedBuffer_2; }
	inline void set_decodedBuffer_2(CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* value)
	{
		___decodedBuffer_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___decodedBuffer_2), (void*)value);
	}

	inline static int32_t get_offset_of_inUse_3() { return static_cast<int32_t>(offsetof(ThreadSafeEncoding_t9C88ACD17730C478FB2685CA11D1ABC64C1A1771, ___inUse_3)); }
	inline bool get_inUse_3() const { return ___inUse_3; }
	inline bool* get_address_of_inUse_3() { return &___inUse_3; }
	inline void set_inUse_3(bool value)
	{
		___inUse_3 = value;
	}

	inline static int32_t get_offset_of_gcHandle_4() { return static_cast<int32_t>(offsetof(ThreadSafeEncoding_t9C88ACD17730C478FB2685CA11D1ABC64C1A1771, ___gcHandle_4)); }
	inline GCHandle_t39FAEE3EA592432C93B574A31DD83B87F1847DE3  get_gcHandle_4() const { return ___gcHandle_4; }
	inline GCHandle_t39FAEE3EA592432C93B574A31DD83B87F1847DE3 * get_address_of_gcHandle_4() { return &___gcHandle_4; }
	inline void set_gcHandle_4(GCHandle_t39FAEE3EA592432C93B574A31DD83B87F1847DE3  value)
	{
		___gcHandle_4 = value;
	}
};


// FMOD.StringWrapper
struct  StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 
{
public:
	// System.IntPtr FMOD.StringWrapper::nativeUtf8Ptr
	intptr_t ___nativeUtf8Ptr_0;

public:
	inline static int32_t get_offset_of_nativeUtf8Ptr_0() { return static_cast<int32_t>(offsetof(StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9, ___nativeUtf8Ptr_0)); }
	inline intptr_t get_nativeUtf8Ptr_0() const { return ___nativeUtf8Ptr_0; }
	inline intptr_t* get_address_of_nativeUtf8Ptr_0() { return &___nativeUtf8Ptr_0; }
	inline void set_nativeUtf8Ptr_0(intptr_t value)
	{
		___nativeUtf8Ptr_0 = value;
	}
};


// FMOD.System
struct  System_t1E8F97CEB4B863C4A09A4EC514B0C27FBA8D08B7 
{
public:
	// System.IntPtr FMOD.System::handle
	intptr_t ___handle_0;

public:
	inline static int32_t get_offset_of_handle_0() { return static_cast<int32_t>(offsetof(System_t1E8F97CEB4B863C4A09A4EC514B0C27FBA8D08B7, ___handle_0)); }
	inline intptr_t get_handle_0() const { return ___handle_0; }
	inline intptr_t* get_address_of_handle_0() { return &___handle_0; }
	inline void set_handle_0(intptr_t value)
	{
		___handle_0 = value;
	}
};


// FMOD.TIMEUNIT
struct  TIMEUNIT_t863B6B7468CD25AA1558CFC75C76B9CABD16A08F 
{
public:
	// System.UInt32 FMOD.TIMEUNIT::value__
	uint32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(TIMEUNIT_t863B6B7468CD25AA1558CFC75C76B9CABD16A08F, ___value___2)); }
	inline uint32_t get_value___2() const { return ___value___2; }
	inline uint32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(uint32_t value)
	{
		___value___2 = value;
	}
};


// System.Delegate
struct  Delegate_t  : public RuntimeObject
{
public:
	// System.IntPtr System.Delegate::method_ptr
	Il2CppMethodPointer ___method_ptr_0;
	// System.IntPtr System.Delegate::invoke_impl
	intptr_t ___invoke_impl_1;
	// System.Object System.Delegate::m_target
	RuntimeObject * ___m_target_2;
	// System.IntPtr System.Delegate::method
	intptr_t ___method_3;
	// System.IntPtr System.Delegate::delegate_trampoline
	intptr_t ___delegate_trampoline_4;
	// System.IntPtr System.Delegate::extra_arg
	intptr_t ___extra_arg_5;
	// System.IntPtr System.Delegate::method_code
	intptr_t ___method_code_6;
	// System.Reflection.MethodInfo System.Delegate::method_info
	MethodInfo_t * ___method_info_7;
	// System.Reflection.MethodInfo System.Delegate::original_method_info
	MethodInfo_t * ___original_method_info_8;
	// System.DelegateData System.Delegate::data
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	// System.Boolean System.Delegate::method_is_virtual
	bool ___method_is_virtual_10;

public:
	inline static int32_t get_offset_of_method_ptr_0() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_ptr_0)); }
	inline Il2CppMethodPointer get_method_ptr_0() const { return ___method_ptr_0; }
	inline Il2CppMethodPointer* get_address_of_method_ptr_0() { return &___method_ptr_0; }
	inline void set_method_ptr_0(Il2CppMethodPointer value)
	{
		___method_ptr_0 = value;
	}

	inline static int32_t get_offset_of_invoke_impl_1() { return static_cast<int32_t>(offsetof(Delegate_t, ___invoke_impl_1)); }
	inline intptr_t get_invoke_impl_1() const { return ___invoke_impl_1; }
	inline intptr_t* get_address_of_invoke_impl_1() { return &___invoke_impl_1; }
	inline void set_invoke_impl_1(intptr_t value)
	{
		___invoke_impl_1 = value;
	}

	inline static int32_t get_offset_of_m_target_2() { return static_cast<int32_t>(offsetof(Delegate_t, ___m_target_2)); }
	inline RuntimeObject * get_m_target_2() const { return ___m_target_2; }
	inline RuntimeObject ** get_address_of_m_target_2() { return &___m_target_2; }
	inline void set_m_target_2(RuntimeObject * value)
	{
		___m_target_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_target_2), (void*)value);
	}

	inline static int32_t get_offset_of_method_3() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_3)); }
	inline intptr_t get_method_3() const { return ___method_3; }
	inline intptr_t* get_address_of_method_3() { return &___method_3; }
	inline void set_method_3(intptr_t value)
	{
		___method_3 = value;
	}

	inline static int32_t get_offset_of_delegate_trampoline_4() { return static_cast<int32_t>(offsetof(Delegate_t, ___delegate_trampoline_4)); }
	inline intptr_t get_delegate_trampoline_4() const { return ___delegate_trampoline_4; }
	inline intptr_t* get_address_of_delegate_trampoline_4() { return &___delegate_trampoline_4; }
	inline void set_delegate_trampoline_4(intptr_t value)
	{
		___delegate_trampoline_4 = value;
	}

	inline static int32_t get_offset_of_extra_arg_5() { return static_cast<int32_t>(offsetof(Delegate_t, ___extra_arg_5)); }
	inline intptr_t get_extra_arg_5() const { return ___extra_arg_5; }
	inline intptr_t* get_address_of_extra_arg_5() { return &___extra_arg_5; }
	inline void set_extra_arg_5(intptr_t value)
	{
		___extra_arg_5 = value;
	}

	inline static int32_t get_offset_of_method_code_6() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_code_6)); }
	inline intptr_t get_method_code_6() const { return ___method_code_6; }
	inline intptr_t* get_address_of_method_code_6() { return &___method_code_6; }
	inline void set_method_code_6(intptr_t value)
	{
		___method_code_6 = value;
	}

	inline static int32_t get_offset_of_method_info_7() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_info_7)); }
	inline MethodInfo_t * get_method_info_7() const { return ___method_info_7; }
	inline MethodInfo_t ** get_address_of_method_info_7() { return &___method_info_7; }
	inline void set_method_info_7(MethodInfo_t * value)
	{
		___method_info_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___method_info_7), (void*)value);
	}

	inline static int32_t get_offset_of_original_method_info_8() { return static_cast<int32_t>(offsetof(Delegate_t, ___original_method_info_8)); }
	inline MethodInfo_t * get_original_method_info_8() const { return ___original_method_info_8; }
	inline MethodInfo_t ** get_address_of_original_method_info_8() { return &___original_method_info_8; }
	inline void set_original_method_info_8(MethodInfo_t * value)
	{
		___original_method_info_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___original_method_info_8), (void*)value);
	}

	inline static int32_t get_offset_of_data_9() { return static_cast<int32_t>(offsetof(Delegate_t, ___data_9)); }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * get_data_9() const { return ___data_9; }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE ** get_address_of_data_9() { return &___data_9; }
	inline void set_data_9(DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * value)
	{
		___data_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___data_9), (void*)value);
	}

	inline static int32_t get_offset_of_method_is_virtual_10() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_is_virtual_10)); }
	inline bool get_method_is_virtual_10() const { return ___method_is_virtual_10; }
	inline bool* get_address_of_method_is_virtual_10() { return &___method_is_virtual_10; }
	inline void set_method_is_virtual_10(bool value)
	{
		___method_is_virtual_10 = value;
	}
};

// Native definition for P/Invoke marshalling of System.Delegate
struct Delegate_t_marshaled_pinvoke
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};
// Native definition for COM marshalling of System.Delegate
struct Delegate_t_marshaled_com
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};

// FMOD.ADVANCEDSETTINGS
struct  ADVANCEDSETTINGS_tBFF57635BCE16597EC0A1F9F059B65709FBC86A9 
{
public:
	// System.Int32 FMOD.ADVANCEDSETTINGS::cbSize
	int32_t ___cbSize_0;
	// System.Int32 FMOD.ADVANCEDSETTINGS::maxMPEGCodecs
	int32_t ___maxMPEGCodecs_1;
	// System.Int32 FMOD.ADVANCEDSETTINGS::maxADPCMCodecs
	int32_t ___maxADPCMCodecs_2;
	// System.Int32 FMOD.ADVANCEDSETTINGS::maxXMACodecs
	int32_t ___maxXMACodecs_3;
	// System.Int32 FMOD.ADVANCEDSETTINGS::maxVorbisCodecs
	int32_t ___maxVorbisCodecs_4;
	// System.Int32 FMOD.ADVANCEDSETTINGS::maxAT9Codecs
	int32_t ___maxAT9Codecs_5;
	// System.Int32 FMOD.ADVANCEDSETTINGS::maxFADPCMCodecs
	int32_t ___maxFADPCMCodecs_6;
	// System.Int32 FMOD.ADVANCEDSETTINGS::maxPCMCodecs
	int32_t ___maxPCMCodecs_7;
	// System.Int32 FMOD.ADVANCEDSETTINGS::ASIONumChannels
	int32_t ___ASIONumChannels_8;
	// System.IntPtr FMOD.ADVANCEDSETTINGS::ASIOChannelList
	intptr_t ___ASIOChannelList_9;
	// System.IntPtr FMOD.ADVANCEDSETTINGS::ASIOSpeakerList
	intptr_t ___ASIOSpeakerList_10;
	// System.Single FMOD.ADVANCEDSETTINGS::vol0virtualvol
	float ___vol0virtualvol_11;
	// System.UInt32 FMOD.ADVANCEDSETTINGS::defaultDecodeBufferSize
	uint32_t ___defaultDecodeBufferSize_12;
	// System.UInt16 FMOD.ADVANCEDSETTINGS::profilePort
	uint16_t ___profilePort_13;
	// System.UInt32 FMOD.ADVANCEDSETTINGS::geometryMaxFadeTime
	uint32_t ___geometryMaxFadeTime_14;
	// System.Single FMOD.ADVANCEDSETTINGS::distanceFilterCenterFreq
	float ___distanceFilterCenterFreq_15;
	// System.Int32 FMOD.ADVANCEDSETTINGS::reverb3Dinstance
	int32_t ___reverb3Dinstance_16;
	// System.Int32 FMOD.ADVANCEDSETTINGS::DSPBufferPoolSize
	int32_t ___DSPBufferPoolSize_17;
	// System.UInt32 FMOD.ADVANCEDSETTINGS::stackSizeStream
	uint32_t ___stackSizeStream_18;
	// System.UInt32 FMOD.ADVANCEDSETTINGS::stackSizeNonBlocking
	uint32_t ___stackSizeNonBlocking_19;
	// System.UInt32 FMOD.ADVANCEDSETTINGS::stackSizeMixer
	uint32_t ___stackSizeMixer_20;
	// FMOD.DSP_RESAMPLER FMOD.ADVANCEDSETTINGS::resamplerMethod
	int32_t ___resamplerMethod_21;
	// System.UInt32 FMOD.ADVANCEDSETTINGS::commandQueueSize
	uint32_t ___commandQueueSize_22;
	// System.UInt32 FMOD.ADVANCEDSETTINGS::randomSeed
	uint32_t ___randomSeed_23;

public:
	inline static int32_t get_offset_of_cbSize_0() { return static_cast<int32_t>(offsetof(ADVANCEDSETTINGS_tBFF57635BCE16597EC0A1F9F059B65709FBC86A9, ___cbSize_0)); }
	inline int32_t get_cbSize_0() const { return ___cbSize_0; }
	inline int32_t* get_address_of_cbSize_0() { return &___cbSize_0; }
	inline void set_cbSize_0(int32_t value)
	{
		___cbSize_0 = value;
	}

	inline static int32_t get_offset_of_maxMPEGCodecs_1() { return static_cast<int32_t>(offsetof(ADVANCEDSETTINGS_tBFF57635BCE16597EC0A1F9F059B65709FBC86A9, ___maxMPEGCodecs_1)); }
	inline int32_t get_maxMPEGCodecs_1() const { return ___maxMPEGCodecs_1; }
	inline int32_t* get_address_of_maxMPEGCodecs_1() { return &___maxMPEGCodecs_1; }
	inline void set_maxMPEGCodecs_1(int32_t value)
	{
		___maxMPEGCodecs_1 = value;
	}

	inline static int32_t get_offset_of_maxADPCMCodecs_2() { return static_cast<int32_t>(offsetof(ADVANCEDSETTINGS_tBFF57635BCE16597EC0A1F9F059B65709FBC86A9, ___maxADPCMCodecs_2)); }
	inline int32_t get_maxADPCMCodecs_2() const { return ___maxADPCMCodecs_2; }
	inline int32_t* get_address_of_maxADPCMCodecs_2() { return &___maxADPCMCodecs_2; }
	inline void set_maxADPCMCodecs_2(int32_t value)
	{
		___maxADPCMCodecs_2 = value;
	}

	inline static int32_t get_offset_of_maxXMACodecs_3() { return static_cast<int32_t>(offsetof(ADVANCEDSETTINGS_tBFF57635BCE16597EC0A1F9F059B65709FBC86A9, ___maxXMACodecs_3)); }
	inline int32_t get_maxXMACodecs_3() const { return ___maxXMACodecs_3; }
	inline int32_t* get_address_of_maxXMACodecs_3() { return &___maxXMACodecs_3; }
	inline void set_maxXMACodecs_3(int32_t value)
	{
		___maxXMACodecs_3 = value;
	}

	inline static int32_t get_offset_of_maxVorbisCodecs_4() { return static_cast<int32_t>(offsetof(ADVANCEDSETTINGS_tBFF57635BCE16597EC0A1F9F059B65709FBC86A9, ___maxVorbisCodecs_4)); }
	inline int32_t get_maxVorbisCodecs_4() const { return ___maxVorbisCodecs_4; }
	inline int32_t* get_address_of_maxVorbisCodecs_4() { return &___maxVorbisCodecs_4; }
	inline void set_maxVorbisCodecs_4(int32_t value)
	{
		___maxVorbisCodecs_4 = value;
	}

	inline static int32_t get_offset_of_maxAT9Codecs_5() { return static_cast<int32_t>(offsetof(ADVANCEDSETTINGS_tBFF57635BCE16597EC0A1F9F059B65709FBC86A9, ___maxAT9Codecs_5)); }
	inline int32_t get_maxAT9Codecs_5() const { return ___maxAT9Codecs_5; }
	inline int32_t* get_address_of_maxAT9Codecs_5() { return &___maxAT9Codecs_5; }
	inline void set_maxAT9Codecs_5(int32_t value)
	{
		___maxAT9Codecs_5 = value;
	}

	inline static int32_t get_offset_of_maxFADPCMCodecs_6() { return static_cast<int32_t>(offsetof(ADVANCEDSETTINGS_tBFF57635BCE16597EC0A1F9F059B65709FBC86A9, ___maxFADPCMCodecs_6)); }
	inline int32_t get_maxFADPCMCodecs_6() const { return ___maxFADPCMCodecs_6; }
	inline int32_t* get_address_of_maxFADPCMCodecs_6() { return &___maxFADPCMCodecs_6; }
	inline void set_maxFADPCMCodecs_6(int32_t value)
	{
		___maxFADPCMCodecs_6 = value;
	}

	inline static int32_t get_offset_of_maxPCMCodecs_7() { return static_cast<int32_t>(offsetof(ADVANCEDSETTINGS_tBFF57635BCE16597EC0A1F9F059B65709FBC86A9, ___maxPCMCodecs_7)); }
	inline int32_t get_maxPCMCodecs_7() const { return ___maxPCMCodecs_7; }
	inline int32_t* get_address_of_maxPCMCodecs_7() { return &___maxPCMCodecs_7; }
	inline void set_maxPCMCodecs_7(int32_t value)
	{
		___maxPCMCodecs_7 = value;
	}

	inline static int32_t get_offset_of_ASIONumChannels_8() { return static_cast<int32_t>(offsetof(ADVANCEDSETTINGS_tBFF57635BCE16597EC0A1F9F059B65709FBC86A9, ___ASIONumChannels_8)); }
	inline int32_t get_ASIONumChannels_8() const { return ___ASIONumChannels_8; }
	inline int32_t* get_address_of_ASIONumChannels_8() { return &___ASIONumChannels_8; }
	inline void set_ASIONumChannels_8(int32_t value)
	{
		___ASIONumChannels_8 = value;
	}

	inline static int32_t get_offset_of_ASIOChannelList_9() { return static_cast<int32_t>(offsetof(ADVANCEDSETTINGS_tBFF57635BCE16597EC0A1F9F059B65709FBC86A9, ___ASIOChannelList_9)); }
	inline intptr_t get_ASIOChannelList_9() const { return ___ASIOChannelList_9; }
	inline intptr_t* get_address_of_ASIOChannelList_9() { return &___ASIOChannelList_9; }
	inline void set_ASIOChannelList_9(intptr_t value)
	{
		___ASIOChannelList_9 = value;
	}

	inline static int32_t get_offset_of_ASIOSpeakerList_10() { return static_cast<int32_t>(offsetof(ADVANCEDSETTINGS_tBFF57635BCE16597EC0A1F9F059B65709FBC86A9, ___ASIOSpeakerList_10)); }
	inline intptr_t get_ASIOSpeakerList_10() const { return ___ASIOSpeakerList_10; }
	inline intptr_t* get_address_of_ASIOSpeakerList_10() { return &___ASIOSpeakerList_10; }
	inline void set_ASIOSpeakerList_10(intptr_t value)
	{
		___ASIOSpeakerList_10 = value;
	}

	inline static int32_t get_offset_of_vol0virtualvol_11() { return static_cast<int32_t>(offsetof(ADVANCEDSETTINGS_tBFF57635BCE16597EC0A1F9F059B65709FBC86A9, ___vol0virtualvol_11)); }
	inline float get_vol0virtualvol_11() const { return ___vol0virtualvol_11; }
	inline float* get_address_of_vol0virtualvol_11() { return &___vol0virtualvol_11; }
	inline void set_vol0virtualvol_11(float value)
	{
		___vol0virtualvol_11 = value;
	}

	inline static int32_t get_offset_of_defaultDecodeBufferSize_12() { return static_cast<int32_t>(offsetof(ADVANCEDSETTINGS_tBFF57635BCE16597EC0A1F9F059B65709FBC86A9, ___defaultDecodeBufferSize_12)); }
	inline uint32_t get_defaultDecodeBufferSize_12() const { return ___defaultDecodeBufferSize_12; }
	inline uint32_t* get_address_of_defaultDecodeBufferSize_12() { return &___defaultDecodeBufferSize_12; }
	inline void set_defaultDecodeBufferSize_12(uint32_t value)
	{
		___defaultDecodeBufferSize_12 = value;
	}

	inline static int32_t get_offset_of_profilePort_13() { return static_cast<int32_t>(offsetof(ADVANCEDSETTINGS_tBFF57635BCE16597EC0A1F9F059B65709FBC86A9, ___profilePort_13)); }
	inline uint16_t get_profilePort_13() const { return ___profilePort_13; }
	inline uint16_t* get_address_of_profilePort_13() { return &___profilePort_13; }
	inline void set_profilePort_13(uint16_t value)
	{
		___profilePort_13 = value;
	}

	inline static int32_t get_offset_of_geometryMaxFadeTime_14() { return static_cast<int32_t>(offsetof(ADVANCEDSETTINGS_tBFF57635BCE16597EC0A1F9F059B65709FBC86A9, ___geometryMaxFadeTime_14)); }
	inline uint32_t get_geometryMaxFadeTime_14() const { return ___geometryMaxFadeTime_14; }
	inline uint32_t* get_address_of_geometryMaxFadeTime_14() { return &___geometryMaxFadeTime_14; }
	inline void set_geometryMaxFadeTime_14(uint32_t value)
	{
		___geometryMaxFadeTime_14 = value;
	}

	inline static int32_t get_offset_of_distanceFilterCenterFreq_15() { return static_cast<int32_t>(offsetof(ADVANCEDSETTINGS_tBFF57635BCE16597EC0A1F9F059B65709FBC86A9, ___distanceFilterCenterFreq_15)); }
	inline float get_distanceFilterCenterFreq_15() const { return ___distanceFilterCenterFreq_15; }
	inline float* get_address_of_distanceFilterCenterFreq_15() { return &___distanceFilterCenterFreq_15; }
	inline void set_distanceFilterCenterFreq_15(float value)
	{
		___distanceFilterCenterFreq_15 = value;
	}

	inline static int32_t get_offset_of_reverb3Dinstance_16() { return static_cast<int32_t>(offsetof(ADVANCEDSETTINGS_tBFF57635BCE16597EC0A1F9F059B65709FBC86A9, ___reverb3Dinstance_16)); }
	inline int32_t get_reverb3Dinstance_16() const { return ___reverb3Dinstance_16; }
	inline int32_t* get_address_of_reverb3Dinstance_16() { return &___reverb3Dinstance_16; }
	inline void set_reverb3Dinstance_16(int32_t value)
	{
		___reverb3Dinstance_16 = value;
	}

	inline static int32_t get_offset_of_DSPBufferPoolSize_17() { return static_cast<int32_t>(offsetof(ADVANCEDSETTINGS_tBFF57635BCE16597EC0A1F9F059B65709FBC86A9, ___DSPBufferPoolSize_17)); }
	inline int32_t get_DSPBufferPoolSize_17() const { return ___DSPBufferPoolSize_17; }
	inline int32_t* get_address_of_DSPBufferPoolSize_17() { return &___DSPBufferPoolSize_17; }
	inline void set_DSPBufferPoolSize_17(int32_t value)
	{
		___DSPBufferPoolSize_17 = value;
	}

	inline static int32_t get_offset_of_stackSizeStream_18() { return static_cast<int32_t>(offsetof(ADVANCEDSETTINGS_tBFF57635BCE16597EC0A1F9F059B65709FBC86A9, ___stackSizeStream_18)); }
	inline uint32_t get_stackSizeStream_18() const { return ___stackSizeStream_18; }
	inline uint32_t* get_address_of_stackSizeStream_18() { return &___stackSizeStream_18; }
	inline void set_stackSizeStream_18(uint32_t value)
	{
		___stackSizeStream_18 = value;
	}

	inline static int32_t get_offset_of_stackSizeNonBlocking_19() { return static_cast<int32_t>(offsetof(ADVANCEDSETTINGS_tBFF57635BCE16597EC0A1F9F059B65709FBC86A9, ___stackSizeNonBlocking_19)); }
	inline uint32_t get_stackSizeNonBlocking_19() const { return ___stackSizeNonBlocking_19; }
	inline uint32_t* get_address_of_stackSizeNonBlocking_19() { return &___stackSizeNonBlocking_19; }
	inline void set_stackSizeNonBlocking_19(uint32_t value)
	{
		___stackSizeNonBlocking_19 = value;
	}

	inline static int32_t get_offset_of_stackSizeMixer_20() { return static_cast<int32_t>(offsetof(ADVANCEDSETTINGS_tBFF57635BCE16597EC0A1F9F059B65709FBC86A9, ___stackSizeMixer_20)); }
	inline uint32_t get_stackSizeMixer_20() const { return ___stackSizeMixer_20; }
	inline uint32_t* get_address_of_stackSizeMixer_20() { return &___stackSizeMixer_20; }
	inline void set_stackSizeMixer_20(uint32_t value)
	{
		___stackSizeMixer_20 = value;
	}

	inline static int32_t get_offset_of_resamplerMethod_21() { return static_cast<int32_t>(offsetof(ADVANCEDSETTINGS_tBFF57635BCE16597EC0A1F9F059B65709FBC86A9, ___resamplerMethod_21)); }
	inline int32_t get_resamplerMethod_21() const { return ___resamplerMethod_21; }
	inline int32_t* get_address_of_resamplerMethod_21() { return &___resamplerMethod_21; }
	inline void set_resamplerMethod_21(int32_t value)
	{
		___resamplerMethod_21 = value;
	}

	inline static int32_t get_offset_of_commandQueueSize_22() { return static_cast<int32_t>(offsetof(ADVANCEDSETTINGS_tBFF57635BCE16597EC0A1F9F059B65709FBC86A9, ___commandQueueSize_22)); }
	inline uint32_t get_commandQueueSize_22() const { return ___commandQueueSize_22; }
	inline uint32_t* get_address_of_commandQueueSize_22() { return &___commandQueueSize_22; }
	inline void set_commandQueueSize_22(uint32_t value)
	{
		___commandQueueSize_22 = value;
	}

	inline static int32_t get_offset_of_randomSeed_23() { return static_cast<int32_t>(offsetof(ADVANCEDSETTINGS_tBFF57635BCE16597EC0A1F9F059B65709FBC86A9, ___randomSeed_23)); }
	inline uint32_t get_randomSeed_23() const { return ___randomSeed_23; }
	inline uint32_t* get_address_of_randomSeed_23() { return &___randomSeed_23; }
	inline void set_randomSeed_23(uint32_t value)
	{
		___randomSeed_23 = value;
	}
};


// FMOD.CREATESOUNDEXINFO
struct  CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225 
{
public:
	// System.Int32 FMOD.CREATESOUNDEXINFO::cbsize
	int32_t ___cbsize_0;
	// System.UInt32 FMOD.CREATESOUNDEXINFO::length
	uint32_t ___length_1;
	// System.UInt32 FMOD.CREATESOUNDEXINFO::fileoffset
	uint32_t ___fileoffset_2;
	// System.Int32 FMOD.CREATESOUNDEXINFO::numchannels
	int32_t ___numchannels_3;
	// System.Int32 FMOD.CREATESOUNDEXINFO::defaultfrequency
	int32_t ___defaultfrequency_4;
	// FMOD.SOUND_FORMAT FMOD.CREATESOUNDEXINFO::format
	int32_t ___format_5;
	// System.UInt32 FMOD.CREATESOUNDEXINFO::decodebuffersize
	uint32_t ___decodebuffersize_6;
	// System.Int32 FMOD.CREATESOUNDEXINFO::initialsubsound
	int32_t ___initialsubsound_7;
	// System.Int32 FMOD.CREATESOUNDEXINFO::numsubsounds
	int32_t ___numsubsounds_8;
	// System.IntPtr FMOD.CREATESOUNDEXINFO::inclusionlist
	intptr_t ___inclusionlist_9;
	// System.Int32 FMOD.CREATESOUNDEXINFO::inclusionlistnum
	int32_t ___inclusionlistnum_10;
	// FMOD.SOUND_PCMREAD_CALLBACK FMOD.CREATESOUNDEXINFO::pcmreadcallback
	SOUND_PCMREAD_CALLBACK_t73F82A176E129053584188355C74C98D216AF44B * ___pcmreadcallback_11;
	// FMOD.SOUND_PCMSETPOS_CALLBACK FMOD.CREATESOUNDEXINFO::pcmsetposcallback
	SOUND_PCMSETPOS_CALLBACK_t2CA9012A6D4A7E750DC9C96F698AD9F4FA1175DD * ___pcmsetposcallback_12;
	// FMOD.SOUND_NONBLOCK_CALLBACK FMOD.CREATESOUNDEXINFO::nonblockcallback
	SOUND_NONBLOCK_CALLBACK_tFDA9F7F30FE6A3D367ACB86746046DD480BC45CE * ___nonblockcallback_13;
	// System.IntPtr FMOD.CREATESOUNDEXINFO::dlsname
	intptr_t ___dlsname_14;
	// System.IntPtr FMOD.CREATESOUNDEXINFO::encryptionkey
	intptr_t ___encryptionkey_15;
	// System.Int32 FMOD.CREATESOUNDEXINFO::maxpolyphony
	int32_t ___maxpolyphony_16;
	// System.IntPtr FMOD.CREATESOUNDEXINFO::userdata
	intptr_t ___userdata_17;
	// FMOD.SOUND_TYPE FMOD.CREATESOUNDEXINFO::suggestedsoundtype
	int32_t ___suggestedsoundtype_18;
	// FMOD.FILE_OPEN_CALLBACK FMOD.CREATESOUNDEXINFO::fileuseropen
	FILE_OPEN_CALLBACK_t7A7741CFAFE85C3A76DBEE69DF461E6D96AEF17C * ___fileuseropen_19;
	// FMOD.FILE_CLOSE_CALLBACK FMOD.CREATESOUNDEXINFO::fileuserclose
	FILE_CLOSE_CALLBACK_tA347FC35A3EDE3EA674838B9302CA7847B2D0A59 * ___fileuserclose_20;
	// FMOD.FILE_READ_CALLBACK FMOD.CREATESOUNDEXINFO::fileuserread
	FILE_READ_CALLBACK_t98BD5E40D0AC284218606A892F750513E9403C1C * ___fileuserread_21;
	// FMOD.FILE_SEEK_CALLBACK FMOD.CREATESOUNDEXINFO::fileuserseek
	FILE_SEEK_CALLBACK_tCA1713616668F850F4F7CB185CFE66D7728365A1 * ___fileuserseek_22;
	// FMOD.FILE_ASYNCREAD_CALLBACK FMOD.CREATESOUNDEXINFO::fileuserasyncread
	FILE_ASYNCREAD_CALLBACK_tC94093AEE8D56351A512BB4239C46642E969F9D3 * ___fileuserasyncread_23;
	// FMOD.FILE_ASYNCCANCEL_CALLBACK FMOD.CREATESOUNDEXINFO::fileuserasynccancel
	FILE_ASYNCCANCEL_CALLBACK_t6FB6AA5C72C18AE5B41EDCA973157115A2EAEF3D * ___fileuserasynccancel_24;
	// System.IntPtr FMOD.CREATESOUNDEXINFO::fileuserdata
	intptr_t ___fileuserdata_25;
	// System.Int32 FMOD.CREATESOUNDEXINFO::filebuffersize
	int32_t ___filebuffersize_26;
	// FMOD.CHANNELORDER FMOD.CREATESOUNDEXINFO::channelorder
	int32_t ___channelorder_27;
	// System.IntPtr FMOD.CREATESOUNDEXINFO::initialsoundgroup
	intptr_t ___initialsoundgroup_28;
	// System.UInt32 FMOD.CREATESOUNDEXINFO::initialseekposition
	uint32_t ___initialseekposition_29;
	// FMOD.TIMEUNIT FMOD.CREATESOUNDEXINFO::initialseekpostype
	uint32_t ___initialseekpostype_30;
	// System.Int32 FMOD.CREATESOUNDEXINFO::ignoresetfilesystem
	int32_t ___ignoresetfilesystem_31;
	// System.UInt32 FMOD.CREATESOUNDEXINFO::audioqueuepolicy
	uint32_t ___audioqueuepolicy_32;
	// System.UInt32 FMOD.CREATESOUNDEXINFO::minmidigranularity
	uint32_t ___minmidigranularity_33;
	// System.Int32 FMOD.CREATESOUNDEXINFO::nonblockthreadid
	int32_t ___nonblockthreadid_34;
	// System.IntPtr FMOD.CREATESOUNDEXINFO::fsbguid
	intptr_t ___fsbguid_35;

public:
	inline static int32_t get_offset_of_cbsize_0() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___cbsize_0)); }
	inline int32_t get_cbsize_0() const { return ___cbsize_0; }
	inline int32_t* get_address_of_cbsize_0() { return &___cbsize_0; }
	inline void set_cbsize_0(int32_t value)
	{
		___cbsize_0 = value;
	}

	inline static int32_t get_offset_of_length_1() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___length_1)); }
	inline uint32_t get_length_1() const { return ___length_1; }
	inline uint32_t* get_address_of_length_1() { return &___length_1; }
	inline void set_length_1(uint32_t value)
	{
		___length_1 = value;
	}

	inline static int32_t get_offset_of_fileoffset_2() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___fileoffset_2)); }
	inline uint32_t get_fileoffset_2() const { return ___fileoffset_2; }
	inline uint32_t* get_address_of_fileoffset_2() { return &___fileoffset_2; }
	inline void set_fileoffset_2(uint32_t value)
	{
		___fileoffset_2 = value;
	}

	inline static int32_t get_offset_of_numchannels_3() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___numchannels_3)); }
	inline int32_t get_numchannels_3() const { return ___numchannels_3; }
	inline int32_t* get_address_of_numchannels_3() { return &___numchannels_3; }
	inline void set_numchannels_3(int32_t value)
	{
		___numchannels_3 = value;
	}

	inline static int32_t get_offset_of_defaultfrequency_4() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___defaultfrequency_4)); }
	inline int32_t get_defaultfrequency_4() const { return ___defaultfrequency_4; }
	inline int32_t* get_address_of_defaultfrequency_4() { return &___defaultfrequency_4; }
	inline void set_defaultfrequency_4(int32_t value)
	{
		___defaultfrequency_4 = value;
	}

	inline static int32_t get_offset_of_format_5() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___format_5)); }
	inline int32_t get_format_5() const { return ___format_5; }
	inline int32_t* get_address_of_format_5() { return &___format_5; }
	inline void set_format_5(int32_t value)
	{
		___format_5 = value;
	}

	inline static int32_t get_offset_of_decodebuffersize_6() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___decodebuffersize_6)); }
	inline uint32_t get_decodebuffersize_6() const { return ___decodebuffersize_6; }
	inline uint32_t* get_address_of_decodebuffersize_6() { return &___decodebuffersize_6; }
	inline void set_decodebuffersize_6(uint32_t value)
	{
		___decodebuffersize_6 = value;
	}

	inline static int32_t get_offset_of_initialsubsound_7() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___initialsubsound_7)); }
	inline int32_t get_initialsubsound_7() const { return ___initialsubsound_7; }
	inline int32_t* get_address_of_initialsubsound_7() { return &___initialsubsound_7; }
	inline void set_initialsubsound_7(int32_t value)
	{
		___initialsubsound_7 = value;
	}

	inline static int32_t get_offset_of_numsubsounds_8() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___numsubsounds_8)); }
	inline int32_t get_numsubsounds_8() const { return ___numsubsounds_8; }
	inline int32_t* get_address_of_numsubsounds_8() { return &___numsubsounds_8; }
	inline void set_numsubsounds_8(int32_t value)
	{
		___numsubsounds_8 = value;
	}

	inline static int32_t get_offset_of_inclusionlist_9() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___inclusionlist_9)); }
	inline intptr_t get_inclusionlist_9() const { return ___inclusionlist_9; }
	inline intptr_t* get_address_of_inclusionlist_9() { return &___inclusionlist_9; }
	inline void set_inclusionlist_9(intptr_t value)
	{
		___inclusionlist_9 = value;
	}

	inline static int32_t get_offset_of_inclusionlistnum_10() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___inclusionlistnum_10)); }
	inline int32_t get_inclusionlistnum_10() const { return ___inclusionlistnum_10; }
	inline int32_t* get_address_of_inclusionlistnum_10() { return &___inclusionlistnum_10; }
	inline void set_inclusionlistnum_10(int32_t value)
	{
		___inclusionlistnum_10 = value;
	}

	inline static int32_t get_offset_of_pcmreadcallback_11() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___pcmreadcallback_11)); }
	inline SOUND_PCMREAD_CALLBACK_t73F82A176E129053584188355C74C98D216AF44B * get_pcmreadcallback_11() const { return ___pcmreadcallback_11; }
	inline SOUND_PCMREAD_CALLBACK_t73F82A176E129053584188355C74C98D216AF44B ** get_address_of_pcmreadcallback_11() { return &___pcmreadcallback_11; }
	inline void set_pcmreadcallback_11(SOUND_PCMREAD_CALLBACK_t73F82A176E129053584188355C74C98D216AF44B * value)
	{
		___pcmreadcallback_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pcmreadcallback_11), (void*)value);
	}

	inline static int32_t get_offset_of_pcmsetposcallback_12() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___pcmsetposcallback_12)); }
	inline SOUND_PCMSETPOS_CALLBACK_t2CA9012A6D4A7E750DC9C96F698AD9F4FA1175DD * get_pcmsetposcallback_12() const { return ___pcmsetposcallback_12; }
	inline SOUND_PCMSETPOS_CALLBACK_t2CA9012A6D4A7E750DC9C96F698AD9F4FA1175DD ** get_address_of_pcmsetposcallback_12() { return &___pcmsetposcallback_12; }
	inline void set_pcmsetposcallback_12(SOUND_PCMSETPOS_CALLBACK_t2CA9012A6D4A7E750DC9C96F698AD9F4FA1175DD * value)
	{
		___pcmsetposcallback_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pcmsetposcallback_12), (void*)value);
	}

	inline static int32_t get_offset_of_nonblockcallback_13() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___nonblockcallback_13)); }
	inline SOUND_NONBLOCK_CALLBACK_tFDA9F7F30FE6A3D367ACB86746046DD480BC45CE * get_nonblockcallback_13() const { return ___nonblockcallback_13; }
	inline SOUND_NONBLOCK_CALLBACK_tFDA9F7F30FE6A3D367ACB86746046DD480BC45CE ** get_address_of_nonblockcallback_13() { return &___nonblockcallback_13; }
	inline void set_nonblockcallback_13(SOUND_NONBLOCK_CALLBACK_tFDA9F7F30FE6A3D367ACB86746046DD480BC45CE * value)
	{
		___nonblockcallback_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___nonblockcallback_13), (void*)value);
	}

	inline static int32_t get_offset_of_dlsname_14() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___dlsname_14)); }
	inline intptr_t get_dlsname_14() const { return ___dlsname_14; }
	inline intptr_t* get_address_of_dlsname_14() { return &___dlsname_14; }
	inline void set_dlsname_14(intptr_t value)
	{
		___dlsname_14 = value;
	}

	inline static int32_t get_offset_of_encryptionkey_15() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___encryptionkey_15)); }
	inline intptr_t get_encryptionkey_15() const { return ___encryptionkey_15; }
	inline intptr_t* get_address_of_encryptionkey_15() { return &___encryptionkey_15; }
	inline void set_encryptionkey_15(intptr_t value)
	{
		___encryptionkey_15 = value;
	}

	inline static int32_t get_offset_of_maxpolyphony_16() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___maxpolyphony_16)); }
	inline int32_t get_maxpolyphony_16() const { return ___maxpolyphony_16; }
	inline int32_t* get_address_of_maxpolyphony_16() { return &___maxpolyphony_16; }
	inline void set_maxpolyphony_16(int32_t value)
	{
		___maxpolyphony_16 = value;
	}

	inline static int32_t get_offset_of_userdata_17() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___userdata_17)); }
	inline intptr_t get_userdata_17() const { return ___userdata_17; }
	inline intptr_t* get_address_of_userdata_17() { return &___userdata_17; }
	inline void set_userdata_17(intptr_t value)
	{
		___userdata_17 = value;
	}

	inline static int32_t get_offset_of_suggestedsoundtype_18() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___suggestedsoundtype_18)); }
	inline int32_t get_suggestedsoundtype_18() const { return ___suggestedsoundtype_18; }
	inline int32_t* get_address_of_suggestedsoundtype_18() { return &___suggestedsoundtype_18; }
	inline void set_suggestedsoundtype_18(int32_t value)
	{
		___suggestedsoundtype_18 = value;
	}

	inline static int32_t get_offset_of_fileuseropen_19() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___fileuseropen_19)); }
	inline FILE_OPEN_CALLBACK_t7A7741CFAFE85C3A76DBEE69DF461E6D96AEF17C * get_fileuseropen_19() const { return ___fileuseropen_19; }
	inline FILE_OPEN_CALLBACK_t7A7741CFAFE85C3A76DBEE69DF461E6D96AEF17C ** get_address_of_fileuseropen_19() { return &___fileuseropen_19; }
	inline void set_fileuseropen_19(FILE_OPEN_CALLBACK_t7A7741CFAFE85C3A76DBEE69DF461E6D96AEF17C * value)
	{
		___fileuseropen_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___fileuseropen_19), (void*)value);
	}

	inline static int32_t get_offset_of_fileuserclose_20() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___fileuserclose_20)); }
	inline FILE_CLOSE_CALLBACK_tA347FC35A3EDE3EA674838B9302CA7847B2D0A59 * get_fileuserclose_20() const { return ___fileuserclose_20; }
	inline FILE_CLOSE_CALLBACK_tA347FC35A3EDE3EA674838B9302CA7847B2D0A59 ** get_address_of_fileuserclose_20() { return &___fileuserclose_20; }
	inline void set_fileuserclose_20(FILE_CLOSE_CALLBACK_tA347FC35A3EDE3EA674838B9302CA7847B2D0A59 * value)
	{
		___fileuserclose_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___fileuserclose_20), (void*)value);
	}

	inline static int32_t get_offset_of_fileuserread_21() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___fileuserread_21)); }
	inline FILE_READ_CALLBACK_t98BD5E40D0AC284218606A892F750513E9403C1C * get_fileuserread_21() const { return ___fileuserread_21; }
	inline FILE_READ_CALLBACK_t98BD5E40D0AC284218606A892F750513E9403C1C ** get_address_of_fileuserread_21() { return &___fileuserread_21; }
	inline void set_fileuserread_21(FILE_READ_CALLBACK_t98BD5E40D0AC284218606A892F750513E9403C1C * value)
	{
		___fileuserread_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___fileuserread_21), (void*)value);
	}

	inline static int32_t get_offset_of_fileuserseek_22() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___fileuserseek_22)); }
	inline FILE_SEEK_CALLBACK_tCA1713616668F850F4F7CB185CFE66D7728365A1 * get_fileuserseek_22() const { return ___fileuserseek_22; }
	inline FILE_SEEK_CALLBACK_tCA1713616668F850F4F7CB185CFE66D7728365A1 ** get_address_of_fileuserseek_22() { return &___fileuserseek_22; }
	inline void set_fileuserseek_22(FILE_SEEK_CALLBACK_tCA1713616668F850F4F7CB185CFE66D7728365A1 * value)
	{
		___fileuserseek_22 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___fileuserseek_22), (void*)value);
	}

	inline static int32_t get_offset_of_fileuserasyncread_23() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___fileuserasyncread_23)); }
	inline FILE_ASYNCREAD_CALLBACK_tC94093AEE8D56351A512BB4239C46642E969F9D3 * get_fileuserasyncread_23() const { return ___fileuserasyncread_23; }
	inline FILE_ASYNCREAD_CALLBACK_tC94093AEE8D56351A512BB4239C46642E969F9D3 ** get_address_of_fileuserasyncread_23() { return &___fileuserasyncread_23; }
	inline void set_fileuserasyncread_23(FILE_ASYNCREAD_CALLBACK_tC94093AEE8D56351A512BB4239C46642E969F9D3 * value)
	{
		___fileuserasyncread_23 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___fileuserasyncread_23), (void*)value);
	}

	inline static int32_t get_offset_of_fileuserasynccancel_24() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___fileuserasynccancel_24)); }
	inline FILE_ASYNCCANCEL_CALLBACK_t6FB6AA5C72C18AE5B41EDCA973157115A2EAEF3D * get_fileuserasynccancel_24() const { return ___fileuserasynccancel_24; }
	inline FILE_ASYNCCANCEL_CALLBACK_t6FB6AA5C72C18AE5B41EDCA973157115A2EAEF3D ** get_address_of_fileuserasynccancel_24() { return &___fileuserasynccancel_24; }
	inline void set_fileuserasynccancel_24(FILE_ASYNCCANCEL_CALLBACK_t6FB6AA5C72C18AE5B41EDCA973157115A2EAEF3D * value)
	{
		___fileuserasynccancel_24 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___fileuserasynccancel_24), (void*)value);
	}

	inline static int32_t get_offset_of_fileuserdata_25() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___fileuserdata_25)); }
	inline intptr_t get_fileuserdata_25() const { return ___fileuserdata_25; }
	inline intptr_t* get_address_of_fileuserdata_25() { return &___fileuserdata_25; }
	inline void set_fileuserdata_25(intptr_t value)
	{
		___fileuserdata_25 = value;
	}

	inline static int32_t get_offset_of_filebuffersize_26() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___filebuffersize_26)); }
	inline int32_t get_filebuffersize_26() const { return ___filebuffersize_26; }
	inline int32_t* get_address_of_filebuffersize_26() { return &___filebuffersize_26; }
	inline void set_filebuffersize_26(int32_t value)
	{
		___filebuffersize_26 = value;
	}

	inline static int32_t get_offset_of_channelorder_27() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___channelorder_27)); }
	inline int32_t get_channelorder_27() const { return ___channelorder_27; }
	inline int32_t* get_address_of_channelorder_27() { return &___channelorder_27; }
	inline void set_channelorder_27(int32_t value)
	{
		___channelorder_27 = value;
	}

	inline static int32_t get_offset_of_initialsoundgroup_28() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___initialsoundgroup_28)); }
	inline intptr_t get_initialsoundgroup_28() const { return ___initialsoundgroup_28; }
	inline intptr_t* get_address_of_initialsoundgroup_28() { return &___initialsoundgroup_28; }
	inline void set_initialsoundgroup_28(intptr_t value)
	{
		___initialsoundgroup_28 = value;
	}

	inline static int32_t get_offset_of_initialseekposition_29() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___initialseekposition_29)); }
	inline uint32_t get_initialseekposition_29() const { return ___initialseekposition_29; }
	inline uint32_t* get_address_of_initialseekposition_29() { return &___initialseekposition_29; }
	inline void set_initialseekposition_29(uint32_t value)
	{
		___initialseekposition_29 = value;
	}

	inline static int32_t get_offset_of_initialseekpostype_30() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___initialseekpostype_30)); }
	inline uint32_t get_initialseekpostype_30() const { return ___initialseekpostype_30; }
	inline uint32_t* get_address_of_initialseekpostype_30() { return &___initialseekpostype_30; }
	inline void set_initialseekpostype_30(uint32_t value)
	{
		___initialseekpostype_30 = value;
	}

	inline static int32_t get_offset_of_ignoresetfilesystem_31() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___ignoresetfilesystem_31)); }
	inline int32_t get_ignoresetfilesystem_31() const { return ___ignoresetfilesystem_31; }
	inline int32_t* get_address_of_ignoresetfilesystem_31() { return &___ignoresetfilesystem_31; }
	inline void set_ignoresetfilesystem_31(int32_t value)
	{
		___ignoresetfilesystem_31 = value;
	}

	inline static int32_t get_offset_of_audioqueuepolicy_32() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___audioqueuepolicy_32)); }
	inline uint32_t get_audioqueuepolicy_32() const { return ___audioqueuepolicy_32; }
	inline uint32_t* get_address_of_audioqueuepolicy_32() { return &___audioqueuepolicy_32; }
	inline void set_audioqueuepolicy_32(uint32_t value)
	{
		___audioqueuepolicy_32 = value;
	}

	inline static int32_t get_offset_of_minmidigranularity_33() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___minmidigranularity_33)); }
	inline uint32_t get_minmidigranularity_33() const { return ___minmidigranularity_33; }
	inline uint32_t* get_address_of_minmidigranularity_33() { return &___minmidigranularity_33; }
	inline void set_minmidigranularity_33(uint32_t value)
	{
		___minmidigranularity_33 = value;
	}

	inline static int32_t get_offset_of_nonblockthreadid_34() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___nonblockthreadid_34)); }
	inline int32_t get_nonblockthreadid_34() const { return ___nonblockthreadid_34; }
	inline int32_t* get_address_of_nonblockthreadid_34() { return &___nonblockthreadid_34; }
	inline void set_nonblockthreadid_34(int32_t value)
	{
		___nonblockthreadid_34 = value;
	}

	inline static int32_t get_offset_of_fsbguid_35() { return static_cast<int32_t>(offsetof(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225, ___fsbguid_35)); }
	inline intptr_t get_fsbguid_35() const { return ___fsbguid_35; }
	inline intptr_t* get_address_of_fsbguid_35() { return &___fsbguid_35; }
	inline void set_fsbguid_35(intptr_t value)
	{
		___fsbguid_35 = value;
	}
};

// Native definition for P/Invoke marshalling of FMOD.CREATESOUNDEXINFO
struct CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225_marshaled_pinvoke
{
	int32_t ___cbsize_0;
	uint32_t ___length_1;
	uint32_t ___fileoffset_2;
	int32_t ___numchannels_3;
	int32_t ___defaultfrequency_4;
	int32_t ___format_5;
	uint32_t ___decodebuffersize_6;
	int32_t ___initialsubsound_7;
	int32_t ___numsubsounds_8;
	intptr_t ___inclusionlist_9;
	int32_t ___inclusionlistnum_10;
	Il2CppMethodPointer ___pcmreadcallback_11;
	Il2CppMethodPointer ___pcmsetposcallback_12;
	Il2CppMethodPointer ___nonblockcallback_13;
	intptr_t ___dlsname_14;
	intptr_t ___encryptionkey_15;
	int32_t ___maxpolyphony_16;
	intptr_t ___userdata_17;
	int32_t ___suggestedsoundtype_18;
	Il2CppMethodPointer ___fileuseropen_19;
	Il2CppMethodPointer ___fileuserclose_20;
	Il2CppMethodPointer ___fileuserread_21;
	Il2CppMethodPointer ___fileuserseek_22;
	Il2CppMethodPointer ___fileuserasyncread_23;
	Il2CppMethodPointer ___fileuserasynccancel_24;
	intptr_t ___fileuserdata_25;
	int32_t ___filebuffersize_26;
	int32_t ___channelorder_27;
	intptr_t ___initialsoundgroup_28;
	uint32_t ___initialseekposition_29;
	uint32_t ___initialseekpostype_30;
	int32_t ___ignoresetfilesystem_31;
	uint32_t ___audioqueuepolicy_32;
	uint32_t ___minmidigranularity_33;
	int32_t ___nonblockthreadid_34;
	intptr_t ___fsbguid_35;
};
// Native definition for COM marshalling of FMOD.CREATESOUNDEXINFO
struct CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225_marshaled_com
{
	int32_t ___cbsize_0;
	uint32_t ___length_1;
	uint32_t ___fileoffset_2;
	int32_t ___numchannels_3;
	int32_t ___defaultfrequency_4;
	int32_t ___format_5;
	uint32_t ___decodebuffersize_6;
	int32_t ___initialsubsound_7;
	int32_t ___numsubsounds_8;
	intptr_t ___inclusionlist_9;
	int32_t ___inclusionlistnum_10;
	Il2CppMethodPointer ___pcmreadcallback_11;
	Il2CppMethodPointer ___pcmsetposcallback_12;
	Il2CppMethodPointer ___nonblockcallback_13;
	intptr_t ___dlsname_14;
	intptr_t ___encryptionkey_15;
	int32_t ___maxpolyphony_16;
	intptr_t ___userdata_17;
	int32_t ___suggestedsoundtype_18;
	Il2CppMethodPointer ___fileuseropen_19;
	Il2CppMethodPointer ___fileuserclose_20;
	Il2CppMethodPointer ___fileuserread_21;
	Il2CppMethodPointer ___fileuserseek_22;
	Il2CppMethodPointer ___fileuserasyncread_23;
	Il2CppMethodPointer ___fileuserasynccancel_24;
	intptr_t ___fileuserdata_25;
	int32_t ___filebuffersize_26;
	int32_t ___channelorder_27;
	intptr_t ___initialsoundgroup_28;
	uint32_t ___initialseekposition_29;
	uint32_t ___initialseekpostype_30;
	int32_t ___ignoresetfilesystem_31;
	uint32_t ___audioqueuepolicy_32;
	uint32_t ___minmidigranularity_33;
	int32_t ___nonblockthreadid_34;
	intptr_t ___fsbguid_35;
};

// FMOD.DSP_BUFFER_ARRAY
struct  DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291 
{
public:
	// System.Int32 FMOD.DSP_BUFFER_ARRAY::numbuffers
	int32_t ___numbuffers_0;
	// System.Int32[] FMOD.DSP_BUFFER_ARRAY::buffernumchannels
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___buffernumchannels_1;
	// FMOD.CHANNELMASK[] FMOD.DSP_BUFFER_ARRAY::bufferchannelmask
	CHANNELMASKU5BU5D_tD17766B4270FA0C460B27576B618990903A56A5B* ___bufferchannelmask_2;
	// System.IntPtr[] FMOD.DSP_BUFFER_ARRAY::buffers
	IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* ___buffers_3;
	// FMOD.SPEAKERMODE FMOD.DSP_BUFFER_ARRAY::speakermode
	int32_t ___speakermode_4;

public:
	inline static int32_t get_offset_of_numbuffers_0() { return static_cast<int32_t>(offsetof(DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291, ___numbuffers_0)); }
	inline int32_t get_numbuffers_0() const { return ___numbuffers_0; }
	inline int32_t* get_address_of_numbuffers_0() { return &___numbuffers_0; }
	inline void set_numbuffers_0(int32_t value)
	{
		___numbuffers_0 = value;
	}

	inline static int32_t get_offset_of_buffernumchannels_1() { return static_cast<int32_t>(offsetof(DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291, ___buffernumchannels_1)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_buffernumchannels_1() const { return ___buffernumchannels_1; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_buffernumchannels_1() { return &___buffernumchannels_1; }
	inline void set_buffernumchannels_1(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___buffernumchannels_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___buffernumchannels_1), (void*)value);
	}

	inline static int32_t get_offset_of_bufferchannelmask_2() { return static_cast<int32_t>(offsetof(DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291, ___bufferchannelmask_2)); }
	inline CHANNELMASKU5BU5D_tD17766B4270FA0C460B27576B618990903A56A5B* get_bufferchannelmask_2() const { return ___bufferchannelmask_2; }
	inline CHANNELMASKU5BU5D_tD17766B4270FA0C460B27576B618990903A56A5B** get_address_of_bufferchannelmask_2() { return &___bufferchannelmask_2; }
	inline void set_bufferchannelmask_2(CHANNELMASKU5BU5D_tD17766B4270FA0C460B27576B618990903A56A5B* value)
	{
		___bufferchannelmask_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___bufferchannelmask_2), (void*)value);
	}

	inline static int32_t get_offset_of_buffers_3() { return static_cast<int32_t>(offsetof(DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291, ___buffers_3)); }
	inline IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* get_buffers_3() const { return ___buffers_3; }
	inline IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD** get_address_of_buffers_3() { return &___buffers_3; }
	inline void set_buffers_3(IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* value)
	{
		___buffers_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___buffers_3), (void*)value);
	}

	inline static int32_t get_offset_of_speakermode_4() { return static_cast<int32_t>(offsetof(DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291, ___speakermode_4)); }
	inline int32_t get_speakermode_4() const { return ___speakermode_4; }
	inline int32_t* get_address_of_speakermode_4() { return &___speakermode_4; }
	inline void set_speakermode_4(int32_t value)
	{
		___speakermode_4 = value;
	}
};

// Native definition for P/Invoke marshalling of FMOD.DSP_BUFFER_ARRAY
struct DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshaled_pinvoke
{
	int32_t ___numbuffers_0;
	Il2CppSafeArray/*NONE*/* ___buffernumchannels_1;
	uint32_t* ___bufferchannelmask_2;
	Il2CppSafeArray/*NONE*/* ___buffers_3;
	int32_t ___speakermode_4;
};
// Native definition for COM marshalling of FMOD.DSP_BUFFER_ARRAY
struct DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshaled_com
{
	int32_t ___numbuffers_0;
	Il2CppSafeArray/*NONE*/* ___buffernumchannels_1;
	uint32_t* ___bufferchannelmask_2;
	Il2CppSafeArray/*NONE*/* ___buffers_3;
	int32_t ___speakermode_4;
};

// FMOD.DSP_PARAMETER_3DATTRIBUTES
struct  DSP_PARAMETER_3DATTRIBUTES_t4C66B146BAF62AAF6A907AF5D8FFE1D1F90DDD90 
{
public:
	// FMOD.ATTRIBUTES_3D FMOD.DSP_PARAMETER_3DATTRIBUTES::relative
	ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604  ___relative_0;
	// FMOD.ATTRIBUTES_3D FMOD.DSP_PARAMETER_3DATTRIBUTES::absolute
	ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604  ___absolute_1;

public:
	inline static int32_t get_offset_of_relative_0() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_3DATTRIBUTES_t4C66B146BAF62AAF6A907AF5D8FFE1D1F90DDD90, ___relative_0)); }
	inline ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604  get_relative_0() const { return ___relative_0; }
	inline ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604 * get_address_of_relative_0() { return &___relative_0; }
	inline void set_relative_0(ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604  value)
	{
		___relative_0 = value;
	}

	inline static int32_t get_offset_of_absolute_1() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_3DATTRIBUTES_t4C66B146BAF62AAF6A907AF5D8FFE1D1F90DDD90, ___absolute_1)); }
	inline ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604  get_absolute_1() const { return ___absolute_1; }
	inline ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604 * get_address_of_absolute_1() { return &___absolute_1; }
	inline void set_absolute_1(ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604  value)
	{
		___absolute_1 = value;
	}
};


// FMOD.DSP_PARAMETER_3DATTRIBUTES_MULTI
struct  DSP_PARAMETER_3DATTRIBUTES_MULTI_t2A4823DEE96E94AAFA950F4ADEB624339AF83EC9 
{
public:
	// System.Int32 FMOD.DSP_PARAMETER_3DATTRIBUTES_MULTI::numlisteners
	int32_t ___numlisteners_0;
	// FMOD.ATTRIBUTES_3D[] FMOD.DSP_PARAMETER_3DATTRIBUTES_MULTI::relative
	ATTRIBUTES_3DU5BU5D_t5427259BEC6244F4081124FF88F25A12CBF725EF* ___relative_1;
	// System.Single[] FMOD.DSP_PARAMETER_3DATTRIBUTES_MULTI::weight
	SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___weight_2;
	// FMOD.ATTRIBUTES_3D FMOD.DSP_PARAMETER_3DATTRIBUTES_MULTI::absolute
	ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604  ___absolute_3;

public:
	inline static int32_t get_offset_of_numlisteners_0() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_3DATTRIBUTES_MULTI_t2A4823DEE96E94AAFA950F4ADEB624339AF83EC9, ___numlisteners_0)); }
	inline int32_t get_numlisteners_0() const { return ___numlisteners_0; }
	inline int32_t* get_address_of_numlisteners_0() { return &___numlisteners_0; }
	inline void set_numlisteners_0(int32_t value)
	{
		___numlisteners_0 = value;
	}

	inline static int32_t get_offset_of_relative_1() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_3DATTRIBUTES_MULTI_t2A4823DEE96E94AAFA950F4ADEB624339AF83EC9, ___relative_1)); }
	inline ATTRIBUTES_3DU5BU5D_t5427259BEC6244F4081124FF88F25A12CBF725EF* get_relative_1() const { return ___relative_1; }
	inline ATTRIBUTES_3DU5BU5D_t5427259BEC6244F4081124FF88F25A12CBF725EF** get_address_of_relative_1() { return &___relative_1; }
	inline void set_relative_1(ATTRIBUTES_3DU5BU5D_t5427259BEC6244F4081124FF88F25A12CBF725EF* value)
	{
		___relative_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___relative_1), (void*)value);
	}

	inline static int32_t get_offset_of_weight_2() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_3DATTRIBUTES_MULTI_t2A4823DEE96E94AAFA950F4ADEB624339AF83EC9, ___weight_2)); }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* get_weight_2() const { return ___weight_2; }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5** get_address_of_weight_2() { return &___weight_2; }
	inline void set_weight_2(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* value)
	{
		___weight_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___weight_2), (void*)value);
	}

	inline static int32_t get_offset_of_absolute_3() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_3DATTRIBUTES_MULTI_t2A4823DEE96E94AAFA950F4ADEB624339AF83EC9, ___absolute_3)); }
	inline ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604  get_absolute_3() const { return ___absolute_3; }
	inline ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604 * get_address_of_absolute_3() { return &___absolute_3; }
	inline void set_absolute_3(ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604  value)
	{
		___absolute_3 = value;
	}
};

// Native definition for P/Invoke marshalling of FMOD.DSP_PARAMETER_3DATTRIBUTES_MULTI
struct DSP_PARAMETER_3DATTRIBUTES_MULTI_t2A4823DEE96E94AAFA950F4ADEB624339AF83EC9_marshaled_pinvoke
{
	int32_t ___numlisteners_0;
	ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604  ___relative_1[8];
	float ___weight_2[8];
	ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604  ___absolute_3;
};
// Native definition for COM marshalling of FMOD.DSP_PARAMETER_3DATTRIBUTES_MULTI
struct DSP_PARAMETER_3DATTRIBUTES_MULTI_t2A4823DEE96E94AAFA950F4ADEB624339AF83EC9_marshaled_com
{
	int32_t ___numlisteners_0;
	ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604  ___relative_1[8];
	float ___weight_2[8];
	ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604  ___absolute_3;
};

// FMOD.DSP_PARAMETER_FLOAT_MAPPING
struct  DSP_PARAMETER_FLOAT_MAPPING_tB6A7ED3D3E814AD962AF99CCA814C441A48E4046 
{
public:
	// FMOD.DSP_PARAMETER_FLOAT_MAPPING_TYPE FMOD.DSP_PARAMETER_FLOAT_MAPPING::type
	int32_t ___type_0;
	// FMOD.DSP_PARAMETER_FLOAT_MAPPING_PIECEWISE_LINEAR FMOD.DSP_PARAMETER_FLOAT_MAPPING::piecewiselinearmapping
	DSP_PARAMETER_FLOAT_MAPPING_PIECEWISE_LINEAR_tFB7DF9B3BD2E5C252CAF326AD286E33169ACE7A4  ___piecewiselinearmapping_1;

public:
	inline static int32_t get_offset_of_type_0() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_FLOAT_MAPPING_tB6A7ED3D3E814AD962AF99CCA814C441A48E4046, ___type_0)); }
	inline int32_t get_type_0() const { return ___type_0; }
	inline int32_t* get_address_of_type_0() { return &___type_0; }
	inline void set_type_0(int32_t value)
	{
		___type_0 = value;
	}

	inline static int32_t get_offset_of_piecewiselinearmapping_1() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_FLOAT_MAPPING_tB6A7ED3D3E814AD962AF99CCA814C441A48E4046, ___piecewiselinearmapping_1)); }
	inline DSP_PARAMETER_FLOAT_MAPPING_PIECEWISE_LINEAR_tFB7DF9B3BD2E5C252CAF326AD286E33169ACE7A4  get_piecewiselinearmapping_1() const { return ___piecewiselinearmapping_1; }
	inline DSP_PARAMETER_FLOAT_MAPPING_PIECEWISE_LINEAR_tFB7DF9B3BD2E5C252CAF326AD286E33169ACE7A4 * get_address_of_piecewiselinearmapping_1() { return &___piecewiselinearmapping_1; }
	inline void set_piecewiselinearmapping_1(DSP_PARAMETER_FLOAT_MAPPING_PIECEWISE_LINEAR_tFB7DF9B3BD2E5C252CAF326AD286E33169ACE7A4  value)
	{
		___piecewiselinearmapping_1 = value;
	}
};


// FMOD.ERRORCALLBACK_INFO
struct  ERRORCALLBACK_INFO_tE00982906D75D4905A42AC7EA6B5035DBE921FBC 
{
public:
	// FMOD.RESULT FMOD.ERRORCALLBACK_INFO::result
	int32_t ___result_0;
	// FMOD.ERRORCALLBACK_INSTANCETYPE FMOD.ERRORCALLBACK_INFO::instancetype
	int32_t ___instancetype_1;
	// System.IntPtr FMOD.ERRORCALLBACK_INFO::instance
	intptr_t ___instance_2;
	// FMOD.StringWrapper FMOD.ERRORCALLBACK_INFO::functionname
	StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  ___functionname_3;
	// FMOD.StringWrapper FMOD.ERRORCALLBACK_INFO::functionparams
	StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  ___functionparams_4;

public:
	inline static int32_t get_offset_of_result_0() { return static_cast<int32_t>(offsetof(ERRORCALLBACK_INFO_tE00982906D75D4905A42AC7EA6B5035DBE921FBC, ___result_0)); }
	inline int32_t get_result_0() const { return ___result_0; }
	inline int32_t* get_address_of_result_0() { return &___result_0; }
	inline void set_result_0(int32_t value)
	{
		___result_0 = value;
	}

	inline static int32_t get_offset_of_instancetype_1() { return static_cast<int32_t>(offsetof(ERRORCALLBACK_INFO_tE00982906D75D4905A42AC7EA6B5035DBE921FBC, ___instancetype_1)); }
	inline int32_t get_instancetype_1() const { return ___instancetype_1; }
	inline int32_t* get_address_of_instancetype_1() { return &___instancetype_1; }
	inline void set_instancetype_1(int32_t value)
	{
		___instancetype_1 = value;
	}

	inline static int32_t get_offset_of_instance_2() { return static_cast<int32_t>(offsetof(ERRORCALLBACK_INFO_tE00982906D75D4905A42AC7EA6B5035DBE921FBC, ___instance_2)); }
	inline intptr_t get_instance_2() const { return ___instance_2; }
	inline intptr_t* get_address_of_instance_2() { return &___instance_2; }
	inline void set_instance_2(intptr_t value)
	{
		___instance_2 = value;
	}

	inline static int32_t get_offset_of_functionname_3() { return static_cast<int32_t>(offsetof(ERRORCALLBACK_INFO_tE00982906D75D4905A42AC7EA6B5035DBE921FBC, ___functionname_3)); }
	inline StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  get_functionname_3() const { return ___functionname_3; }
	inline StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 * get_address_of_functionname_3() { return &___functionname_3; }
	inline void set_functionname_3(StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  value)
	{
		___functionname_3 = value;
	}

	inline static int32_t get_offset_of_functionparams_4() { return static_cast<int32_t>(offsetof(ERRORCALLBACK_INFO_tE00982906D75D4905A42AC7EA6B5035DBE921FBC, ___functionparams_4)); }
	inline StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  get_functionparams_4() const { return ___functionparams_4; }
	inline StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 * get_address_of_functionparams_4() { return &___functionparams_4; }
	inline void set_functionparams_4(StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  value)
	{
		___functionparams_4 = value;
	}
};


// System.MulticastDelegate
struct  MulticastDelegate_t  : public Delegate_t
{
public:
	// System.Delegate[] System.MulticastDelegate::delegates
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* ___delegates_11;

public:
	inline static int32_t get_offset_of_delegates_11() { return static_cast<int32_t>(offsetof(MulticastDelegate_t, ___delegates_11)); }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* get_delegates_11() const { return ___delegates_11; }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86** get_address_of_delegates_11() { return &___delegates_11; }
	inline void set_delegates_11(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* value)
	{
		___delegates_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___delegates_11), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_pinvoke : public Delegate_t_marshaled_pinvoke
{
	Delegate_t_marshaled_pinvoke** ___delegates_11;
};
// Native definition for COM marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_com : public Delegate_t_marshaled_com
{
	Delegate_t_marshaled_com** ___delegates_11;
};

// FMOD.CB_3D_ROLLOFF_CALLBACK
struct  CB_3D_ROLLOFF_CALLBACK_t2CC01B82803744FC8D8A78F9670439F441EE82DD  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.CHANNELCONTROL_CALLBACK
struct  CHANNELCONTROL_CALLBACK_t95D7949ECD13791F21B2CC1501D3F741AB1C9CF5  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DEBUG_CALLBACK
struct  DEBUG_CALLBACK_t6A7351E61776A499C1A1BE9A923E71A21416E783  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_ALLOC_FUNC
struct  DSP_ALLOC_FUNC_t8CD6D271F70AFD7BFE9A856DAD1D444E72AA422D  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_CREATECALLBACK
struct  DSP_CREATECALLBACK_t6510E2AEECAAD7C3DCCE0E608DF42AF53BB2AFB4  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_DFT_FFTREAL_FUNC
struct  DSP_DFT_FFTREAL_FUNC_t73B4E8FC3D8FA9D701BC82CD1EBD979E3873D3E5  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_DFT_IFFTREAL_FUNC
struct  DSP_DFT_IFFTREAL_FUNC_t536096AAC4FEBBF600001E6FAE00307F932D2494  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_FREE_FUNC
struct  DSP_FREE_FUNC_t0C9E6DE1DF61298098E07E792A9A1BF26AA681C2  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_GETBLOCKSIZE_FUNC
struct  DSP_GETBLOCKSIZE_FUNC_t9B624C10ADE32AAC618ACF14395A8A59BDDFDD50  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_GETCLOCK_FUNC
struct  DSP_GETCLOCK_FUNC_t0449CC42281AF16DB70CB8E93459A7B5D5C62A75  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_GETLISTENERATTRIBUTES_FUNC
struct  DSP_GETLISTENERATTRIBUTES_FUNC_t69622B724F9617BD5217ACCF1EB398B9F6060D7B  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_GETPARAM_BOOL_CALLBACK
struct  DSP_GETPARAM_BOOL_CALLBACK_tAD8EBD00416D502B580D2869800D43E2C3E52069  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_GETPARAM_DATA_CALLBACK
struct  DSP_GETPARAM_DATA_CALLBACK_t2E82033F2FF7DC3D377C9B9B60A1F453A286D372  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_GETPARAM_FLOAT_CALLBACK
struct  DSP_GETPARAM_FLOAT_CALLBACK_t8401A9811354731A09C32E110B876C472C71A0A9  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_GETPARAM_INT_CALLBACK
struct  DSP_GETPARAM_INT_CALLBACK_t7AAF6AFAFD8D24554AA1490F81B3C4B370DF8EA6  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_GETSAMPLERATE_FUNC
struct  DSP_GETSAMPLERATE_FUNC_t25AB56A22F09DA2A058DC879C9916BB13E9C2E02  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_GETSPEAKERMODE_FUNC
struct  DSP_GETSPEAKERMODE_FUNC_t8047C7AB197EF964C7E2299C1EF3B5A00F345B79  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_GETUSERDATA_FUNC
struct  DSP_GETUSERDATA_FUNC_tF11A456B243BF11A5E4283EBBDA9220E904177A8  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_LOG_FUNC
struct  DSP_LOG_FUNC_t85E329EB1F7C54E80A66F8FBA3DB2C2C58E72493  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_PAN_GETROLLOFFGAIN_FUNC
struct  DSP_PAN_GETROLLOFFGAIN_FUNC_tB6AB67EB1F301E9C6AFD60A29B8314A585D3A05C  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_PAN_SUMMONOMATRIX_FUNC
struct  DSP_PAN_SUMMONOMATRIX_FUNC_t4FEAF41A824EF70D7AE3CC079690C889B3F3584E  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC
struct  DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC_tA7FBF2E8C0EA206F652B515515C002B789849C7B  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_PAN_SUMSTEREOMATRIX_FUNC
struct  DSP_PAN_SUMSTEREOMATRIX_FUNC_tBDAFBEB725DE435CC966204D9A134DF3D5BB8092  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC
struct  DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC_tD083096D805C0022D80A8CEE8DE038D2588A63F3  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_PAN_SUMSURROUNDMATRIX_FUNC
struct  DSP_PAN_SUMSURROUNDMATRIX_FUNC_t57199FB9B779135FCFB32AFE2B8ADE90F5065619  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_PARAMETER_DESC_FLOAT
struct  DSP_PARAMETER_DESC_FLOAT_t4AA0EBE0D190B95B21DEAB6D105A0B6A74BEB747 
{
public:
	// System.Single FMOD.DSP_PARAMETER_DESC_FLOAT::min
	float ___min_0;
	// System.Single FMOD.DSP_PARAMETER_DESC_FLOAT::max
	float ___max_1;
	// System.Single FMOD.DSP_PARAMETER_DESC_FLOAT::defaultval
	float ___defaultval_2;
	// FMOD.DSP_PARAMETER_FLOAT_MAPPING FMOD.DSP_PARAMETER_DESC_FLOAT::mapping
	DSP_PARAMETER_FLOAT_MAPPING_tB6A7ED3D3E814AD962AF99CCA814C441A48E4046  ___mapping_3;

public:
	inline static int32_t get_offset_of_min_0() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_DESC_FLOAT_t4AA0EBE0D190B95B21DEAB6D105A0B6A74BEB747, ___min_0)); }
	inline float get_min_0() const { return ___min_0; }
	inline float* get_address_of_min_0() { return &___min_0; }
	inline void set_min_0(float value)
	{
		___min_0 = value;
	}

	inline static int32_t get_offset_of_max_1() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_DESC_FLOAT_t4AA0EBE0D190B95B21DEAB6D105A0B6A74BEB747, ___max_1)); }
	inline float get_max_1() const { return ___max_1; }
	inline float* get_address_of_max_1() { return &___max_1; }
	inline void set_max_1(float value)
	{
		___max_1 = value;
	}

	inline static int32_t get_offset_of_defaultval_2() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_DESC_FLOAT_t4AA0EBE0D190B95B21DEAB6D105A0B6A74BEB747, ___defaultval_2)); }
	inline float get_defaultval_2() const { return ___defaultval_2; }
	inline float* get_address_of_defaultval_2() { return &___defaultval_2; }
	inline void set_defaultval_2(float value)
	{
		___defaultval_2 = value;
	}

	inline static int32_t get_offset_of_mapping_3() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_DESC_FLOAT_t4AA0EBE0D190B95B21DEAB6D105A0B6A74BEB747, ___mapping_3)); }
	inline DSP_PARAMETER_FLOAT_MAPPING_tB6A7ED3D3E814AD962AF99CCA814C441A48E4046  get_mapping_3() const { return ___mapping_3; }
	inline DSP_PARAMETER_FLOAT_MAPPING_tB6A7ED3D3E814AD962AF99CCA814C441A48E4046 * get_address_of_mapping_3() { return &___mapping_3; }
	inline void set_mapping_3(DSP_PARAMETER_FLOAT_MAPPING_tB6A7ED3D3E814AD962AF99CCA814C441A48E4046  value)
	{
		___mapping_3 = value;
	}
};


// FMOD.DSP_PROCESS_CALLBACK
struct  DSP_PROCESS_CALLBACK_tDBD865DB753B70FC9D7366E33380253692DC88CB  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_READCALLBACK
struct  DSP_READCALLBACK_tA3F0E8A151B3385E3BFDB117670F3572746ECE6B  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_REALLOC_FUNC
struct  DSP_REALLOC_FUNC_t1F4302C05A784F080C70909A2A758DFBAFC3F4E0  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_RELEASECALLBACK
struct  DSP_RELEASECALLBACK_t92C9D067D3CF7847DB0F73813A5833B6E4D0C6EE  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_RESETCALLBACK
struct  DSP_RESETCALLBACK_t8EA9624AAC1D240E70DB5855727C840681FB659C  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_SETPARAM_BOOL_CALLBACK
struct  DSP_SETPARAM_BOOL_CALLBACK_tACA9458F120A18B395CB1EE2F9A3C8ACEC2C2349  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_SETPARAM_DATA_CALLBACK
struct  DSP_SETPARAM_DATA_CALLBACK_tDB9125291A634749692E0D00301A136B5C3D34DE  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_SETPARAM_FLOAT_CALLBACK
struct  DSP_SETPARAM_FLOAT_CALLBACK_t7EFE910C4496F3D95D1E3487B97D08AD011006C8  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_SETPARAM_INT_CALLBACK
struct  DSP_SETPARAM_INT_CALLBACK_t10AE9EEDA039984760035B14CD3E84A401F749E3  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_SETPOSITIONCALLBACK
struct  DSP_SETPOSITIONCALLBACK_t9A480C4F691C838E0267D2D8515075AC431CB2B7  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_SHOULDIPROCESS_CALLBACK
struct  DSP_SHOULDIPROCESS_CALLBACK_t5545B686955F4562B7A1F21C22438EC50D6CFF28  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_SYSTEM_DEREGISTER_CALLBACK
struct  DSP_SYSTEM_DEREGISTER_CALLBACK_tB1D240F0C4635096EEDB65641DC430EB03DD0699  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_SYSTEM_MIX_CALLBACK
struct  DSP_SYSTEM_MIX_CALLBACK_t38470781C5A19912A1FFF609AEFB9FC7695C3836  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_SYSTEM_REGISTER_CALLBACK
struct  DSP_SYSTEM_REGISTER_CALLBACK_t9D6891252B2A9A8667CF1BE598C9BBC50450CCFA  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.FILE_ASYNCCANCEL_CALLBACK
struct  FILE_ASYNCCANCEL_CALLBACK_t6FB6AA5C72C18AE5B41EDCA973157115A2EAEF3D  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.FILE_ASYNCDONE_FUNC
struct  FILE_ASYNCDONE_FUNC_tFBC4B11B35F53B2638037291E5304EA64DA389BC  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.FILE_ASYNCREAD_CALLBACK
struct  FILE_ASYNCREAD_CALLBACK_tC94093AEE8D56351A512BB4239C46642E969F9D3  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.FILE_CLOSE_CALLBACK
struct  FILE_CLOSE_CALLBACK_tA347FC35A3EDE3EA674838B9302CA7847B2D0A59  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.FILE_OPEN_CALLBACK
struct  FILE_OPEN_CALLBACK_t7A7741CFAFE85C3A76DBEE69DF461E6D96AEF17C  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.FILE_READ_CALLBACK
struct  FILE_READ_CALLBACK_t98BD5E40D0AC284218606A892F750513E9403C1C  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.FILE_SEEK_CALLBACK
struct  FILE_SEEK_CALLBACK_tCA1713616668F850F4F7CB185CFE66D7728365A1  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.SOUND_NONBLOCK_CALLBACK
struct  SOUND_NONBLOCK_CALLBACK_tFDA9F7F30FE6A3D367ACB86746046DD480BC45CE  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.SOUND_PCMREAD_CALLBACK
struct  SOUND_PCMREAD_CALLBACK_t73F82A176E129053584188355C74C98D216AF44B  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.SOUND_PCMSETPOS_CALLBACK
struct  SOUND_PCMSETPOS_CALLBACK_t2CA9012A6D4A7E750DC9C96F698AD9F4FA1175DD  : public MulticastDelegate_t
{
public:

public:
};


// System.AsyncCallback
struct  AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4  : public MulticastDelegate_t
{
public:

public:
};


// FMOD.DSP_PARAMETER_DESC_UNION
struct  DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D 
{
public:
	union
	{
		#pragma pack(push, tp, 1)
		struct
		{
			// FMOD.DSP_PARAMETER_DESC_FLOAT FMOD.DSP_PARAMETER_DESC_UNION::floatdesc
			DSP_PARAMETER_DESC_FLOAT_t4AA0EBE0D190B95B21DEAB6D105A0B6A74BEB747  ___floatdesc_0;
		};
		#pragma pack(pop, tp)
		struct
		{
			DSP_PARAMETER_DESC_FLOAT_t4AA0EBE0D190B95B21DEAB6D105A0B6A74BEB747  ___floatdesc_0_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// FMOD.DSP_PARAMETER_DESC_INT FMOD.DSP_PARAMETER_DESC_UNION::intdesc
			DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA  ___intdesc_1;
		};
		#pragma pack(pop, tp)
		struct
		{
			DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA  ___intdesc_1_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// FMOD.DSP_PARAMETER_DESC_BOOL FMOD.DSP_PARAMETER_DESC_UNION::booldesc
			DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD  ___booldesc_2;
		};
		#pragma pack(pop, tp)
		struct
		{
			DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD  ___booldesc_2_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// FMOD.DSP_PARAMETER_DESC_DATA FMOD.DSP_PARAMETER_DESC_UNION::datadesc
			DSP_PARAMETER_DESC_DATA_t89D149EB4BE38580C0EAE075A7496296F0BC4DA9  ___datadesc_3;
		};
		#pragma pack(pop, tp)
		struct
		{
			DSP_PARAMETER_DESC_DATA_t89D149EB4BE38580C0EAE075A7496296F0BC4DA9  ___datadesc_3_forAlignmentOnly;
		};
	};

public:
	inline static int32_t get_offset_of_floatdesc_0() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D, ___floatdesc_0)); }
	inline DSP_PARAMETER_DESC_FLOAT_t4AA0EBE0D190B95B21DEAB6D105A0B6A74BEB747  get_floatdesc_0() const { return ___floatdesc_0; }
	inline DSP_PARAMETER_DESC_FLOAT_t4AA0EBE0D190B95B21DEAB6D105A0B6A74BEB747 * get_address_of_floatdesc_0() { return &___floatdesc_0; }
	inline void set_floatdesc_0(DSP_PARAMETER_DESC_FLOAT_t4AA0EBE0D190B95B21DEAB6D105A0B6A74BEB747  value)
	{
		___floatdesc_0 = value;
	}

	inline static int32_t get_offset_of_intdesc_1() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D, ___intdesc_1)); }
	inline DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA  get_intdesc_1() const { return ___intdesc_1; }
	inline DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA * get_address_of_intdesc_1() { return &___intdesc_1; }
	inline void set_intdesc_1(DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA  value)
	{
		___intdesc_1 = value;
	}

	inline static int32_t get_offset_of_booldesc_2() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D, ___booldesc_2)); }
	inline DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD  get_booldesc_2() const { return ___booldesc_2; }
	inline DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD * get_address_of_booldesc_2() { return &___booldesc_2; }
	inline void set_booldesc_2(DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD  value)
	{
		___booldesc_2 = value;
	}

	inline static int32_t get_offset_of_datadesc_3() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D, ___datadesc_3)); }
	inline DSP_PARAMETER_DESC_DATA_t89D149EB4BE38580C0EAE075A7496296F0BC4DA9  get_datadesc_3() const { return ___datadesc_3; }
	inline DSP_PARAMETER_DESC_DATA_t89D149EB4BE38580C0EAE075A7496296F0BC4DA9 * get_address_of_datadesc_3() { return &___datadesc_3; }
	inline void set_datadesc_3(DSP_PARAMETER_DESC_DATA_t89D149EB4BE38580C0EAE075A7496296F0BC4DA9  value)
	{
		___datadesc_3 = value;
	}
};

// Native definition for P/Invoke marshalling of FMOD.DSP_PARAMETER_DESC_UNION
struct DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshaled_pinvoke
{
	union
	{
		#pragma pack(push, tp, 1)
		struct
		{
			DSP_PARAMETER_DESC_FLOAT_t4AA0EBE0D190B95B21DEAB6D105A0B6A74BEB747  ___floatdesc_0;
		};
		#pragma pack(pop, tp)
		struct
		{
			DSP_PARAMETER_DESC_FLOAT_t4AA0EBE0D190B95B21DEAB6D105A0B6A74BEB747  ___floatdesc_0_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshaled_pinvoke ___intdesc_1;
		};
		#pragma pack(pop, tp)
		struct
		{
			DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshaled_pinvoke ___intdesc_1_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshaled_pinvoke ___booldesc_2;
		};
		#pragma pack(pop, tp)
		struct
		{
			DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshaled_pinvoke ___booldesc_2_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			DSP_PARAMETER_DESC_DATA_t89D149EB4BE38580C0EAE075A7496296F0BC4DA9  ___datadesc_3;
		};
		#pragma pack(pop, tp)
		struct
		{
			DSP_PARAMETER_DESC_DATA_t89D149EB4BE38580C0EAE075A7496296F0BC4DA9  ___datadesc_3_forAlignmentOnly;
		};
	};
};
// Native definition for COM marshalling of FMOD.DSP_PARAMETER_DESC_UNION
struct DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshaled_com
{
	union
	{
		#pragma pack(push, tp, 1)
		struct
		{
			DSP_PARAMETER_DESC_FLOAT_t4AA0EBE0D190B95B21DEAB6D105A0B6A74BEB747  ___floatdesc_0;
		};
		#pragma pack(pop, tp)
		struct
		{
			DSP_PARAMETER_DESC_FLOAT_t4AA0EBE0D190B95B21DEAB6D105A0B6A74BEB747  ___floatdesc_0_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshaled_com ___intdesc_1;
		};
		#pragma pack(pop, tp)
		struct
		{
			DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshaled_com ___intdesc_1_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshaled_com ___booldesc_2;
		};
		#pragma pack(pop, tp)
		struct
		{
			DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshaled_com ___booldesc_2_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			DSP_PARAMETER_DESC_DATA_t89D149EB4BE38580C0EAE075A7496296F0BC4DA9  ___datadesc_3;
		};
		#pragma pack(pop, tp)
		struct
		{
			DSP_PARAMETER_DESC_DATA_t89D149EB4BE38580C0EAE075A7496296F0BC4DA9  ___datadesc_3_forAlignmentOnly;
		};
	};
};

// FMOD.DSP_PARAMETER_DESC
struct  DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06 
{
public:
	// FMOD.DSP_PARAMETER_TYPE FMOD.DSP_PARAMETER_DESC::type
	int32_t ___type_0;
	// System.Byte[] FMOD.DSP_PARAMETER_DESC::name
	ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* ___name_1;
	// System.Byte[] FMOD.DSP_PARAMETER_DESC::label
	ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* ___label_2;
	// System.String FMOD.DSP_PARAMETER_DESC::description
	String_t* ___description_3;
	// FMOD.DSP_PARAMETER_DESC_UNION FMOD.DSP_PARAMETER_DESC::desc
	DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D  ___desc_4;

public:
	inline static int32_t get_offset_of_type_0() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06, ___type_0)); }
	inline int32_t get_type_0() const { return ___type_0; }
	inline int32_t* get_address_of_type_0() { return &___type_0; }
	inline void set_type_0(int32_t value)
	{
		___type_0 = value;
	}

	inline static int32_t get_offset_of_name_1() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06, ___name_1)); }
	inline ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* get_name_1() const { return ___name_1; }
	inline ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821** get_address_of_name_1() { return &___name_1; }
	inline void set_name_1(ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* value)
	{
		___name_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___name_1), (void*)value);
	}

	inline static int32_t get_offset_of_label_2() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06, ___label_2)); }
	inline ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* get_label_2() const { return ___label_2; }
	inline ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821** get_address_of_label_2() { return &___label_2; }
	inline void set_label_2(ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* value)
	{
		___label_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___label_2), (void*)value);
	}

	inline static int32_t get_offset_of_description_3() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06, ___description_3)); }
	inline String_t* get_description_3() const { return ___description_3; }
	inline String_t** get_address_of_description_3() { return &___description_3; }
	inline void set_description_3(String_t* value)
	{
		___description_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___description_3), (void*)value);
	}

	inline static int32_t get_offset_of_desc_4() { return static_cast<int32_t>(offsetof(DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06, ___desc_4)); }
	inline DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D  get_desc_4() const { return ___desc_4; }
	inline DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D * get_address_of_desc_4() { return &___desc_4; }
	inline void set_desc_4(DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D  value)
	{
		___desc_4 = value;
	}
};

// Native definition for P/Invoke marshalling of FMOD.DSP_PARAMETER_DESC
struct DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06_marshaled_pinvoke
{
	int32_t ___type_0;
	uint8_t ___name_1[16];
	uint8_t ___label_2[16];
	char* ___description_3;
	DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshaled_pinvoke ___desc_4;
};
// Native definition for COM marshalling of FMOD.DSP_PARAMETER_DESC
struct DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06_marshaled_com
{
	int32_t ___type_0;
	uint8_t ___name_1[16];
	uint8_t ___label_2[16];
	Il2CppChar* ___description_3;
	DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshaled_com ___desc_4;
};
#ifdef __clang__
#pragma clang diagnostic pop
#endif
// System.Delegate[]
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Delegate_t * m_Items[1];

public:
	inline Delegate_t * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Delegate_t ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Delegate_t * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline Delegate_t * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Delegate_t ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Delegate_t * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// System.Single[]
struct SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) float m_Items[1];

public:
	inline float GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline float* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, float value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline float GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline float* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, float value)
	{
		m_Items[index] = value;
	}
};
// System.UInt64[]
struct UInt64U5BU5D_tA808FE881491284FF25AFDF5C4BC92A826031EF4  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) uint64_t m_Items[1];

public:
	inline uint64_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline uint64_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, uint64_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline uint64_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline uint64_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, uint64_t value)
	{
		m_Items[index] = value;
	}
};
// System.Byte[]
struct ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) uint8_t m_Items[1];

public:
	inline uint8_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline uint8_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, uint8_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline uint8_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline uint8_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, uint8_t value)
	{
		m_Items[index] = value;
	}
};
// System.Int32[]
struct Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) int32_t m_Items[1];

public:
	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
};
// FMOD.CHANNELMASK[]
struct CHANNELMASKU5BU5D_tD17766B4270FA0C460B27576B618990903A56A5B  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) uint32_t m_Items[1];

public:
	inline uint32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline uint32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, uint32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline uint32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline uint32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, uint32_t value)
	{
		m_Items[index] = value;
	}
};
// System.IntPtr[]
struct IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) intptr_t m_Items[1];

public:
	inline intptr_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline intptr_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, intptr_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline intptr_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline intptr_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, intptr_t value)
	{
		m_Items[index] = value;
	}
};
// FMOD.ATTRIBUTES_3D[]
struct ATTRIBUTES_3DU5BU5D_t5427259BEC6244F4081124FF88F25A12CBF725EF  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604  m_Items[1];

public:
	inline ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604  value)
	{
		m_Items[index] = value;
	}
};
// System.Single[][]
struct SingleU5BU5DU5BU5D_tC2E25498616DDBEA3B03D43855DEBC928046392E  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* m_Items[1];

public:
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};

IL2CPP_EXTERN_C void DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshal_pinvoke(const DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2& unmarshaled, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_pinvoke& marshaled);
IL2CPP_EXTERN_C void DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshal_pinvoke_back(const DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_pinvoke& marshaled, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2& unmarshaled);
IL2CPP_EXTERN_C void DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshal_pinvoke_cleanup(DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_pinvoke& marshaled);
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshal_pinvoke(const DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D& unmarshaled, DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshaled_pinvoke& marshaled);
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshal_pinvoke_back(const DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshaled_pinvoke& marshaled, DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D& unmarshaled);
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshal_pinvoke_cleanup(DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshaled_pinvoke& marshaled);
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshal_com(const DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D& unmarshaled, DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshaled_com& marshaled);
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshal_com_back(const DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshaled_com& marshaled, DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D& unmarshaled);
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshal_com_cleanup(DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshaled_com& marshaled);
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshal_pinvoke(const DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA& unmarshaled, DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshaled_pinvoke& marshaled);
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshal_pinvoke_back(const DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshaled_pinvoke& marshaled, DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA& unmarshaled);
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshal_pinvoke_cleanup(DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshaled_pinvoke& marshaled);
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshal_pinvoke(const DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD& unmarshaled, DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshaled_pinvoke& marshaled);
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshal_pinvoke_back(const DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshaled_pinvoke& marshaled, DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD& unmarshaled);
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshal_pinvoke_cleanup(DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshaled_pinvoke& marshaled);
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshal_com(const DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA& unmarshaled, DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshaled_com& marshaled);
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshal_com_back(const DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshaled_com& marshaled, DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA& unmarshaled);
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshal_com_cleanup(DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshaled_com& marshaled);
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshal_com(const DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD& unmarshaled, DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshaled_com& marshaled);
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshal_com_back(const DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshaled_com& marshaled, DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD& unmarshaled);
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshal_com_cleanup(DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshaled_com& marshaled);
IL2CPP_EXTERN_C void DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshal_pinvoke(const DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291& unmarshaled, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshaled_pinvoke& marshaled);
IL2CPP_EXTERN_C void DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshal_pinvoke_back(const DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshaled_pinvoke& marshaled, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291& unmarshaled);
IL2CPP_EXTERN_C void DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshal_pinvoke_cleanup(DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshaled_pinvoke& marshaled);

// System.IntPtr System.Runtime.InteropServices.Marshal::UnsafeAddrOfPinnedArrayElement<System.Byte>(!!0[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t Marshal_UnsafeAddrOfPinnedArrayElement_TisByte_tF87C579059BD4633E6840EBBBEEF899C6E33EF07_m0F1B760143B0C170B0274CA8B82FE6C3F74D7962_gshared (ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* ___arr0, int32_t ___index1, const RuntimeMethod* method);
// !!0 System.Runtime.InteropServices.Marshal::PtrToStructure<FMOD.DSP_PARAMETER_DESC>(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06  Marshal_PtrToStructure_TisDSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06_m999834B093023B040AB51001C89E09D979EE1378_gshared (intptr_t ___ptr0, const RuntimeMethod* method);

// System.Void System.Object::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0 (RuntimeObject * __this, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetFrequency(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetFrequency_mAEBAB3BEDE5C66915F84F0AC272C00C2BDC67EAE (intptr_t ___channel0, float ___frequency1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::setFrequency(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setFrequency_m49421B7232BC2851F412AE76DED466BD31D8785B (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float ___frequency0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetFrequency(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetFrequency_m35EDEE84872CC9F99C20A047D7FF728BC9CAE4A9 (intptr_t ___channel0, float* ___frequency1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::getFrequency(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getFrequency_mFF8117B650941A78706D0ADD44C42830ACD90E1D (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float* ___frequency0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetPriority(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetPriority_mEC7C9BADF2DECB310AA376363876F0FD5A01702A (intptr_t ___channel0, int32_t ___priority1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::setPriority(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setPriority_mD69F03908FAD99F595717E97BE4531949D4B185C (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, int32_t ___priority0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetPriority(System.IntPtr,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetPriority_mC38533697389A1D62D4F25DEE10A3B747FA8C980 (intptr_t ___channel0, int32_t* ___priority1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::getPriority(System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getPriority_m0DFA39D27FAA078426821600FCC292DCEE3B6D0A (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, int32_t* ___priority0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetPosition(System.IntPtr,System.UInt32,FMOD.TIMEUNIT)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetPosition_m6880C790DEA3BA75D42FEE5DD13B243F5C6BC3AD (intptr_t ___channel0, uint32_t ___position1, uint32_t ___postype2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::setPosition(System.UInt32,FMOD.TIMEUNIT)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setPosition_m731B79A462CE944FCC264B33862F0025266D022F (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, uint32_t ___position0, uint32_t ___postype1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetPosition(System.IntPtr,System.UInt32&,FMOD.TIMEUNIT)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetPosition_m7F2506851429CD1B101DD9E3326A3267FC706703 (intptr_t ___channel0, uint32_t* ___position1, uint32_t ___postype2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::getPosition(System.UInt32&,FMOD.TIMEUNIT)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getPosition_mC43555DA2ABEC30E52BB68A31E42ACB693F5F4D0 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, uint32_t* ___position0, uint32_t ___postype1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetChannelGroup(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetChannelGroup_m51F8AC42FB44AAF5664CB8AA930450A9B9B3F0EA (intptr_t ___channel0, intptr_t ___channelgroup1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::setChannelGroup(FMOD.ChannelGroup)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setChannelGroup_mFD09FE116E28ACBE1A560A1DBE58DE056A01EB4F (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069  ___channelgroup0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetChannelGroup(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetChannelGroup_mF76B70C997F59B6787773751C9BD0B151AE1152B (intptr_t ___channel0, intptr_t* ___channelgroup1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::getChannelGroup(FMOD.ChannelGroup&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getChannelGroup_mFFA7B435424F92B662128B44F9FB5FA054A0BEF1 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * ___channelgroup0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetLoopCount(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetLoopCount_m38CBD07F4D96F2C65D6923579F2F4CD05E1F4482 (intptr_t ___channel0, int32_t ___loopcount1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::setLoopCount(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setLoopCount_m9AC742107CF073E7E236AA38342B5DC766653813 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, int32_t ___loopcount0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetLoopCount(System.IntPtr,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetLoopCount_m47055F889B892224B3EF188C7E456B64FB79F6D9 (intptr_t ___channel0, int32_t* ___loopcount1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::getLoopCount(System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getLoopCount_m8330A2262A7C28847B7D878623BD906B2AF6287A (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, int32_t* ___loopcount0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetLoopPoints(System.IntPtr,System.UInt32,FMOD.TIMEUNIT,System.UInt32,FMOD.TIMEUNIT)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetLoopPoints_mD2BB5203D2567340FC16046A5D58BBF0DB363796 (intptr_t ___channel0, uint32_t ___loopstart1, uint32_t ___loopstarttype2, uint32_t ___loopend3, uint32_t ___loopendtype4, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::setLoopPoints(System.UInt32,FMOD.TIMEUNIT,System.UInt32,FMOD.TIMEUNIT)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setLoopPoints_m701E0C26E0659281F6970C4B91DA672A4C526118 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, uint32_t ___loopstart0, uint32_t ___loopstarttype1, uint32_t ___loopend2, uint32_t ___loopendtype3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetLoopPoints(System.IntPtr,System.UInt32&,FMOD.TIMEUNIT,System.UInt32&,FMOD.TIMEUNIT)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetLoopPoints_m1DFFC60A15B43F02610FCADC79D70BFBB7386B3C (intptr_t ___channel0, uint32_t* ___loopstart1, uint32_t ___loopstarttype2, uint32_t* ___loopend3, uint32_t ___loopendtype4, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::getLoopPoints(System.UInt32&,FMOD.TIMEUNIT,System.UInt32&,FMOD.TIMEUNIT)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getLoopPoints_m7766E218C5FD6B8A67F84AE584A3CB793AD5346B (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, uint32_t* ___loopstart0, uint32_t ___loopstarttype1, uint32_t* ___loopend2, uint32_t ___loopendtype3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_IsVirtual(System.IntPtr,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_IsVirtual_m8BD74685BBB5BC10F5C57852D94EBB39D320CEDE (intptr_t ___channel0, bool* ___isvirtual1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::isVirtual(System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_isVirtual_mBCF96E0D57E7A2DA6EA7003CC9C3AC7AC35AA833 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, bool* ___isvirtual0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetCurrentSound(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetCurrentSound_m0B512D6032919634EBA997316D1426DC1FB850B9 (intptr_t ___channel0, intptr_t* ___sound1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::getCurrentSound(FMOD.Sound&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getCurrentSound_mC45361DBFA8B128F58166E0813519C719170A3A0 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, Sound_t885E85646940F117BE88C2AF5A78E8E51374D688 * ___sound0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetIndex(System.IntPtr,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetIndex_m4A0B418C87062515D3A49550B117AD3400FF64BA (intptr_t ___channel0, int32_t* ___index1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::getIndex(System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getIndex_m195D37BA63B0C6485A67DA9A23CA59D70DA806F2 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, int32_t* ___index0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetSystemObject(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetSystemObject_m7EDCAA1D75EE2736939FFC3588B3536BEF823CB6 (intptr_t ___channel0, intptr_t* ___system1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::getSystemObject(FMOD.System&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getSystemObject_mF39E2562C4EE3E2C222869565169D0B5BC050945 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, System_t1E8F97CEB4B863C4A09A4EC514B0C27FBA8D08B7 * ___system0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Stop(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Stop_m6FDB906C3CFE0A206E855F0CDEF105593809A1F2 (intptr_t ___channel0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::stop()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_stop_m9F8FD0FB866FEC100C4A5A4B6AAC1569CDE83005 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetPaused(System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetPaused_mC70B6B6901C82248D8998CB3689552CEF6D100D3 (intptr_t ___channel0, bool ___paused1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::setPaused(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setPaused_m753283D089F205FCFBFBBE456B32DCEE887ADCF1 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, bool ___paused0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetPaused(System.IntPtr,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetPaused_mD0B2456F32EDC944F5BF1E43EB8389E9503602AF (intptr_t ___channel0, bool* ___paused1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::getPaused(System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getPaused_m7CFE28F5F63865DE9DFF37977E8B1B3E857FA018 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, bool* ___paused0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetVolume(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetVolume_mA06948C17473A9586B3605B97409E50959751B64 (intptr_t ___channel0, float ___volume1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::setVolume(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setVolume_m017C0789D87275B190EE253FE5AC3BB2FE66B127 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float ___volume0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetVolume(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetVolume_m0833288C653EA3DEF653E253582D8CC1306009E5 (intptr_t ___channel0, float* ___volume1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::getVolume(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getVolume_m155755E13B92D765A6A2E602CADC2E14859334E4 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float* ___volume0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetVolumeRamp(System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetVolumeRamp_m8C0EB34262FA99DC2A4D1ED97F71F6FF49917D11 (intptr_t ___channel0, bool ___ramp1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::setVolumeRamp(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setVolumeRamp_m652F74ACBE2EE6D0110CFC38DB11093D60643893 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, bool ___ramp0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetVolumeRamp(System.IntPtr,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetVolumeRamp_mDCF110828D76ED4AA46338EE00084339C5A87216 (intptr_t ___channel0, bool* ___ramp1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::getVolumeRamp(System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getVolumeRamp_m37DC322502C9AFB66E79C073FE949E7AA62211DC (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, bool* ___ramp0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetAudibility(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetAudibility_m2A80EA75F1544F1947A7DDCB054D1F88BF594C3A (intptr_t ___channel0, float* ___audibility1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::getAudibility(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getAudibility_m2A132187AFE78882F8DDD12C23A77AAD5E60FB28 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float* ___audibility0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetPitch(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetPitch_m549E1355687B9638C0736EC2D2046800086C8B68 (intptr_t ___channel0, float ___pitch1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::setPitch(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setPitch_m27C9E3DDC86C611B06C357A1E9C1BC323E994C24 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float ___pitch0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetPitch(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetPitch_mB83CA5B83254E3D1334E5343431BA30BE7C06E99 (intptr_t ___channel0, float* ___pitch1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::getPitch(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getPitch_m540A8B6A0DD8261EF97D9605B330F47FD33D2FFE (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float* ___pitch0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetMute(System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetMute_m75A3287E7D5CDA88FC8326E83360E4848576816D (intptr_t ___channel0, bool ___mute1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::setMute(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setMute_m267F03569CA7286074549A3E7507318DFD5F6F59 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, bool ___mute0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetMute(System.IntPtr,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetMute_m94680903460895FF29AED33D76AEC4B9F239C0B3 (intptr_t ___channel0, bool* ___mute1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::getMute(System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getMute_mE720F9DD4FA7C024E1FE80D823BD251555D6C73B (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, bool* ___mute0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetReverbProperties(System.IntPtr,System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetReverbProperties_m08A03DBABEDB4176537EA71A9E35D404CA66C3FB (intptr_t ___channel0, int32_t ___instance1, float ___wet2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::setReverbProperties(System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setReverbProperties_m889A0D98D8BAE356449FDFE9FBFBABA95282DFFE (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, int32_t ___instance0, float ___wet1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetReverbProperties(System.IntPtr,System.Int32,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetReverbProperties_mAC42354BD318ABC96D6B5DB5896C914516D0292C (intptr_t ___channel0, int32_t ___instance1, float* ___wet2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::getReverbProperties(System.Int32,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getReverbProperties_m679D5BE878628A39DEF0090047A8994A5772857C (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, int32_t ___instance0, float* ___wet1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetLowPassGain(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetLowPassGain_mEA080D59BBAE780C648C949DD378946927F3C72B (intptr_t ___channel0, float ___gain1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::setLowPassGain(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setLowPassGain_m3E56A35C46F4E956407F9F4F766A4FF01A2BF516 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float ___gain0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetLowPassGain(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetLowPassGain_m97370BA6DCA9A36A51C7AE3B6A5CF2A8A059CA36 (intptr_t ___channel0, float* ___gain1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::getLowPassGain(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getLowPassGain_m16542B879C28270327836C47164B3C80AA55DEE6 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float* ___gain0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetMode(System.IntPtr,FMOD.MODE)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetMode_m2F2BC0115F72AE0A589D39CAC85463B207748494 (intptr_t ___channel0, uint32_t ___mode1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::setMode(FMOD.MODE)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setMode_mB0CDDF95BD76E8A54167EA963AF9DAC98AB5EE55 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, uint32_t ___mode0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetMode(System.IntPtr,FMOD.MODE&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetMode_m93CC755DC00A9932E0E0C26BB61B64B12913011A (intptr_t ___channel0, uint32_t* ___mode1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::getMode(FMOD.MODE&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getMode_m616E9CBD231995EAFB36A5520A54DB36377D95EE (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, uint32_t* ___mode0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetCallback(System.IntPtr,FMOD.CHANNELCONTROL_CALLBACK)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetCallback_m7EF77501FDFA59F25D52D267D782AA6B3EB08778 (intptr_t ___channel0, CHANNELCONTROL_CALLBACK_t95D7949ECD13791F21B2CC1501D3F741AB1C9CF5 * ___callback1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::setCallback(FMOD.CHANNELCONTROL_CALLBACK)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setCallback_m796DDE64E10666A7AEDB66CF1E828AA72D931750 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, CHANNELCONTROL_CALLBACK_t95D7949ECD13791F21B2CC1501D3F741AB1C9CF5 * ___callback0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_IsPlaying(System.IntPtr,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_IsPlaying_m4EDD9C0801D5845718428144EDE7D52C0AC57F69 (intptr_t ___channel0, bool* ___isplaying1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::isPlaying(System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_isPlaying_m57AFFEAE60F45FB1402D43308AC84F1D54FE045F (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, bool* ___isplaying0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetPan(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetPan_m9D8C06BA87C75A4C5D86B59B7296ACBD2A2EE1FD (intptr_t ___channel0, float ___pan1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::setPan(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setPan_mB506C1B1132269F547C867C5250FA668AADE8876 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float ___pan0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetMixLevelsOutput(System.IntPtr,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetMixLevelsOutput_m07B3078423C7B3BA0EF4EE7DCB5A74BB82AA4FBF (intptr_t ___channel0, float ___frontleft1, float ___frontright2, float ___center3, float ___lfe4, float ___surroundleft5, float ___surroundright6, float ___backleft7, float ___backright8, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::setMixLevelsOutput(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setMixLevelsOutput_m0798755A914BCC1D10E2D9BA43ADA0D258A63BC8 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float ___frontleft0, float ___frontright1, float ___center2, float ___lfe3, float ___surroundleft4, float ___surroundright5, float ___backleft6, float ___backright7, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetMixLevelsInput(System.IntPtr,System.Single[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetMixLevelsInput_mB900BB86036DC4D287AF070A2FAB6D012938280F (intptr_t ___channel0, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___levels1, int32_t ___numlevels2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::setMixLevelsInput(System.Single[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setMixLevelsInput_m3798CACF4CBF55CF4E98BA7434D8169F66146794 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___levels0, int32_t ___numlevels1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetMixMatrix(System.IntPtr,System.Single[],System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetMixMatrix_mA4AE57B28C924F114EC26AE728C1F36F5C8BD01A (intptr_t ___channel0, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix1, int32_t ___outchannels2, int32_t ___inchannels3, int32_t ___inchannel_hop4, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::setMixMatrix(System.Single[],System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setMixMatrix_m47418FD89D59A7484DBB70AE9EE185306E754938 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix0, int32_t ___outchannels1, int32_t ___inchannels2, int32_t ___inchannel_hop3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetMixMatrix(System.IntPtr,System.Single[],System.Int32&,System.Int32&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetMixMatrix_m13ABC60E817534529D1CDA0AB271D690CDB96160 (intptr_t ___channel0, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix1, int32_t* ___outchannels2, int32_t* ___inchannels3, int32_t ___inchannel_hop4, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::getMixMatrix(System.Single[],System.Int32&,System.Int32&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getMixMatrix_mCE8E197EAA0407574A5D4AEE432A3B9CA7DEAC34 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix0, int32_t* ___outchannels1, int32_t* ___inchannels2, int32_t ___inchannel_hop3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetDSPClock(System.IntPtr,System.UInt64&,System.UInt64&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetDSPClock_m11871BCA7AB855D6D414D5B9C353430A13268ED1 (intptr_t ___channel0, uint64_t* ___dspclock1, uint64_t* ___parentclock2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::getDSPClock(System.UInt64&,System.UInt64&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getDSPClock_m986AC52E4CD3C9009EFB57BEA2A1682E205BBEC3 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, uint64_t* ___dspclock0, uint64_t* ___parentclock1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetDelay(System.IntPtr,System.UInt64,System.UInt64,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetDelay_m2B28A02E80B58A5BDA26731D60EAAC2AD0C67F95 (intptr_t ___channel0, uint64_t ___dspclock_start1, uint64_t ___dspclock_end2, bool ___stopchannels3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::setDelay(System.UInt64,System.UInt64,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setDelay_m399460F80068F0790E2E6FEF69837AD7BE356987 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, uint64_t ___dspclock_start0, uint64_t ___dspclock_end1, bool ___stopchannels2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetDelay(System.IntPtr,System.UInt64&,System.UInt64&,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetDelay_mF8E5967F3315701B3C70757D8B51B9E43C28D5C6 (intptr_t ___channel0, uint64_t* ___dspclock_start1, uint64_t* ___dspclock_end2, intptr_t ___zero3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::getDelay(System.UInt64&,System.UInt64&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getDelay_m287DDE522276BC3ABEED7AB75E53D7E7C383C554 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, uint64_t* ___dspclock_start0, uint64_t* ___dspclock_end1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetDelay(System.IntPtr,System.UInt64&,System.UInt64&,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetDelay_mF092BE9F560A57EAD28E8AEBFDFB5475B82FF1E7 (intptr_t ___channel0, uint64_t* ___dspclock_start1, uint64_t* ___dspclock_end2, bool* ___stopchannels3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::getDelay(System.UInt64&,System.UInt64&,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getDelay_mE01CD005BD79A684E07A6E050EBB7A2317F99097 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, uint64_t* ___dspclock_start0, uint64_t* ___dspclock_end1, bool* ___stopchannels2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_AddFadePoint(System.IntPtr,System.UInt64,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_AddFadePoint_m263DF954D6DBF356D9CCFDCC7818C85BB2E2746E (intptr_t ___channel0, uint64_t ___dspclock1, float ___volume2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::addFadePoint(System.UInt64,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_addFadePoint_m80CF3932872D17E9F8647C8FD33F0368B5961061 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, uint64_t ___dspclock0, float ___volume1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetFadePointRamp(System.IntPtr,System.UInt64,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetFadePointRamp_m47BC57731FAEA81423189F08AC6FA23F0E06FF16 (intptr_t ___channel0, uint64_t ___dspclock1, float ___volume2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::setFadePointRamp(System.UInt64,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setFadePointRamp_mC64A3E7B650B4C985FD266D84330074C1629DB24 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, uint64_t ___dspclock0, float ___volume1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_RemoveFadePoints(System.IntPtr,System.UInt64,System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_RemoveFadePoints_m9D0F3D5C64CCD1B46F712FFCF5E50B7664A363A5 (intptr_t ___channel0, uint64_t ___dspclock_start1, uint64_t ___dspclock_end2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::removeFadePoints(System.UInt64,System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_removeFadePoints_m83314F52A994F29B6A745A8D98739A8808B65469 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, uint64_t ___dspclock_start0, uint64_t ___dspclock_end1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetFadePoints(System.IntPtr,System.UInt32&,System.UInt64[],System.Single[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetFadePoints_mBEC57F9E7A3C9BD31BB2780D0798C7761DC3B80F (intptr_t ___channel0, uint32_t* ___numpoints1, UInt64U5BU5D_tA808FE881491284FF25AFDF5C4BC92A826031EF4* ___point_dspclock2, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___point_volume3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::getFadePoints(System.UInt32&,System.UInt64[],System.Single[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getFadePoints_m7980EB4BC6B43D59F749EE8EE22E386E631E89EE (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, uint32_t* ___numpoints0, UInt64U5BU5D_tA808FE881491284FF25AFDF5C4BC92A826031EF4* ___point_dspclock1, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___point_volume2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetDSP(System.IntPtr,System.Int32,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetDSP_mD2CD1B36E146B52F2F629970CA10BA29542ABAFB (intptr_t ___channel0, int32_t ___index1, intptr_t* ___dsp2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::getDSP(System.Int32,FMOD.DSP&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getDSP_mBC4C4D4D760ED56C81F603A3A8FD3759C120E641 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, int32_t ___index0, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * ___dsp1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_AddDSP(System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_AddDSP_m37A33AD192FA575ACB1C16C7A52FC1546E14E8C8 (intptr_t ___channel0, int32_t ___index1, intptr_t ___dsp2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::addDSP(System.Int32,FMOD.DSP)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_addDSP_m38A64EE2F27BA1F350ECA6FFD4C83727298A80B9 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, int32_t ___index0, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___dsp1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_RemoveDSP(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_RemoveDSP_m31ECB113E56C9FECE47E26BD66FE8360E41A5021 (intptr_t ___channel0, intptr_t ___dsp1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::removeDSP(FMOD.DSP)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_removeDSP_m6436F31166E3C1CA7E4997AEBE424C580F938B8B (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___dsp0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetNumDSPs(System.IntPtr,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetNumDSPs_m5978F8695FE3137860A8A5F5CFF2F27A77BACE95 (intptr_t ___channel0, int32_t* ___numdsps1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::getNumDSPs(System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getNumDSPs_m007B54911568EBBD2745D9BD3C82A41955D41A43 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, int32_t* ___numdsps0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetDSPIndex(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetDSPIndex_m311D6577B2812BE7DF785F873593004A1D96BDD6 (intptr_t ___channel0, intptr_t ___dsp1, int32_t ___index2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::setDSPIndex(FMOD.DSP,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setDSPIndex_mA39923787959A8CE3F0FB4C8076BFDDC8332FDFF (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___dsp0, int32_t ___index1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetDSPIndex(System.IntPtr,System.IntPtr,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetDSPIndex_m83C92691848DD8CC89FBD344B2FB23516A2E874A (intptr_t ___channel0, intptr_t ___dsp1, int32_t* ___index2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::getDSPIndex(FMOD.DSP,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getDSPIndex_mD654405243361EEB7092303C6E5D69D70B405D03 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___dsp0, int32_t* ___index1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Set3DAttributes(System.IntPtr,FMOD.VECTOR&,FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Set3DAttributes_m5C28FF6966651D85308AF42EBAF1DFAD049A6930 (intptr_t ___channel0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___pos1, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___vel2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::set3DAttributes(FMOD.VECTOR&,FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_set3DAttributes_mBCCF587430290C4827F8472723F6D02760BE95E7 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___pos0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___vel1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Get3DAttributes(System.IntPtr,FMOD.VECTOR&,FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Get3DAttributes_mC59C68F24306A674C42D634474DDD5990188DA25 (intptr_t ___channel0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___pos1, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___vel2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::get3DAttributes(FMOD.VECTOR&,FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_get3DAttributes_m370A321CE9C8F21FF047C2CF142B39DF7BCB8A5E (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___pos0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___vel1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Set3DMinMaxDistance(System.IntPtr,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Set3DMinMaxDistance_m33B3D9323FF5E8E61ACA97D7012D6BE06CECCECA (intptr_t ___channel0, float ___mindistance1, float ___maxdistance2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::set3DMinMaxDistance(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_set3DMinMaxDistance_m2B6A575A4347C4AF92A7A4B6D34DD0666E96A7C1 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float ___mindistance0, float ___maxdistance1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Get3DMinMaxDistance(System.IntPtr,System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Get3DMinMaxDistance_mC34A3CB41FED1CC47E487A57D80D5251726B09D0 (intptr_t ___channel0, float* ___mindistance1, float* ___maxdistance2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::get3DMinMaxDistance(System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_get3DMinMaxDistance_m9C117E504021FCA217297388392E5EC68581BCA1 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float* ___mindistance0, float* ___maxdistance1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Set3DConeSettings(System.IntPtr,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Set3DConeSettings_m1E46C0748EF7F2C1CAFDCFE3435F9A1097617A99 (intptr_t ___channel0, float ___insideconeangle1, float ___outsideconeangle2, float ___outsidevolume3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::set3DConeSettings(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_set3DConeSettings_mC1B2242ABC50E4CEC46DCF48361CDEF0B9E32A81 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float ___insideconeangle0, float ___outsideconeangle1, float ___outsidevolume2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Get3DConeSettings(System.IntPtr,System.Single&,System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Get3DConeSettings_m1FABFBE23D5AF54E4C79E1C920A11A5BB0D5327A (intptr_t ___channel0, float* ___insideconeangle1, float* ___outsideconeangle2, float* ___outsidevolume3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::get3DConeSettings(System.Single&,System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_get3DConeSettings_m594618E3B55AEA47C6149EFE1EEC340B9D0D3331 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float* ___insideconeangle0, float* ___outsideconeangle1, float* ___outsidevolume2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Set3DConeOrientation(System.IntPtr,FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Set3DConeOrientation_mCFEB777E567E041FA42263880E0438E3B1E20883 (intptr_t ___channel0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___orientation1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::set3DConeOrientation(FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_set3DConeOrientation_mF7391D50F55408CEBDD830363DA9EBFF17FF3BDA (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___orientation0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Get3DConeOrientation(System.IntPtr,FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Get3DConeOrientation_m68A3101A5998C8053048DC7411313B023BABA9A0 (intptr_t ___channel0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___orientation1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::get3DConeOrientation(FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_get3DConeOrientation_mA800502057234726083BA1081F4099A4DDB6E31C (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___orientation0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Set3DCustomRolloff(System.IntPtr,FMOD.VECTOR&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Set3DCustomRolloff_mD491EB73CA60C2C2CD1A50CD418C340EB3421C55 (intptr_t ___channel0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___points1, int32_t ___numpoints2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::set3DCustomRolloff(FMOD.VECTOR&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_set3DCustomRolloff_m7C721D59B02808278401E1A226DC5AA1525BE773 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___points0, int32_t ___numpoints1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Get3DCustomRolloff(System.IntPtr,System.IntPtr&,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Get3DCustomRolloff_mA253F0237FCDE57E978D1B8DD9C707C2CE2BD971 (intptr_t ___channel0, intptr_t* ___points1, int32_t* ___numpoints2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::get3DCustomRolloff(System.IntPtr&,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_get3DCustomRolloff_mE10B67FA024E42BA2D01324F36918766059A0C73 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, intptr_t* ___points0, int32_t* ___numpoints1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Set3DOcclusion(System.IntPtr,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Set3DOcclusion_m82BD2CABD57A11B64FF54E2EA695DB6FC44BEFC6 (intptr_t ___channel0, float ___directocclusion1, float ___reverbocclusion2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::set3DOcclusion(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_set3DOcclusion_mE3B3F9384381216FB31DE383046AD3B850354D9B (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float ___directocclusion0, float ___reverbocclusion1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Get3DOcclusion(System.IntPtr,System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Get3DOcclusion_m2C7BFA827EA81DA7C8927C6936B177F6ED5FC7F3 (intptr_t ___channel0, float* ___directocclusion1, float* ___reverbocclusion2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::get3DOcclusion(System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_get3DOcclusion_m38DF95871EEA232415BEA69B9C05A228A38D6D65 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float* ___directocclusion0, float* ___reverbocclusion1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Set3DSpread(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Set3DSpread_m3E83CEF17AF4E72F0F114A285D02A824D733B350 (intptr_t ___channel0, float ___angle1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::set3DSpread(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_set3DSpread_m91B7A36352C1962D1024EA0C210A6706287E2665 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float ___angle0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Get3DSpread(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Get3DSpread_m057E79C9C9DA9FA63DD2A7C1F6BCB72267FF5CE6 (intptr_t ___channel0, float* ___angle1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::get3DSpread(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_get3DSpread_mDD7474886200B9929C885266643BECE87B3E5178 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float* ___angle0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Set3DLevel(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Set3DLevel_mEA0418535561207F86497CC38A4C1C6C9983E806 (intptr_t ___channel0, float ___level1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::set3DLevel(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_set3DLevel_m28CCBB1C381CF9FC7949DE964B60B98F3BE75D85 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float ___level0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Get3DLevel(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Get3DLevel_m565A368E7A2BA33C789DFFAB6A17D778DCF7D0AC (intptr_t ___channel0, float* ___level1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::get3DLevel(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_get3DLevel_m5040FB74ACCAEC5AE0C112A8DC8111CCFB2BD46B (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float* ___level0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Set3DDopplerLevel(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Set3DDopplerLevel_mABDDCE433E27EB3FCCD72828842284F3C91E0D7A (intptr_t ___channel0, float ___level1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::set3DDopplerLevel(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_set3DDopplerLevel_m4A5ECFA7DE99D7085E6AC8B382F6B1B3A4FC0809 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float ___level0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Get3DDopplerLevel(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Get3DDopplerLevel_m54A5ACC0258E39E135E2D0CCEEEE22B7F8B8F08D (intptr_t ___channel0, float* ___level1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::get3DDopplerLevel(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_get3DDopplerLevel_m2B7E4D9D5AF4DA553398E581B151B5E424791DB4 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float* ___level0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Set3DDistanceFilter(System.IntPtr,System.Boolean,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Set3DDistanceFilter_mFE28A418BAADDDF114A5B6B64D5FDFB72C03AA42 (intptr_t ___channel0, bool ___custom1, float ___customLevel2, float ___centerFreq3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::set3DDistanceFilter(System.Boolean,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_set3DDistanceFilter_mC7E4CF5257F20D705F5143269BD5169D2074B4BC (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, bool ___custom0, float ___customLevel1, float ___centerFreq2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Get3DDistanceFilter(System.IntPtr,System.Boolean&,System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Get3DDistanceFilter_mB53951F2028561350A25A47EBBF987EF49BA9291 (intptr_t ___channel0, bool* ___custom1, float* ___customLevel2, float* ___centerFreq3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::get3DDistanceFilter(System.Boolean&,System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_get3DDistanceFilter_m5828517E43F2701D39C165A649D96FF0E0FA0062 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, bool* ___custom0, float* ___customLevel1, float* ___centerFreq2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetUserData(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetUserData_m359F4FCB96AC079FCD3805C95E071D5D824B2F30 (intptr_t ___channel0, intptr_t ___userdata1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::setUserData(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setUserData_mA7EE6EDF46333E8B8D94E41911FEBBC106CA21CF (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, intptr_t ___userdata0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetUserData(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetUserData_mE35AE3DF7BB18D18812731F99FBA4F1BCE409A29 (intptr_t ___channel0, intptr_t* ___userdata1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Channel::getUserData(System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getUserData_m5267AF208D87ADB21E52B62474397CE0CE549457 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, intptr_t* ___userdata0, const RuntimeMethod* method);
// System.Boolean System.IntPtr::op_Inequality(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool IntPtr_op_Inequality_mB4886A806009EA825EFCC60CD2A7F6EB8E273A61 (intptr_t ___value10, intptr_t ___value21, const RuntimeMethod* method);
// System.Boolean FMOD.Channel::hasHandle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Channel_hasHandle_mB3B2C4307E75D35F6521FF3374DAF1BEE793E506 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, const RuntimeMethod* method);
// System.Void FMOD.Channel::clearHandle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Channel_clearHandle_m2DC368368C90A088742321ED558AA1CDF14FF2F6 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Release(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Release_mCF7AE9552AADFB0BAD400F91F6B7711C58ADDB5D (intptr_t ___channelgroup0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::release()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_release_m1C76131F70CBCBEE3D21590813F5EC10F810A295 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_AddGroup(System.IntPtr,System.IntPtr,System.Boolean,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_AddGroup_m1AEAAE2E9459894F8BD98DABE85E7F3AAC427FDC (intptr_t ___channelgroup0, intptr_t ___group1, bool ___propagatedspclock2, intptr_t ___zero3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::addGroup(FMOD.ChannelGroup,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_addGroup_mCE1145005428A1BEA29DC68CA9111F9CF27B6A7E (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069  ___group0, bool ___propagatedspclock1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_AddGroup(System.IntPtr,System.IntPtr,System.Boolean,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_AddGroup_mFF9828E1578F297238D8EFB0E97ED6B77AB14F8A (intptr_t ___channelgroup0, intptr_t ___group1, bool ___propagatedspclock2, intptr_t* ___connection3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::addGroup(FMOD.ChannelGroup,System.Boolean,FMOD.DSPConnection&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_addGroup_m6CEFBBFF40C42C1D45983DC17B8A7CDFDC5631ED (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069  ___group0, bool ___propagatedspclock1, DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * ___connection2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetNumGroups(System.IntPtr,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetNumGroups_mE17AF280FCCB51DD0A0D76467004627C1D5E82D3 (intptr_t ___channelgroup0, int32_t* ___numgroups1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::getNumGroups(System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getNumGroups_m3E4E03733490F1CBDE776CE418E412339FB062EA (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, int32_t* ___numgroups0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetGroup(System.IntPtr,System.Int32,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetGroup_mEBC3C58A4B5081F2599D9D1A2A998B26F7AD54AD (intptr_t ___channelgroup0, int32_t ___index1, intptr_t* ___group2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::getGroup(System.Int32,FMOD.ChannelGroup&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getGroup_m116076104D372B4B2D9228CAEFB356B06941411B (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, int32_t ___index0, ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * ___group1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetParentGroup(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetParentGroup_m8C563FBD98F9353C24A8B13DCF2958401E067E09 (intptr_t ___channelgroup0, intptr_t* ___group1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::getParentGroup(FMOD.ChannelGroup&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getParentGroup_m593E0D73F9BD1E00F414D1E0B596133F106E0DE2 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * ___group0, const RuntimeMethod* method);
// System.IntPtr System.Runtime.InteropServices.Marshal::AllocHGlobal(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t Marshal_AllocHGlobal_m3BFCB876D7469108C8676D6DD90D943806C13A58 (int32_t ___cb0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetName(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetName_m0253A55C677F233432F12BE9C5F8E11E8739892C (intptr_t ___channelgroup0, intptr_t ___name1, int32_t ___namelen2, const RuntimeMethod* method);
// FMOD.StringHelper/ThreadSafeEncoding FMOD.StringHelper::GetFreeHelper()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ThreadSafeEncoding_t9C88ACD17730C478FB2685CA11D1ABC64C1A1771 * StringHelper_GetFreeHelper_mF20CD435503694A169A0FBC7EDAD73E3BCE4E257 (const RuntimeMethod* method);
// System.String FMOD.StringHelper/ThreadSafeEncoding::stringFromNative(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* ThreadSafeEncoding_stringFromNative_m5D2DB516A8AF5CE6BC34A3DF0A402E4A6F2CD3A0 (ThreadSafeEncoding_t9C88ACD17730C478FB2685CA11D1ABC64C1A1771 * __this, intptr_t ___nativePtr0, const RuntimeMethod* method);
// System.Void System.Runtime.InteropServices.Marshal::FreeHGlobal(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Marshal_FreeHGlobal_mF098DF00F5341FDE4747A6F2004D5A0C9B03ED85 (intptr_t ___hglobal0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::getName(System.String&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getName_m249DBCE8CDC68ECD72A98C92F305E556314C28DA (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, String_t** ___name0, int32_t ___namelen1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetNumChannels(System.IntPtr,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetNumChannels_mC942911FB4218B0004E91DBFDB37A66B58CAAE10 (intptr_t ___channelgroup0, int32_t* ___numchannels1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::getNumChannels(System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getNumChannels_m0B89B78D70EA56AFAB266B88FB1EF7784F1949CA (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, int32_t* ___numchannels0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetChannel(System.IntPtr,System.Int32,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetChannel_mF2648AB86AD5EFD7925A0ED999630D195D408816 (intptr_t ___channelgroup0, int32_t ___index1, intptr_t* ___channel2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::getChannel(System.Int32,FMOD.Channel&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getChannel_mA5D971D838818FA12049F1B43889408AD2FCB165 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, int32_t ___index0, Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * ___channel1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetSystemObject(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetSystemObject_m38BE230B59DA645955B18DE24A3DC88ABF1A22B7 (intptr_t ___channelgroup0, intptr_t* ___system1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::getSystemObject(FMOD.System&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getSystemObject_mC6401EDB885E94C6F6B3701E65BC45B6D0FF2739 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, System_t1E8F97CEB4B863C4A09A4EC514B0C27FBA8D08B7 * ___system0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Stop(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Stop_m0F989A2322E65BBEDF27EFEDBAE868BCE7F5B0F2 (intptr_t ___channelgroup0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::stop()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_stop_m4ED408A83C2B4E83A49816082603D742C367D133 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetPaused(System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetPaused_mBE639C22AB5041CE3A7E0B6FE0D56439150EB78B (intptr_t ___channelgroup0, bool ___paused1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::setPaused(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setPaused_mF90E1D1467F50123CA850E1185239B89DC81F728 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, bool ___paused0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetPaused(System.IntPtr,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetPaused_mD70E168FE815DF1DF9CD5BEDF16EB1D8E143FBF0 (intptr_t ___channelgroup0, bool* ___paused1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::getPaused(System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getPaused_mBCD3ECF079AAF02AF05B80FBAE826F8F9469E448 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, bool* ___paused0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetVolume(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetVolume_m807734AACF95B3B8C3680EE2631DEAF718056A99 (intptr_t ___channelgroup0, float ___volume1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::setVolume(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setVolume_mE0B27DBBED7048BFA7B897304CCB881AA06F551B (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float ___volume0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetVolume(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetVolume_mEF9C0BCAC316C02D30CC084956FE681C1C6547E4 (intptr_t ___channelgroup0, float* ___volume1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::getVolume(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getVolume_mF75F198E301C02C19FD412CB8E9B1602DA60CC7C (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float* ___volume0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetVolumeRamp(System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetVolumeRamp_mA22F044E892707687F17D0954BC7AD84FE7756E3 (intptr_t ___channelgroup0, bool ___ramp1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::setVolumeRamp(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setVolumeRamp_mE31F5D1CF2A5F67B223A1ACD94CCEA84BB2E4A5C (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, bool ___ramp0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetVolumeRamp(System.IntPtr,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetVolumeRamp_m43A95009E60FF18AB4878084AB71EAD3F0EE7E2E (intptr_t ___channelgroup0, bool* ___ramp1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::getVolumeRamp(System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getVolumeRamp_mEAE02167B4C82F515692A3C17997C51B1B5CC77B (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, bool* ___ramp0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetAudibility(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetAudibility_mD1D78619DD2B29609D5E68DE5A1ED5F8525C9CDE (intptr_t ___channelgroup0, float* ___audibility1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::getAudibility(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getAudibility_m7B9BDDBFD767F24198D8AF75C7C59ED7AAF8C070 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float* ___audibility0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetPitch(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetPitch_m98E67DBF83E55357687C7EE41B281C75DFECB847 (intptr_t ___channelgroup0, float ___pitch1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::setPitch(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setPitch_mA374C7EEB52407834DC365C17E51BBF032BD7263 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float ___pitch0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetPitch(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetPitch_m9417E16234D88BE6267AA0E8E82FF4A3F6B934B9 (intptr_t ___channelgroup0, float* ___pitch1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::getPitch(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getPitch_mF870BF530D1D99F73F6BB0E1F821DDBA7C76365D (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float* ___pitch0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetMute(System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetMute_m0147EC514B4C9428804295D19C16ADB61F8FC5F8 (intptr_t ___channelgroup0, bool ___mute1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::setMute(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setMute_m258FF98011C114C69FB587FF2F8E6DC06EEE60E7 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, bool ___mute0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetMute(System.IntPtr,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetMute_mEF147FD210889FFC3D16F7A5A4D71824C91AF9BD (intptr_t ___channelgroup0, bool* ___mute1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::getMute(System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getMute_mA322E5AD8090737BE368EA0F7C8588375F9979E6 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, bool* ___mute0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetReverbProperties(System.IntPtr,System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetReverbProperties_m760B424E4C52928F32BA30F4FE906E5219B64635 (intptr_t ___channelgroup0, int32_t ___instance1, float ___wet2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::setReverbProperties(System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setReverbProperties_m392EF523D1FEAB8845DE4595D9E00D865C5C8EE4 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, int32_t ___instance0, float ___wet1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetReverbProperties(System.IntPtr,System.Int32,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetReverbProperties_m0887C37F5BBCC41A60E312CF2A20BBB111634F80 (intptr_t ___channelgroup0, int32_t ___instance1, float* ___wet2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::getReverbProperties(System.Int32,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getReverbProperties_m2261E026DC1F7850FFC25C82CCC1EED3953B979A (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, int32_t ___instance0, float* ___wet1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetLowPassGain(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetLowPassGain_m02BD432F4C31A0AE5E61599FBAEA7EBD2D8666E6 (intptr_t ___channelgroup0, float ___gain1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::setLowPassGain(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setLowPassGain_mB6E63048C1EADD67DADD3087F2438666A4BBB5CA (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float ___gain0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetLowPassGain(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetLowPassGain_mDC0CDE3A6A056372C40F00AB03ED74B00C7784E8 (intptr_t ___channelgroup0, float* ___gain1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::getLowPassGain(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getLowPassGain_mA28C6A5E488485D1C7F6D98F2B59ECCFCC8D014B (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float* ___gain0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetMode(System.IntPtr,FMOD.MODE)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetMode_m34FA3364D10D0EB736FF83109300BF3E1C406F22 (intptr_t ___channelgroup0, uint32_t ___mode1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::setMode(FMOD.MODE)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setMode_mB692666128AD708FE713EA70769685367A8179B1 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, uint32_t ___mode0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetMode(System.IntPtr,FMOD.MODE&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetMode_m94249A271BC8D9560E4B8DC005F9E48F1EC06923 (intptr_t ___channelgroup0, uint32_t* ___mode1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::getMode(FMOD.MODE&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getMode_mA38C266432659E17B921E412608AF7F592C17994 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, uint32_t* ___mode0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetCallback(System.IntPtr,FMOD.CHANNELCONTROL_CALLBACK)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetCallback_m5F8FFD6E9584EF32B42189A87F0739FE7E05D95D (intptr_t ___channelgroup0, CHANNELCONTROL_CALLBACK_t95D7949ECD13791F21B2CC1501D3F741AB1C9CF5 * ___callback1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::setCallback(FMOD.CHANNELCONTROL_CALLBACK)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setCallback_mFA62D354532CECDCCC1A66B455001FDF93ACC249 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, CHANNELCONTROL_CALLBACK_t95D7949ECD13791F21B2CC1501D3F741AB1C9CF5 * ___callback0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_IsPlaying(System.IntPtr,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_IsPlaying_mEC677F7159FB2B4BB6D095E6ADD4CAF2D7D6990F (intptr_t ___channelgroup0, bool* ___isplaying1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::isPlaying(System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_isPlaying_m9C986AE34C99FE523F537493B45EB9B1F55AEA90 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, bool* ___isplaying0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetPan(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetPan_m7709AC32CEF6D8038E7AA694A37D04F612660449 (intptr_t ___channelgroup0, float ___pan1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::setPan(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setPan_m9EE4D1E5FC0C666ACF9033D3386CA18FF35F59CD (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float ___pan0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetMixLevelsOutput(System.IntPtr,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetMixLevelsOutput_mB39E3792DA1F8E82CC20D48E555C28A4D36D8759 (intptr_t ___channelgroup0, float ___frontleft1, float ___frontright2, float ___center3, float ___lfe4, float ___surroundleft5, float ___surroundright6, float ___backleft7, float ___backright8, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::setMixLevelsOutput(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setMixLevelsOutput_mC905B8BA92E42A844FBA7ECBE8F97C5C692006F1 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float ___frontleft0, float ___frontright1, float ___center2, float ___lfe3, float ___surroundleft4, float ___surroundright5, float ___backleft6, float ___backright7, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetMixLevelsInput(System.IntPtr,System.Single[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetMixLevelsInput_m1A3291A1578DC03E13D077EF603B156C035DA914 (intptr_t ___channelgroup0, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___levels1, int32_t ___numlevels2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::setMixLevelsInput(System.Single[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setMixLevelsInput_m4D65B63EE3132AD3A3CA059906464B73CC16EF71 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___levels0, int32_t ___numlevels1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetMixMatrix(System.IntPtr,System.Single[],System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetMixMatrix_m43CF6332FC8F8964CE0CD4F3BD220CEE30020073 (intptr_t ___channelgroup0, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix1, int32_t ___outchannels2, int32_t ___inchannels3, int32_t ___inchannel_hop4, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::setMixMatrix(System.Single[],System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setMixMatrix_mAFF78D2BB81CD51FED98F7C1C2C4C1CEA8388F9F (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix0, int32_t ___outchannels1, int32_t ___inchannels2, int32_t ___inchannel_hop3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetMixMatrix(System.IntPtr,System.Single[],System.Int32&,System.Int32&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetMixMatrix_mC974B5D5F28AA65362C5371CF48A2736A0D8DF25 (intptr_t ___channelgroup0, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix1, int32_t* ___outchannels2, int32_t* ___inchannels3, int32_t ___inchannel_hop4, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::getMixMatrix(System.Single[],System.Int32&,System.Int32&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getMixMatrix_m6E40D58E085303C79ACD6F094BC96DEABE47291B (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix0, int32_t* ___outchannels1, int32_t* ___inchannels2, int32_t ___inchannel_hop3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetDSPClock(System.IntPtr,System.UInt64&,System.UInt64&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetDSPClock_mAFD667C022D846D91821C9B0CC51C56D15958253 (intptr_t ___channelgroup0, uint64_t* ___dspclock1, uint64_t* ___parentclock2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::getDSPClock(System.UInt64&,System.UInt64&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getDSPClock_m17A091F23CAAAFD81678C6BC139D557D893301CB (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, uint64_t* ___dspclock0, uint64_t* ___parentclock1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetDelay(System.IntPtr,System.UInt64,System.UInt64,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetDelay_m22361606893E41831736E545EB89CCC40643EF4F (intptr_t ___channelgroup0, uint64_t ___dspclock_start1, uint64_t ___dspclock_end2, bool ___stopchannels3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::setDelay(System.UInt64,System.UInt64,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setDelay_mC8937376224CA521506DC916E7A6191FE54B6589 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, uint64_t ___dspclock_start0, uint64_t ___dspclock_end1, bool ___stopchannels2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetDelay(System.IntPtr,System.UInt64&,System.UInt64&,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetDelay_m790CCF3CA70CDA18DA5A7777017069A5B6736707 (intptr_t ___channelgroup0, uint64_t* ___dspclock_start1, uint64_t* ___dspclock_end2, intptr_t ___zero3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::getDelay(System.UInt64&,System.UInt64&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getDelay_m56C301B16C1652BB132B09653912491F7F17848E (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, uint64_t* ___dspclock_start0, uint64_t* ___dspclock_end1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetDelay(System.IntPtr,System.UInt64&,System.UInt64&,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetDelay_m8E11B5F6380818473ED224CA76CFA6725A084AA3 (intptr_t ___channelgroup0, uint64_t* ___dspclock_start1, uint64_t* ___dspclock_end2, bool* ___stopchannels3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::getDelay(System.UInt64&,System.UInt64&,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getDelay_m8F07C7096D589D4CBD236729215D30A59999CB32 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, uint64_t* ___dspclock_start0, uint64_t* ___dspclock_end1, bool* ___stopchannels2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_AddFadePoint(System.IntPtr,System.UInt64,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_AddFadePoint_mF64C02A4E035972F94811E69D29F041B26E27F63 (intptr_t ___channelgroup0, uint64_t ___dspclock1, float ___volume2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::addFadePoint(System.UInt64,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_addFadePoint_m2936401E5AB26CB019D16507ED0CF10186C5782A (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, uint64_t ___dspclock0, float ___volume1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetFadePointRamp(System.IntPtr,System.UInt64,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetFadePointRamp_m3755C55B0105A5909C7933B5B508C612A72040F7 (intptr_t ___channelgroup0, uint64_t ___dspclock1, float ___volume2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::setFadePointRamp(System.UInt64,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setFadePointRamp_m514F1E78B543B3A48B53B70CDDF45202A11CA4E9 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, uint64_t ___dspclock0, float ___volume1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_RemoveFadePoints(System.IntPtr,System.UInt64,System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_RemoveFadePoints_mB32A350562A1C1DAF8875C322BF2270247C87629 (intptr_t ___channelgroup0, uint64_t ___dspclock_start1, uint64_t ___dspclock_end2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::removeFadePoints(System.UInt64,System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_removeFadePoints_m87985E8F95A609D55CC58E2D6FF013405C67299B (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, uint64_t ___dspclock_start0, uint64_t ___dspclock_end1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetFadePoints(System.IntPtr,System.UInt32&,System.UInt64[],System.Single[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetFadePoints_m251D589DCCB47B5A27B2E1B133B291DD950EFAFC (intptr_t ___channelgroup0, uint32_t* ___numpoints1, UInt64U5BU5D_tA808FE881491284FF25AFDF5C4BC92A826031EF4* ___point_dspclock2, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___point_volume3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::getFadePoints(System.UInt32&,System.UInt64[],System.Single[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getFadePoints_m4156D385F044DB76B10F1942EC7E598F2FCC2FE3 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, uint32_t* ___numpoints0, UInt64U5BU5D_tA808FE881491284FF25AFDF5C4BC92A826031EF4* ___point_dspclock1, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___point_volume2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetDSP(System.IntPtr,System.Int32,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetDSP_mCCAC7014A2AB297B97F7A1BAEB0157AE208F9A76 (intptr_t ___channelgroup0, int32_t ___index1, intptr_t* ___dsp2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::getDSP(System.Int32,FMOD.DSP&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getDSP_mA461676D8274C7750EE1071997D72C6311186FCC (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, int32_t ___index0, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * ___dsp1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_AddDSP(System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_AddDSP_m3BBD7F50976FC8CE402A75BA4326CD068CE8450D (intptr_t ___channelgroup0, int32_t ___index1, intptr_t ___dsp2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::addDSP(System.Int32,FMOD.DSP)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_addDSP_m91798C3A37B101A5B22E6EE8D6132474C48EA003 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, int32_t ___index0, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___dsp1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_RemoveDSP(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_RemoveDSP_m61C8630351AB22FC3637435BFAEA58D111271AC9 (intptr_t ___channelgroup0, intptr_t ___dsp1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::removeDSP(FMOD.DSP)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_removeDSP_m935D52C490FFD5B5FFDE11AE48B98237E0B0E62C (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___dsp0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetNumDSPs(System.IntPtr,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetNumDSPs_mC2D2A0654C038B7A8E5E0491A89E328EDDCB84C8 (intptr_t ___channelgroup0, int32_t* ___numdsps1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::getNumDSPs(System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getNumDSPs_mE9640C8FDA35EEE62FF23949EFB8874530818C23 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, int32_t* ___numdsps0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetDSPIndex(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetDSPIndex_mA5A046FA5378239227C2F0EF60F4581D50B4EDB9 (intptr_t ___channelgroup0, intptr_t ___dsp1, int32_t ___index2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::setDSPIndex(FMOD.DSP,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setDSPIndex_m548DAE78D8DE9FB4E67E786156038722023720B9 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___dsp0, int32_t ___index1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetDSPIndex(System.IntPtr,System.IntPtr,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetDSPIndex_m333E81DC2D2B5C042C4AEDFCF78413BEA2D698AD (intptr_t ___channelgroup0, intptr_t ___dsp1, int32_t* ___index2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::getDSPIndex(FMOD.DSP,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getDSPIndex_mB2190A962FC55F316CFD6C67A8E5F6A7536CEAEE (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___dsp0, int32_t* ___index1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Set3DAttributes(System.IntPtr,FMOD.VECTOR&,FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Set3DAttributes_m38EAF6CD17CF86D1E9F01EB613759F34D2D7ABAE (intptr_t ___channelgroup0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___pos1, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___vel2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::set3DAttributes(FMOD.VECTOR&,FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_set3DAttributes_m6A2F561D4DAA9151428743A5A2D29426F4C2BA98 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___pos0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___vel1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Get3DAttributes(System.IntPtr,FMOD.VECTOR&,FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Get3DAttributes_mF5AF2EE98B1B2977D2D5E2D74677410894372469 (intptr_t ___channelgroup0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___pos1, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___vel2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::get3DAttributes(FMOD.VECTOR&,FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_get3DAttributes_mBCE254E77CCFCE76941AF939A2F5A96A7C35B13E (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___pos0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___vel1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Set3DMinMaxDistance(System.IntPtr,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Set3DMinMaxDistance_m8E3E723200CA45153811C264427EF69BC2E89979 (intptr_t ___channelgroup0, float ___mindistance1, float ___maxdistance2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::set3DMinMaxDistance(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_set3DMinMaxDistance_m9AF62CD9E3054C99FC434794CA002385C97708F5 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float ___mindistance0, float ___maxdistance1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Get3DMinMaxDistance(System.IntPtr,System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Get3DMinMaxDistance_m1A532300CA8AC76FF60812C10294E0AB5ECB8FEB (intptr_t ___channelgroup0, float* ___mindistance1, float* ___maxdistance2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::get3DMinMaxDistance(System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_get3DMinMaxDistance_mA3E3E55ADC6978002B29662690E152988674B011 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float* ___mindistance0, float* ___maxdistance1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Set3DConeSettings(System.IntPtr,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Set3DConeSettings_m2BB5FE21547DC09ADAA97A060B3B8B1F5B96498B (intptr_t ___channelgroup0, float ___insideconeangle1, float ___outsideconeangle2, float ___outsidevolume3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::set3DConeSettings(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_set3DConeSettings_m5FC78819D1022DC0DD2371AF6A6AB618E30869D3 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float ___insideconeangle0, float ___outsideconeangle1, float ___outsidevolume2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Get3DConeSettings(System.IntPtr,System.Single&,System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Get3DConeSettings_m5C2D03C1FD98D8F48077309E88570C9DFB96EDD8 (intptr_t ___channelgroup0, float* ___insideconeangle1, float* ___outsideconeangle2, float* ___outsidevolume3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::get3DConeSettings(System.Single&,System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_get3DConeSettings_m8D553FA6A7ACD4DCE121FB9F7639BE2F5685EDF8 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float* ___insideconeangle0, float* ___outsideconeangle1, float* ___outsidevolume2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Set3DConeOrientation(System.IntPtr,FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Set3DConeOrientation_mA4FC9EA2F87185AB3BB5D5615FF830258E3378E2 (intptr_t ___channelgroup0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___orientation1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::set3DConeOrientation(FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_set3DConeOrientation_m1E258F50858489514D094D961B8F50CD76D4F136 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___orientation0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Get3DConeOrientation(System.IntPtr,FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Get3DConeOrientation_m12C15825F07BF4946F1460DF2B4AD70BF508D415 (intptr_t ___channelgroup0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___orientation1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::get3DConeOrientation(FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_get3DConeOrientation_mE581105CB252CADE55CC434578BBEB54FE36B6F8 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___orientation0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Set3DCustomRolloff(System.IntPtr,FMOD.VECTOR&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Set3DCustomRolloff_m8BA3CF2552F9ABB7F12890A7AF4257789BCF9701 (intptr_t ___channelgroup0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___points1, int32_t ___numpoints2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::set3DCustomRolloff(FMOD.VECTOR&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_set3DCustomRolloff_mD7E9FEF271A8989F66BB7CEAA05AFB4BA382AED3 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___points0, int32_t ___numpoints1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Get3DCustomRolloff(System.IntPtr,System.IntPtr&,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Get3DCustomRolloff_m56DFC27A13AEB44A5976D00DE06F35EE67EFF1FE (intptr_t ___channelgroup0, intptr_t* ___points1, int32_t* ___numpoints2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::get3DCustomRolloff(System.IntPtr&,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_get3DCustomRolloff_m668BEA7719870D5C8E6E1BB3E2D3116F3DCC72BC (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, intptr_t* ___points0, int32_t* ___numpoints1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Set3DOcclusion(System.IntPtr,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Set3DOcclusion_mC8E6CCE0014CEAAD310FFF891A8D75FE22370171 (intptr_t ___channelgroup0, float ___directocclusion1, float ___reverbocclusion2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::set3DOcclusion(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_set3DOcclusion_m7E4B076D55EDDD7320A11DF62E981E8999212BAF (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float ___directocclusion0, float ___reverbocclusion1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Get3DOcclusion(System.IntPtr,System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Get3DOcclusion_mDA0EB7BC32405ED617688DD30AADB0649014300A (intptr_t ___channelgroup0, float* ___directocclusion1, float* ___reverbocclusion2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::get3DOcclusion(System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_get3DOcclusion_m006501ABD9B0824FEF19844E0B8B6651355F9EE8 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float* ___directocclusion0, float* ___reverbocclusion1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Set3DSpread(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Set3DSpread_m2C0F4CAE19E332306224CDEE99819F822778142B (intptr_t ___channelgroup0, float ___angle1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::set3DSpread(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_set3DSpread_m601DA533954B0578EC5136E9E61ABAA2FC62A88C (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float ___angle0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Get3DSpread(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Get3DSpread_mEF714D52412D82365E834C5617EC1CFDC0E4296C (intptr_t ___channelgroup0, float* ___angle1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::get3DSpread(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_get3DSpread_mAF7DD38BB630A91137E265BA8C12EF84F2F78FFB (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float* ___angle0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Set3DLevel(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Set3DLevel_mDA03F76A361D37512B5472D0F69599083D8C6916 (intptr_t ___channelgroup0, float ___level1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::set3DLevel(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_set3DLevel_mB5859D350A75841CD06CFBC1342B4E709528DD40 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float ___level0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Get3DLevel(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Get3DLevel_m75DFAC6149D9ACB2E6E9B585E9035F296291A3D3 (intptr_t ___channelgroup0, float* ___level1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::get3DLevel(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_get3DLevel_mC8BE953AA31FBC76E6081CC041E1385E585E2495 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float* ___level0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Set3DDopplerLevel(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Set3DDopplerLevel_mBB73A94C00BBD975B62BD04F034EAEE0F314841F (intptr_t ___channelgroup0, float ___level1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::set3DDopplerLevel(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_set3DDopplerLevel_mF5121855D3AD55E03A82085A51AAA898958CE9CF (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float ___level0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Get3DDopplerLevel(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Get3DDopplerLevel_m7831338308326A326A338C977FDB51F333C1DFA4 (intptr_t ___channelgroup0, float* ___level1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::get3DDopplerLevel(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_get3DDopplerLevel_mEA2D6805AA1428A120C113E6B2B2647961FECEDC (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float* ___level0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Set3DDistanceFilter(System.IntPtr,System.Boolean,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Set3DDistanceFilter_mCF1F2D582910914C9D81C58468337234851BACAD (intptr_t ___channelgroup0, bool ___custom1, float ___customLevel2, float ___centerFreq3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::set3DDistanceFilter(System.Boolean,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_set3DDistanceFilter_m3C2323C5D250F29C2FD7E84D45707A5543D8C23D (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, bool ___custom0, float ___customLevel1, float ___centerFreq2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Get3DDistanceFilter(System.IntPtr,System.Boolean&,System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Get3DDistanceFilter_m3A306B1DFC8BECFE222481CCEA7385D6F1006B62 (intptr_t ___channelgroup0, bool* ___custom1, float* ___customLevel2, float* ___centerFreq3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::get3DDistanceFilter(System.Boolean&,System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_get3DDistanceFilter_mF5837D2C68AC971A4979B209023BF258D3542E69 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, bool* ___custom0, float* ___customLevel1, float* ___centerFreq2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetUserData(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetUserData_mDD7C4D786A2D926206B8BAF3183591CB4EA9562E (intptr_t ___channelgroup0, intptr_t ___userdata1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::setUserData(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setUserData_mF8167FD9A5C6616CB492B5F52ED25D3333DB4DE2 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, intptr_t ___userdata0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetUserData(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetUserData_mF8EA0F8F939690CA6D8CFC635C5958C7E8B2AC9E (intptr_t ___channelgroup0, intptr_t* ___userdata1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.ChannelGroup::getUserData(System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getUserData_m91200AB27B70E3738CE12B7A46656F93759689E5 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, intptr_t* ___userdata0, const RuntimeMethod* method);
// System.Boolean FMOD.ChannelGroup::hasHandle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool ChannelGroup_hasHandle_m00CF2E79B1782BD22AD93F7F79BA79636908470A (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, const RuntimeMethod* method);
// System.Void FMOD.ChannelGroup::clearHandle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChannelGroup_clearHandle_m3C24644E33F4627073F4A50BF9B0C83A7B049904 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_Release(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_Release_mF380927297215BCAF202FE1D0AEA4D1362CD1886 (intptr_t ___dsp0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::release()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_release_mC26706FC8899552FD9BDE4FEE58CA83D16107338 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetSystemObject(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetSystemObject_mE14609B8F822A8691EC6AAAEDA085B1669602807 (intptr_t ___dsp0, intptr_t* ___system1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::getSystemObject(FMOD.System&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getSystemObject_mAB3512F3ACD7508463E2D501EB86DFD2853589B2 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, System_t1E8F97CEB4B863C4A09A4EC514B0C27FBA8D08B7 * ___system0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_AddInput(System.IntPtr,System.IntPtr,System.IntPtr,FMOD.DSPCONNECTION_TYPE)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_AddInput_m30143D3F008EDBC623AD02BC726EB764941824F2 (intptr_t ___dsp0, intptr_t ___input1, intptr_t ___zero2, int32_t ___type3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::addInput(FMOD.DSP)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_addInput_m1235C517F88AAE47B6F4A7851D88E26DD54D509C (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___input0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_AddInput(System.IntPtr,System.IntPtr,System.IntPtr&,FMOD.DSPCONNECTION_TYPE)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_AddInput_m43D4C160D730463D60821736687C08A825C0F730 (intptr_t ___dsp0, intptr_t ___input1, intptr_t* ___connection2, int32_t ___type3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::addInput(FMOD.DSP,FMOD.DSPConnection&,FMOD.DSPCONNECTION_TYPE)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_addInput_mEA9A20658298C41669AD8AFB72274C071BC4C3FF (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___input0, DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * ___connection1, int32_t ___type2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_DisconnectFrom(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_DisconnectFrom_mE196E151C4DC8383116411277100E06CD800536C (intptr_t ___dsp0, intptr_t ___target1, intptr_t ___connection2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::disconnectFrom(FMOD.DSP,FMOD.DSPConnection)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_disconnectFrom_mA0857B2FE22EE17ECC0448DB09EFD7761A995BE8 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___target0, DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0  ___connection1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_DisconnectAll(System.IntPtr,System.Boolean,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_DisconnectAll_m6916B03D81942BEC728C378E94C075B99C636CF6 (intptr_t ___dsp0, bool ___inputs1, bool ___outputs2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::disconnectAll(System.Boolean,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_disconnectAll_m0600BAD827BA54E4F9C1CE7CBDBCF5BC196FDC45 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, bool ___inputs0, bool ___outputs1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetNumInputs(System.IntPtr,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetNumInputs_m6037C9BB683E29B2287EDAD9AA22DC5661249CD1 (intptr_t ___dsp0, int32_t* ___numinputs1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::getNumInputs(System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getNumInputs_m17EB7E800DB0899F51E001D072001DB0B8A2DE62 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t* ___numinputs0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetNumOutputs(System.IntPtr,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetNumOutputs_m3E413BECA8EBB6DFF689C651B835785CB675502E (intptr_t ___dsp0, int32_t* ___numoutputs1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::getNumOutputs(System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getNumOutputs_m6005B3DF76ED411B0738BF9A5D3FC2C3D48FAE91 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t* ___numoutputs0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetInput(System.IntPtr,System.Int32,System.IntPtr&,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetInput_m7D05B21AD10A5B9D4A4E5E5B56325B2E7C180FDB (intptr_t ___dsp0, int32_t ___index1, intptr_t* ___input2, intptr_t* ___inputconnection3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::getInput(System.Int32,FMOD.DSP&,FMOD.DSPConnection&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getInput_mAFC8972172F73552AE7603A67D4D1BA8D758AEF5 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t ___index0, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * ___input1, DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * ___inputconnection2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetOutput(System.IntPtr,System.Int32,System.IntPtr&,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetOutput_m5CEA995BC5DC655A1323E03156925EB68C14B9B8 (intptr_t ___dsp0, int32_t ___index1, intptr_t* ___output2, intptr_t* ___outputconnection3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::getOutput(System.Int32,FMOD.DSP&,FMOD.DSPConnection&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getOutput_mA9C567019244838D0305029B1BA0B28400634D67 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t ___index0, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * ___output1, DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * ___outputconnection2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_SetActive(System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_SetActive_m915909B630467196E7B4CF120BDBB16A949D8E28 (intptr_t ___dsp0, bool ___active1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::setActive(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_setActive_mE684F83E35859C50C51BEEF4360D6D69A0CC4515 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, bool ___active0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetActive(System.IntPtr,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetActive_m4A3DDEA7078472C3DA2631E72114A8A7EC9972F9 (intptr_t ___dsp0, bool* ___active1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::getActive(System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getActive_m6706DB12BDF420AFF54E6A51515E2BE646D0A049 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, bool* ___active0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_SetBypass(System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_SetBypass_mE249DC5B09D7F7C00770E59EA6867A314F7DBEE8 (intptr_t ___dsp0, bool ___bypass1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::setBypass(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_setBypass_mF01332AEF182EE656B9833FF9298EA6C7BC063E8 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, bool ___bypass0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetBypass(System.IntPtr,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetBypass_m88C435546D01389753D9C98781682F70FC4FE7D9 (intptr_t ___dsp0, bool* ___bypass1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::getBypass(System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getBypass_m8476D9731D1A20AEE3C09C6C5EDEC325CE5B540F (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, bool* ___bypass0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_SetWetDryMix(System.IntPtr,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_SetWetDryMix_mF72E6B89B3BF8776DB24774A3C9FF5D9DCBDD962 (intptr_t ___dsp0, float ___prewet1, float ___postwet2, float ___dry3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::setWetDryMix(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_setWetDryMix_m6235FE15671423749CEDBA698E5F06206DD0B151 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, float ___prewet0, float ___postwet1, float ___dry2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetWetDryMix(System.IntPtr,System.Single&,System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetWetDryMix_mB8CDF4A44DFEFCE5CD83AA1C1DCB7E534C7BEF03 (intptr_t ___dsp0, float* ___prewet1, float* ___postwet2, float* ___dry3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::getWetDryMix(System.Single&,System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getWetDryMix_m90BAAF7E559A88DEA84583C21E8945362863627D (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, float* ___prewet0, float* ___postwet1, float* ___dry2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_SetChannelFormat(System.IntPtr,FMOD.CHANNELMASK,System.Int32,FMOD.SPEAKERMODE)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_SetChannelFormat_m814AAF407F7D3B54B2D0F33A276E16AF826F08B6 (intptr_t ___dsp0, uint32_t ___channelmask1, int32_t ___numchannels2, int32_t ___source_speakermode3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::setChannelFormat(FMOD.CHANNELMASK,System.Int32,FMOD.SPEAKERMODE)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_setChannelFormat_mB4AEF7CC21FB784C6A3704CF3BBD7610E158574A (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, uint32_t ___channelmask0, int32_t ___numchannels1, int32_t ___source_speakermode2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetChannelFormat(System.IntPtr,FMOD.CHANNELMASK&,System.Int32&,FMOD.SPEAKERMODE&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetChannelFormat_m0E5F85B7C7EFABB11816A8FB3FA04F125DA396AE (intptr_t ___dsp0, uint32_t* ___channelmask1, int32_t* ___numchannels2, int32_t* ___source_speakermode3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::getChannelFormat(FMOD.CHANNELMASK&,System.Int32&,FMOD.SPEAKERMODE&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getChannelFormat_m1737C81056144DDAE0A9EE790FC479916CF86342 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, uint32_t* ___channelmask0, int32_t* ___numchannels1, int32_t* ___source_speakermode2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetOutputChannelFormat(System.IntPtr,FMOD.CHANNELMASK,System.Int32,FMOD.SPEAKERMODE,FMOD.CHANNELMASK&,System.Int32&,FMOD.SPEAKERMODE&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetOutputChannelFormat_mF21D4F5D6649586EE14BA82AD96B9887FE54DB68 (intptr_t ___dsp0, uint32_t ___inmask1, int32_t ___inchannels2, int32_t ___inspeakermode3, uint32_t* ___outmask4, int32_t* ___outchannels5, int32_t* ___outspeakermode6, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::getOutputChannelFormat(FMOD.CHANNELMASK,System.Int32,FMOD.SPEAKERMODE,FMOD.CHANNELMASK&,System.Int32&,FMOD.SPEAKERMODE&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getOutputChannelFormat_m4D0AD74BAD90083268F098FF0CE41C7F039AF21A (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, uint32_t ___inmask0, int32_t ___inchannels1, int32_t ___inspeakermode2, uint32_t* ___outmask3, int32_t* ___outchannels4, int32_t* ___outspeakermode5, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_Reset(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_Reset_m62E908B773DB32D5CCD84249391F2937AE44BA8A (intptr_t ___dsp0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::reset()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_reset_mD4D11665122F405501176DE7F3C39BDD73FE404D (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_SetParameterFloat(System.IntPtr,System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_SetParameterFloat_m4D0DA2B3131EFB1297A90CAD955DD9AD18EBDC62 (intptr_t ___dsp0, int32_t ___index1, float ___value2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::setParameterFloat(System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_setParameterFloat_m9D0E87DA92CC31AC03FEBE32B31AAF1FA6EFEB89 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t ___index0, float ___value1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_SetParameterInt(System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_SetParameterInt_m7AA5F852BE211B947334D04C88DB1DF58757B19C (intptr_t ___dsp0, int32_t ___index1, int32_t ___value2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::setParameterInt(System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_setParameterInt_m530D5AFBA5EF8F3C41D07B7A553C0D29D48D2D0E (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t ___index0, int32_t ___value1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_SetParameterBool(System.IntPtr,System.Int32,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_SetParameterBool_m3ECE376D7EBEED0BC335D3D4C78D49232037032E (intptr_t ___dsp0, int32_t ___index1, bool ___value2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::setParameterBool(System.Int32,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_setParameterBool_mECADEC2F1BDC969505AE84A0476FD4D43C90CC95 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t ___index0, bool ___value1, const RuntimeMethod* method);
// System.IntPtr System.Runtime.InteropServices.Marshal::UnsafeAddrOfPinnedArrayElement<System.Byte>(!!0[],System.Int32)
inline intptr_t Marshal_UnsafeAddrOfPinnedArrayElement_TisByte_tF87C579059BD4633E6840EBBBEEF899C6E33EF07_m0F1B760143B0C170B0274CA8B82FE6C3F74D7962 (ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* ___arr0, int32_t ___index1, const RuntimeMethod* method)
{
	return ((  intptr_t (*) (ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821*, int32_t, const RuntimeMethod*))Marshal_UnsafeAddrOfPinnedArrayElement_TisByte_tF87C579059BD4633E6840EBBBEEF899C6E33EF07_m0F1B760143B0C170B0274CA8B82FE6C3F74D7962_gshared)(___arr0, ___index1, method);
}
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_SetParameterData(System.IntPtr,System.Int32,System.IntPtr,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_SetParameterData_mE6FC992345EE96F96DDC0B6EE7E27FF0B63A9F6F (intptr_t ___dsp0, int32_t ___index1, intptr_t ___data2, uint32_t ___length3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::setParameterData(System.Int32,System.Byte[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_setParameterData_m2ABDC24CA116256E4EAD46675812E55A3C1A376C (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t ___index0, ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* ___data1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetParameterFloat(System.IntPtr,System.Int32,System.Single&,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetParameterFloat_m8E943D26014468E67E93FF05B687ED4591C5A4AB (intptr_t ___dsp0, int32_t ___index1, float* ___value2, intptr_t ___valuestr3, int32_t ___valuestrlen4, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::getParameterFloat(System.Int32,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getParameterFloat_m0F47E864FA9E66C02B869531F6766B6B9A134902 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t ___index0, float* ___value1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetParameterInt(System.IntPtr,System.Int32,System.Int32&,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetParameterInt_mB8DE66385A79F4CAAE81CB9D4AFAFD71BA8E09C9 (intptr_t ___dsp0, int32_t ___index1, int32_t* ___value2, intptr_t ___valuestr3, int32_t ___valuestrlen4, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::getParameterInt(System.Int32,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getParameterInt_mEFE0D395D967F2A9C9E1F6982E61CC12437CC41A (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t ___index0, int32_t* ___value1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetParameterBool(System.IntPtr,System.Int32,System.Boolean&,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetParameterBool_m039E29840D8E1C7017AA796C9644B16CCD7FB04C (intptr_t ___dsp0, int32_t ___index1, bool* ___value2, intptr_t ___valuestr3, int32_t ___valuestrlen4, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::getParameterBool(System.Int32,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getParameterBool_mC2E00FAE1822A4405D180DE4D20A3556E177C8C1 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t ___index0, bool* ___value1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetParameterData(System.IntPtr,System.Int32,System.IntPtr&,System.UInt32&,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetParameterData_mA1E652788F483EF3D4D41CE1D4B0FE86BC0B8C8F (intptr_t ___dsp0, int32_t ___index1, intptr_t* ___data2, uint32_t* ___length3, intptr_t ___valuestr4, int32_t ___valuestrlen5, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::getParameterData(System.Int32,System.IntPtr&,System.UInt32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getParameterData_m317D997B9F2401DEB58AD919CFEA4F310FEBDAB2 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t ___index0, intptr_t* ___data1, uint32_t* ___length2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetNumParameters(System.IntPtr,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetNumParameters_mADD10DCF2DAD8A9B140E5E2DE3A90A327B40C0A0 (intptr_t ___dsp0, int32_t* ___numparams1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::getNumParameters(System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getNumParameters_mD14929BD95E9DA05DB43CA8EF19B744F33D95687 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t* ___numparams0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetParameterInfo(System.IntPtr,System.Int32,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetParameterInfo_mA89BE77ECC20197AE8AEEA3022896C6B575BDE5F (intptr_t ___dsp0, int32_t ___index1, intptr_t* ___desc2, const RuntimeMethod* method);
// !!0 System.Runtime.InteropServices.Marshal::PtrToStructure<FMOD.DSP_PARAMETER_DESC>(System.IntPtr)
inline DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06  Marshal_PtrToStructure_TisDSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06_m999834B093023B040AB51001C89E09D979EE1378 (intptr_t ___ptr0, const RuntimeMethod* method)
{
	return ((  DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06  (*) (intptr_t, const RuntimeMethod*))Marshal_PtrToStructure_TisDSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06_m999834B093023B040AB51001C89E09D979EE1378_gshared)(___ptr0, method);
}
// FMOD.RESULT FMOD.DSP::getParameterInfo(System.Int32,FMOD.DSP_PARAMETER_DESC&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getParameterInfo_m3691F7765AC1E3CEA0DC3D71E976CD89C25DFF97 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t ___index0, DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06 * ___desc1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetDataParameterIndex(System.IntPtr,System.Int32,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetDataParameterIndex_m0DA86256EF59C3D918EA64107CEE4905CC4268C8 (intptr_t ___dsp0, int32_t ___datatype1, int32_t* ___index2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::getDataParameterIndex(System.Int32,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getDataParameterIndex_m7BD84E7C81164772EAD8A88F0C57404190D31335 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t ___datatype0, int32_t* ___index1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_ShowConfigDialog(System.IntPtr,System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_ShowConfigDialog_mEE6BD5505EE745E95C9CBB843044863DCD160763 (intptr_t ___dsp0, intptr_t ___hwnd1, bool ___show2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::showConfigDialog(System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_showConfigDialog_m8EB6F73F72ED2F0C9E92440A9AA93DC5FC74BF2D (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, intptr_t ___hwnd0, bool ___show1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetInfo(System.IntPtr,System.IntPtr,System.UInt32&,System.Int32&,System.Int32&,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetInfo_mE37CF5E7D9414C0C665F4F3C4FA9A5F32FEBFD8D (intptr_t ___dsp0, intptr_t ___name1, uint32_t* ___version2, int32_t* ___channels3, int32_t* ___configwidth4, int32_t* ___configheight5, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::getInfo(System.String&,System.UInt32&,System.Int32&,System.Int32&,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getInfo_m53B878536F6955F09E3DABF1BE0A859506E9F14B (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, String_t** ___name0, uint32_t* ___version1, int32_t* ___channels2, int32_t* ___configwidth3, int32_t* ___configheight4, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::getInfo(System.UInt32&,System.Int32&,System.Int32&,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getInfo_m610C2DFF511AE47B571676D398136D93E7E6BA00 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, uint32_t* ___version0, int32_t* ___channels1, int32_t* ___configwidth2, int32_t* ___configheight3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetType(System.IntPtr,FMOD.DSP_TYPE&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetType_m1C3185A6A9DB19929D9D87EFDC9FAA3A1B329141 (intptr_t ___dsp0, int32_t* ___type1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::getType(FMOD.DSP_TYPE&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getType_m0839C4F285386870A5F3ABA7FCBB183AFBDA101C (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t* ___type0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetIdle(System.IntPtr,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetIdle_mF1AA204C6B79C1A66EF2AC5E8974233D6F0725D3 (intptr_t ___dsp0, bool* ___idle1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::getIdle(System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getIdle_m9F4C5EF6742CD80CFBABD5C95357C0690F407636 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, bool* ___idle0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_SetUserData(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_SetUserData_mF18EA0042E1FC3358793BCB4BCC595BC42A64A65 (intptr_t ___dsp0, intptr_t ___userdata1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::setUserData(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_setUserData_mCFBDA50D011FB0AC8F03E447FDD8BB64CC4066CA (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, intptr_t ___userdata0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetUserData(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetUserData_m16DBE4332F0FB870D8B9B60B08D261AC746B3630 (intptr_t ___dsp0, intptr_t* ___userdata1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::getUserData(System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getUserData_m71CCCEBA5A2E5A1FF179CED42D8DCBF941A9380F (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, intptr_t* ___userdata0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_SetMeteringEnabled(System.IntPtr,System.Boolean,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_SetMeteringEnabled_m908326F53614C8EB9383B4163E59C67C1F4CB216 (intptr_t ___dsp0, bool ___inputEnabled1, bool ___outputEnabled2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::setMeteringEnabled(System.Boolean,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_setMeteringEnabled_m87A7070223503235E484A9DBD83FF0C535068B66 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, bool ___inputEnabled0, bool ___outputEnabled1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetMeteringEnabled(System.IntPtr,System.Boolean&,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetMeteringEnabled_m97BA20CB98F0A57313717985BCC7AE11AA1CC0C4 (intptr_t ___dsp0, bool* ___inputEnabled1, bool* ___outputEnabled2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::getMeteringEnabled(System.Boolean&,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getMeteringEnabled_mECA5E69AB8907015B8C796FD9DF24AA4730CE615 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, bool* ___inputEnabled0, bool* ___outputEnabled1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetMeteringInfo(System.IntPtr,System.IntPtr,FMOD.DSP_METERING_INFO&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetMeteringInfo_mB23FC2AF6CE1EE8FBE05B8819282F3506862C645 (intptr_t ___dsp0, intptr_t ___zero1, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2 * ___outputInfo2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::getMeteringInfo(System.IntPtr,FMOD.DSP_METERING_INFO&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getMeteringInfo_m1449AFCA34CAE4E6A991A9E29FC42157C1C8DF4E (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, intptr_t ___zero0, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2 * ___outputInfo1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetMeteringInfo(System.IntPtr,FMOD.DSP_METERING_INFO&,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetMeteringInfo_m6CFF8C8845DF04759A605D3DC10D8387A5E60DBB (intptr_t ___dsp0, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2 * ___inputInfo1, intptr_t ___zero2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::getMeteringInfo(FMOD.DSP_METERING_INFO&,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getMeteringInfo_m786E8EB4C64F7D6A91D2E04144AFA42B27F12639 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2 * ___inputInfo0, intptr_t ___zero1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetMeteringInfo(System.IntPtr,FMOD.DSP_METERING_INFO&,FMOD.DSP_METERING_INFO&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetMeteringInfo_mDABF623A8D39DC6D2E546706890BA3445991CEC7 (intptr_t ___dsp0, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2 * ___inputInfo1, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2 * ___outputInfo2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::getMeteringInfo(FMOD.DSP_METERING_INFO&,FMOD.DSP_METERING_INFO&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getMeteringInfo_m646AEC600771956C53C71738D99EF48438ED21FA (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2 * ___inputInfo0, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2 * ___outputInfo1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetCPUUsage(System.IntPtr,System.UInt32&,System.UInt32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetCPUUsage_m5FCE4C319610B80DEF0EA9E366052405B307D52B (intptr_t ___dsp0, uint32_t* ___exclusive1, uint32_t* ___inclusive2, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSP::getCPUUsage(System.UInt32&,System.UInt32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getCPUUsage_m89E9B75C4CDD491E56482DE474F027455B814943 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, uint32_t* ___exclusive0, uint32_t* ___inclusive1, const RuntimeMethod* method);
// System.Boolean FMOD.DSP::hasHandle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool DSP_hasHandle_m868B7E09CABEDF221DF99B3E3E4CEEFBBAAB94F0 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, const RuntimeMethod* method);
// System.Void FMOD.DSP::clearHandle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_clearHandle_m0942228427F13F284BE689298BC0AA1A58C5E8DE (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSPConnection::FMOD5_DSPConnection_GetInput(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_FMOD5_DSPConnection_GetInput_m6EAE985F028B225ABA1235A78687FB4BD05C0ACC (intptr_t ___dspconnection0, intptr_t* ___input1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSPConnection::getInput(FMOD.DSP&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_getInput_mA3350ED7714CD3BE594747B359249F1F6405AD4E (DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * ___input0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSPConnection::FMOD5_DSPConnection_GetOutput(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_FMOD5_DSPConnection_GetOutput_m7CA5C878915F5E844E9639AAF4E09288717A22BE (intptr_t ___dspconnection0, intptr_t* ___output1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSPConnection::getOutput(FMOD.DSP&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_getOutput_m296C4EE42F0CD4BE029350D5D85FB004075C9C9E (DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * ___output0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSPConnection::FMOD5_DSPConnection_SetMix(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_FMOD5_DSPConnection_SetMix_m63C2B61DD4D37BA80A1A786F201140DECACAC580 (intptr_t ___dspconnection0, float ___volume1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSPConnection::setMix(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_setMix_m4ACFD76FA3C9882E53D8E7BD25086E83BBEF565D (DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * __this, float ___volume0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSPConnection::FMOD5_DSPConnection_GetMix(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_FMOD5_DSPConnection_GetMix_mB74345A347B3E1A0BB09EA8611484C5493465559 (intptr_t ___dspconnection0, float* ___volume1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSPConnection::getMix(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_getMix_m232A0F52EB0C900FEC89C96C117EAF7C3B2EDF1F (DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * __this, float* ___volume0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSPConnection::FMOD5_DSPConnection_SetMixMatrix(System.IntPtr,System.Single[],System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_FMOD5_DSPConnection_SetMixMatrix_mBC60B8BAB921E813950729158D19A4A6835F6515 (intptr_t ___dspconnection0, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix1, int32_t ___outchannels2, int32_t ___inchannels3, int32_t ___inchannel_hop4, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSPConnection::setMixMatrix(System.Single[],System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_setMixMatrix_m06ADF0750FB69801358B8FAE68D879489AA2EB3E (DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix0, int32_t ___outchannels1, int32_t ___inchannels2, int32_t ___inchannel_hop3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSPConnection::FMOD5_DSPConnection_GetMixMatrix(System.IntPtr,System.Single[],System.Int32&,System.Int32&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_FMOD5_DSPConnection_GetMixMatrix_mF1FB5F341DBBB89B77E126FE1720DDC80E267794 (intptr_t ___dspconnection0, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix1, int32_t* ___outchannels2, int32_t* ___inchannels3, int32_t ___inchannel_hop4, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSPConnection::getMixMatrix(System.Single[],System.Int32&,System.Int32&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_getMixMatrix_mFE1FE8A67FB043E16DE42C6BB068EAC93E9162B5 (DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix0, int32_t* ___outchannels1, int32_t* ___inchannels2, int32_t ___inchannel_hop3, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSPConnection::FMOD5_DSPConnection_GetType(System.IntPtr,FMOD.DSPCONNECTION_TYPE&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_FMOD5_DSPConnection_GetType_m45139DF446EC156D3AA8313B3AA8407AB08E82BF (intptr_t ___dspconnection0, int32_t* ___type1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSPConnection::getType(FMOD.DSPCONNECTION_TYPE&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_getType_m69E0A3D4BFE93D158BF85729BE0E110FEC1C0634 (DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * __this, int32_t* ___type0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSPConnection::FMOD5_DSPConnection_SetUserData(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_FMOD5_DSPConnection_SetUserData_mA36608B94C0E5DDF9F444857459CF5A4B4C498F5 (intptr_t ___dspconnection0, intptr_t ___userdata1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSPConnection::setUserData(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_setUserData_m0E2FA5E474C5570CDB8EC222784E90732B522B23 (DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * __this, intptr_t ___userdata0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSPConnection::FMOD5_DSPConnection_GetUserData(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_FMOD5_DSPConnection_GetUserData_m44997F1A4574F14C0B2F6DC2CC05FD28689919B0 (intptr_t ___dspconnection0, intptr_t* ___userdata1, const RuntimeMethod* method);
// FMOD.RESULT FMOD.DSPConnection::getUserData(System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_getUserData_m2EBA1E8D620FD5C6D55DA3DFBBD26C19420D3D76 (DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * __this, intptr_t* ___userdata0, const RuntimeMethod* method);
// System.Boolean FMOD.DSPConnection::hasHandle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool DSPConnection_hasHandle_m948CD8E4FC57BA00A23759F800ED31815DC3ADC2 (DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * __this, const RuntimeMethod* method);
// System.Void FMOD.DSPConnection::clearHandle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSPConnection_clearHandle_mB41639C441BCAFCEE499C99B8DC4887590E37D9F (DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * __this, const RuntimeMethod* method);
// System.Void System.Runtime.InteropServices.Marshal::Copy(System.IntPtr,System.Single[],System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Marshal_Copy_m21579DD470D4200BA5193A2CEF1BDB000C2E3256 (intptr_t ___source0, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___destination1, int32_t ___startIndex2, int32_t ___length3, const RuntimeMethod* method);
// System.Single[][] FMOD.DSP_PARAMETER_FFT::get_spectrum()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5DU5BU5D_tC2E25498616DDBEA3B03D43855DEBC928046392E* DSP_PARAMETER_FFT_get_spectrum_m70A9088ECAB92315C280AF324099F262B60AAE85 (DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A * __this, const RuntimeMethod* method);
// System.Int32 System.Math::Min(System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Math_Min_mC950438198519FB2B0260FCB91220847EE4BB525 (int32_t ___val10, int32_t ___val21, const RuntimeMethod* method);
// System.Void FMOD.DSP_PARAMETER_FFT::getSpectrum(System.Int32,System.Single[]&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_PARAMETER_FFT_getSpectrum_m5E564B8921A54BFBCA697CB2D392BA9CF30AA22A (DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A * __this, int32_t ___channel0, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5** ___buffer1, const RuntimeMethod* method);
// System.Void FMOD.DSP_PARAMETER_FFT::getSpectrum(System.Single[][]&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_PARAMETER_FFT_getSpectrum_m75C1E931F14E6CCC06A3510A4C97F67AA0B45F53 (DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A * __this, SingleU5BU5DU5BU5D_tC2E25498616DDBEA3B03D43855DEBC928046392E** ___buffer0, const RuntimeMethod* method);
// System.Byte[] FMOD.StringHelper/ThreadSafeEncoding::byteFromStringUTF8(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* ThreadSafeEncoding_byteFromStringUTF8_m1A81615A702C48A0CFF79C417D89286F2A40E22D (ThreadSafeEncoding_t9C88ACD17730C478FB2685CA11D1ABC64C1A1771 * __this, String_t* ___s0, const RuntimeMethod* method);
// FMOD.RESULT FMOD.Debug::FMOD5_Debug_Initialize(FMOD.DEBUG_FLAGS,FMOD.DEBUG_MODE,FMOD.DEBUG_CALLBACK,System.Byte[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Debug_FMOD5_Debug_Initialize_mABD6266CA028334D14C51969388B9A1D05727960 (uint32_t ___flags0, int32_t ___mode1, DEBUG_CALLBACK_t6A7351E61776A499C1A1BE9A923E71A21416E783 * ___callback2, ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* ___filename3, const RuntimeMethod* method);
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: FMOD.ASYNCREADINFO
IL2CPP_EXTERN_C void ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3_marshal_pinvoke(const ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3& unmarshaled, ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3_marshaled_pinvoke& marshaled)
{
	marshaled.___handle_0 = unmarshaled.get_handle_0();
	marshaled.___offset_1 = unmarshaled.get_offset_1();
	marshaled.___sizebytes_2 = unmarshaled.get_sizebytes_2();
	marshaled.___priority_3 = unmarshaled.get_priority_3();
	marshaled.___userdata_4 = unmarshaled.get_userdata_4();
	marshaled.___buffer_5 = unmarshaled.get_buffer_5();
	marshaled.___bytesread_6 = unmarshaled.get_bytesread_6();
	marshaled.___done_7 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_done_7()));
}
IL2CPP_EXTERN_C void ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3_marshal_pinvoke_back(const ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3_marshaled_pinvoke& marshaled, ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3_pinvoke_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	intptr_t unmarshaled_handle_temp_0;
	memset((&unmarshaled_handle_temp_0), 0, sizeof(unmarshaled_handle_temp_0));
	unmarshaled_handle_temp_0 = marshaled.___handle_0;
	unmarshaled.set_handle_0(unmarshaled_handle_temp_0);
	uint32_t unmarshaled_offset_temp_1 = 0;
	unmarshaled_offset_temp_1 = marshaled.___offset_1;
	unmarshaled.set_offset_1(unmarshaled_offset_temp_1);
	uint32_t unmarshaled_sizebytes_temp_2 = 0;
	unmarshaled_sizebytes_temp_2 = marshaled.___sizebytes_2;
	unmarshaled.set_sizebytes_2(unmarshaled_sizebytes_temp_2);
	int32_t unmarshaled_priority_temp_3 = 0;
	unmarshaled_priority_temp_3 = marshaled.___priority_3;
	unmarshaled.set_priority_3(unmarshaled_priority_temp_3);
	intptr_t unmarshaled_userdata_temp_4;
	memset((&unmarshaled_userdata_temp_4), 0, sizeof(unmarshaled_userdata_temp_4));
	unmarshaled_userdata_temp_4 = marshaled.___userdata_4;
	unmarshaled.set_userdata_4(unmarshaled_userdata_temp_4);
	intptr_t unmarshaled_buffer_temp_5;
	memset((&unmarshaled_buffer_temp_5), 0, sizeof(unmarshaled_buffer_temp_5));
	unmarshaled_buffer_temp_5 = marshaled.___buffer_5;
	unmarshaled.set_buffer_5(unmarshaled_buffer_temp_5);
	uint32_t unmarshaled_bytesread_temp_6 = 0;
	unmarshaled_bytesread_temp_6 = marshaled.___bytesread_6;
	unmarshaled.set_bytesread_6(unmarshaled_bytesread_temp_6);
	unmarshaled.set_done_7(il2cpp_codegen_marshal_function_ptr_to_delegate<FILE_ASYNCDONE_FUNC_tFBC4B11B35F53B2638037291E5304EA64DA389BC>(marshaled.___done_7, FILE_ASYNCDONE_FUNC_tFBC4B11B35F53B2638037291E5304EA64DA389BC_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: FMOD.ASYNCREADINFO
IL2CPP_EXTERN_C void ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3_marshal_pinvoke_cleanup(ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: FMOD.ASYNCREADINFO
IL2CPP_EXTERN_C void ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3_marshal_com(const ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3& unmarshaled, ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3_marshaled_com& marshaled)
{
	marshaled.___handle_0 = unmarshaled.get_handle_0();
	marshaled.___offset_1 = unmarshaled.get_offset_1();
	marshaled.___sizebytes_2 = unmarshaled.get_sizebytes_2();
	marshaled.___priority_3 = unmarshaled.get_priority_3();
	marshaled.___userdata_4 = unmarshaled.get_userdata_4();
	marshaled.___buffer_5 = unmarshaled.get_buffer_5();
	marshaled.___bytesread_6 = unmarshaled.get_bytesread_6();
	marshaled.___done_7 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_done_7()));
}
IL2CPP_EXTERN_C void ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3_marshal_com_back(const ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3_marshaled_com& marshaled, ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3_com_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	intptr_t unmarshaled_handle_temp_0;
	memset((&unmarshaled_handle_temp_0), 0, sizeof(unmarshaled_handle_temp_0));
	unmarshaled_handle_temp_0 = marshaled.___handle_0;
	unmarshaled.set_handle_0(unmarshaled_handle_temp_0);
	uint32_t unmarshaled_offset_temp_1 = 0;
	unmarshaled_offset_temp_1 = marshaled.___offset_1;
	unmarshaled.set_offset_1(unmarshaled_offset_temp_1);
	uint32_t unmarshaled_sizebytes_temp_2 = 0;
	unmarshaled_sizebytes_temp_2 = marshaled.___sizebytes_2;
	unmarshaled.set_sizebytes_2(unmarshaled_sizebytes_temp_2);
	int32_t unmarshaled_priority_temp_3 = 0;
	unmarshaled_priority_temp_3 = marshaled.___priority_3;
	unmarshaled.set_priority_3(unmarshaled_priority_temp_3);
	intptr_t unmarshaled_userdata_temp_4;
	memset((&unmarshaled_userdata_temp_4), 0, sizeof(unmarshaled_userdata_temp_4));
	unmarshaled_userdata_temp_4 = marshaled.___userdata_4;
	unmarshaled.set_userdata_4(unmarshaled_userdata_temp_4);
	intptr_t unmarshaled_buffer_temp_5;
	memset((&unmarshaled_buffer_temp_5), 0, sizeof(unmarshaled_buffer_temp_5));
	unmarshaled_buffer_temp_5 = marshaled.___buffer_5;
	unmarshaled.set_buffer_5(unmarshaled_buffer_temp_5);
	uint32_t unmarshaled_bytesread_temp_6 = 0;
	unmarshaled_bytesread_temp_6 = marshaled.___bytesread_6;
	unmarshaled.set_bytesread_6(unmarshaled_bytesread_temp_6);
	unmarshaled.set_done_7(il2cpp_codegen_marshal_function_ptr_to_delegate<FILE_ASYNCDONE_FUNC_tFBC4B11B35F53B2638037291E5304EA64DA389BC>(marshaled.___done_7, FILE_ASYNCDONE_FUNC_tFBC4B11B35F53B2638037291E5304EA64DA389BC_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: FMOD.ASYNCREADINFO
IL2CPP_EXTERN_C void ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3_marshal_com_cleanup(ASYNCREADINFO_tC092A26D6018686383A5E76EDDA5C158FC10A9F3_marshaled_com& marshaled)
{
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  float DelegatePInvokeWrapper_CB_3D_ROLLOFF_CALLBACK_t2CC01B82803744FC8D8A78F9670439F441EE82DD (CB_3D_ROLLOFF_CALLBACK_t2CC01B82803744FC8D8A78F9670439F441EE82DD * __this, intptr_t ___channelcontrol0, float ___distance1, const RuntimeMethod* method)
{
	typedef float (DEFAULT_CALL *PInvokeFunc)(intptr_t, float);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	float returnValue = il2cppPInvokeFunc(___channelcontrol0, ___distance1);

	return returnValue;
}
// System.Void FMOD.CB_3D_ROLLOFF_CALLBACK::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void CB_3D_ROLLOFF_CALLBACK__ctor_m78CB901886C463B5D6D582FC84305AD91729FEF3 (CB_3D_ROLLOFF_CALLBACK_t2CC01B82803744FC8D8A78F9670439F441EE82DD * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Single FMOD.CB_3D_ROLLOFF_CALLBACK::Invoke(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float CB_3D_ROLLOFF_CALLBACK_Invoke_mC97C15AF1B936C7D10D40A023C942EFC2C464685 (CB_3D_ROLLOFF_CALLBACK_t2CC01B82803744FC8D8A78F9670439F441EE82DD * __this, intptr_t ___channelcontrol0, float ___distance1, const RuntimeMethod* method)
{
	float result = 0.0f;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef float (*FunctionPointerType) (intptr_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___channelcontrol0, ___distance1, targetMethod);
			}
			else
			{
				// closed
				typedef float (*FunctionPointerType) (void*, intptr_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___channelcontrol0, ___distance1, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< float, intptr_t, float >::Invoke(targetMethod, targetThis, ___channelcontrol0, ___distance1);
					else
						result = GenericVirtFuncInvoker2< float, intptr_t, float >::Invoke(targetMethod, targetThis, ___channelcontrol0, ___distance1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< float, intptr_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___channelcontrol0, ___distance1);
					else
						result = VirtFuncInvoker2< float, intptr_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___channelcontrol0, ___distance1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef float (*FunctionPointerType) (RuntimeObject*, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___channelcontrol0) - 1), ___distance1, targetMethod);
				}
				typedef float (*FunctionPointerType) (void*, intptr_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___channelcontrol0, ___distance1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.CB_3D_ROLLOFF_CALLBACK::BeginInvoke(System.IntPtr,System.Single,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* CB_3D_ROLLOFF_CALLBACK_BeginInvoke_mA91DF6B5F12B1F1F3F4F91946C89E3F8E680B250 (CB_3D_ROLLOFF_CALLBACK_t2CC01B82803744FC8D8A78F9670439F441EE82DD * __this, intptr_t ___channelcontrol0, float ___distance1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (CB_3D_ROLLOFF_CALLBACK_BeginInvoke_mA91DF6B5F12B1F1F3F4F91946C89E3F8E680B250_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___channelcontrol0);
	__d_args[1] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___distance1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Single FMOD.CB_3D_ROLLOFF_CALLBACK::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float CB_3D_ROLLOFF_CALLBACK_EndInvoke_m07661C86D968E9CD2A20A729F62ACFFD0AF7A320 (CB_3D_ROLLOFF_CALLBACK_t2CC01B82803744FC8D8A78F9670439F441EE82DD * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(float*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_CHANNELCONTROL_CALLBACK_t95D7949ECD13791F21B2CC1501D3F741AB1C9CF5 (CHANNELCONTROL_CALLBACK_t95D7949ECD13791F21B2CC1501D3F741AB1C9CF5 * __this, intptr_t ___channelcontrol0, int32_t ___controltype1, int32_t ___callbacktype2, intptr_t ___commanddata13, intptr_t ___commanddata24, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(intptr_t, int32_t, int32_t, intptr_t, intptr_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___channelcontrol0, ___controltype1, ___callbacktype2, ___commanddata13, ___commanddata24);

	return returnValue;
}
// System.Void FMOD.CHANNELCONTROL_CALLBACK::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void CHANNELCONTROL_CALLBACK__ctor_m0CE2E30CBBA4CF207A4287F99134FCEAD5B81DE4 (CHANNELCONTROL_CALLBACK_t95D7949ECD13791F21B2CC1501D3F741AB1C9CF5 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.CHANNELCONTROL_CALLBACK::Invoke(System.IntPtr,FMOD.CHANNELCONTROL_TYPE,FMOD.CHANNELCONTROL_CALLBACK_TYPE,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CHANNELCONTROL_CALLBACK_Invoke_mC832D32A5B94F29AFA8E7F7A4BE1801959C649FC (CHANNELCONTROL_CALLBACK_t95D7949ECD13791F21B2CC1501D3F741AB1C9CF5 * __this, intptr_t ___channelcontrol0, int32_t ___controltype1, int32_t ___callbacktype2, intptr_t ___commanddata13, intptr_t ___commanddata24, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 5)
			{
				// open
				typedef int32_t (*FunctionPointerType) (intptr_t, int32_t, int32_t, intptr_t, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___channelcontrol0, ___controltype1, ___callbacktype2, ___commanddata13, ___commanddata24, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, intptr_t, int32_t, int32_t, intptr_t, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___channelcontrol0, ___controltype1, ___callbacktype2, ___commanddata13, ___commanddata24, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker5< int32_t, intptr_t, int32_t, int32_t, intptr_t, intptr_t >::Invoke(targetMethod, targetThis, ___channelcontrol0, ___controltype1, ___callbacktype2, ___commanddata13, ___commanddata24);
					else
						result = GenericVirtFuncInvoker5< int32_t, intptr_t, int32_t, int32_t, intptr_t, intptr_t >::Invoke(targetMethod, targetThis, ___channelcontrol0, ___controltype1, ___callbacktype2, ___commanddata13, ___commanddata24);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker5< int32_t, intptr_t, int32_t, int32_t, intptr_t, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___channelcontrol0, ___controltype1, ___callbacktype2, ___commanddata13, ___commanddata24);
					else
						result = VirtFuncInvoker5< int32_t, intptr_t, int32_t, int32_t, intptr_t, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___channelcontrol0, ___controltype1, ___callbacktype2, ___commanddata13, ___commanddata24);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, int32_t, intptr_t, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___channelcontrol0) - 1), ___controltype1, ___callbacktype2, ___commanddata13, ___commanddata24, targetMethod);
				}
				typedef int32_t (*FunctionPointerType) (void*, intptr_t, int32_t, int32_t, intptr_t, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___channelcontrol0, ___controltype1, ___callbacktype2, ___commanddata13, ___commanddata24, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.CHANNELCONTROL_CALLBACK::BeginInvoke(System.IntPtr,FMOD.CHANNELCONTROL_TYPE,FMOD.CHANNELCONTROL_CALLBACK_TYPE,System.IntPtr,System.IntPtr,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* CHANNELCONTROL_CALLBACK_BeginInvoke_m8ECD4B6045DDA00B388E67A02F4B8AE2773FDC9F (CHANNELCONTROL_CALLBACK_t95D7949ECD13791F21B2CC1501D3F741AB1C9CF5 * __this, intptr_t ___channelcontrol0, int32_t ___controltype1, int32_t ___callbacktype2, intptr_t ___commanddata13, intptr_t ___commanddata24, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback5, RuntimeObject * ___object6, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (CHANNELCONTROL_CALLBACK_BeginInvoke_m8ECD4B6045DDA00B388E67A02F4B8AE2773FDC9F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[6] = {0};
	__d_args[0] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___channelcontrol0);
	__d_args[1] = Box(CHANNELCONTROL_TYPE_t727DE3EF3D7858112AF66D3B6F2C202B9DAA295C_il2cpp_TypeInfo_var, &___controltype1);
	__d_args[2] = Box(CHANNELCONTROL_CALLBACK_TYPE_tD8A1A40A9AB52B763E8BA35E8C0D3E8FD4807085_il2cpp_TypeInfo_var, &___callbacktype2);
	__d_args[3] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___commanddata13);
	__d_args[4] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___commanddata24);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback5, (RuntimeObject*)___object6);
}
// FMOD.RESULT FMOD.CHANNELCONTROL_CALLBACK::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CHANNELCONTROL_CALLBACK_EndInvoke_m6809CA22AF3350DB5D9D113D028445F5917DB503 (CHANNELCONTROL_CALLBACK_t95D7949ECD13791F21B2CC1501D3F741AB1C9CF5 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void FMOD.CONSTANTS::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void CONSTANTS__ctor_m804883056D554A4EAE1817001865201A26B0FC29 (CONSTANTS_tB41B65F58BF62599BB23F9C1E78A32C0BBED3D2E * __this, const RuntimeMethod* method)
{
	{
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: FMOD.CREATESOUNDEXINFO
IL2CPP_EXTERN_C void CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225_marshal_pinvoke(const CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225& unmarshaled, CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225_marshaled_pinvoke& marshaled)
{
	marshaled.___cbsize_0 = unmarshaled.get_cbsize_0();
	marshaled.___length_1 = unmarshaled.get_length_1();
	marshaled.___fileoffset_2 = unmarshaled.get_fileoffset_2();
	marshaled.___numchannels_3 = unmarshaled.get_numchannels_3();
	marshaled.___defaultfrequency_4 = unmarshaled.get_defaultfrequency_4();
	marshaled.___format_5 = unmarshaled.get_format_5();
	marshaled.___decodebuffersize_6 = unmarshaled.get_decodebuffersize_6();
	marshaled.___initialsubsound_7 = unmarshaled.get_initialsubsound_7();
	marshaled.___numsubsounds_8 = unmarshaled.get_numsubsounds_8();
	marshaled.___inclusionlist_9 = unmarshaled.get_inclusionlist_9();
	marshaled.___inclusionlistnum_10 = unmarshaled.get_inclusionlistnum_10();
	marshaled.___pcmreadcallback_11 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_pcmreadcallback_11()));
	marshaled.___pcmsetposcallback_12 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_pcmsetposcallback_12()));
	marshaled.___nonblockcallback_13 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_nonblockcallback_13()));
	marshaled.___dlsname_14 = unmarshaled.get_dlsname_14();
	marshaled.___encryptionkey_15 = unmarshaled.get_encryptionkey_15();
	marshaled.___maxpolyphony_16 = unmarshaled.get_maxpolyphony_16();
	marshaled.___userdata_17 = unmarshaled.get_userdata_17();
	marshaled.___suggestedsoundtype_18 = unmarshaled.get_suggestedsoundtype_18();
	marshaled.___fileuseropen_19 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_fileuseropen_19()));
	marshaled.___fileuserclose_20 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_fileuserclose_20()));
	marshaled.___fileuserread_21 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_fileuserread_21()));
	marshaled.___fileuserseek_22 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_fileuserseek_22()));
	marshaled.___fileuserasyncread_23 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_fileuserasyncread_23()));
	marshaled.___fileuserasynccancel_24 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_fileuserasynccancel_24()));
	marshaled.___fileuserdata_25 = unmarshaled.get_fileuserdata_25();
	marshaled.___filebuffersize_26 = unmarshaled.get_filebuffersize_26();
	marshaled.___channelorder_27 = unmarshaled.get_channelorder_27();
	marshaled.___initialsoundgroup_28 = unmarshaled.get_initialsoundgroup_28();
	marshaled.___initialseekposition_29 = unmarshaled.get_initialseekposition_29();
	marshaled.___initialseekpostype_30 = unmarshaled.get_initialseekpostype_30();
	marshaled.___ignoresetfilesystem_31 = unmarshaled.get_ignoresetfilesystem_31();
	marshaled.___audioqueuepolicy_32 = unmarshaled.get_audioqueuepolicy_32();
	marshaled.___minmidigranularity_33 = unmarshaled.get_minmidigranularity_33();
	marshaled.___nonblockthreadid_34 = unmarshaled.get_nonblockthreadid_34();
	marshaled.___fsbguid_35 = unmarshaled.get_fsbguid_35();
}
IL2CPP_EXTERN_C void CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225_marshal_pinvoke_back(const CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225_marshaled_pinvoke& marshaled, CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225_pinvoke_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t unmarshaled_cbsize_temp_0 = 0;
	unmarshaled_cbsize_temp_0 = marshaled.___cbsize_0;
	unmarshaled.set_cbsize_0(unmarshaled_cbsize_temp_0);
	uint32_t unmarshaled_length_temp_1 = 0;
	unmarshaled_length_temp_1 = marshaled.___length_1;
	unmarshaled.set_length_1(unmarshaled_length_temp_1);
	uint32_t unmarshaled_fileoffset_temp_2 = 0;
	unmarshaled_fileoffset_temp_2 = marshaled.___fileoffset_2;
	unmarshaled.set_fileoffset_2(unmarshaled_fileoffset_temp_2);
	int32_t unmarshaled_numchannels_temp_3 = 0;
	unmarshaled_numchannels_temp_3 = marshaled.___numchannels_3;
	unmarshaled.set_numchannels_3(unmarshaled_numchannels_temp_3);
	int32_t unmarshaled_defaultfrequency_temp_4 = 0;
	unmarshaled_defaultfrequency_temp_4 = marshaled.___defaultfrequency_4;
	unmarshaled.set_defaultfrequency_4(unmarshaled_defaultfrequency_temp_4);
	int32_t unmarshaled_format_temp_5 = 0;
	unmarshaled_format_temp_5 = marshaled.___format_5;
	unmarshaled.set_format_5(unmarshaled_format_temp_5);
	uint32_t unmarshaled_decodebuffersize_temp_6 = 0;
	unmarshaled_decodebuffersize_temp_6 = marshaled.___decodebuffersize_6;
	unmarshaled.set_decodebuffersize_6(unmarshaled_decodebuffersize_temp_6);
	int32_t unmarshaled_initialsubsound_temp_7 = 0;
	unmarshaled_initialsubsound_temp_7 = marshaled.___initialsubsound_7;
	unmarshaled.set_initialsubsound_7(unmarshaled_initialsubsound_temp_7);
	int32_t unmarshaled_numsubsounds_temp_8 = 0;
	unmarshaled_numsubsounds_temp_8 = marshaled.___numsubsounds_8;
	unmarshaled.set_numsubsounds_8(unmarshaled_numsubsounds_temp_8);
	intptr_t unmarshaled_inclusionlist_temp_9;
	memset((&unmarshaled_inclusionlist_temp_9), 0, sizeof(unmarshaled_inclusionlist_temp_9));
	unmarshaled_inclusionlist_temp_9 = marshaled.___inclusionlist_9;
	unmarshaled.set_inclusionlist_9(unmarshaled_inclusionlist_temp_9);
	int32_t unmarshaled_inclusionlistnum_temp_10 = 0;
	unmarshaled_inclusionlistnum_temp_10 = marshaled.___inclusionlistnum_10;
	unmarshaled.set_inclusionlistnum_10(unmarshaled_inclusionlistnum_temp_10);
	unmarshaled.set_pcmreadcallback_11(il2cpp_codegen_marshal_function_ptr_to_delegate<SOUND_PCMREAD_CALLBACK_t73F82A176E129053584188355C74C98D216AF44B>(marshaled.___pcmreadcallback_11, SOUND_PCMREAD_CALLBACK_t73F82A176E129053584188355C74C98D216AF44B_il2cpp_TypeInfo_var));
	unmarshaled.set_pcmsetposcallback_12(il2cpp_codegen_marshal_function_ptr_to_delegate<SOUND_PCMSETPOS_CALLBACK_t2CA9012A6D4A7E750DC9C96F698AD9F4FA1175DD>(marshaled.___pcmsetposcallback_12, SOUND_PCMSETPOS_CALLBACK_t2CA9012A6D4A7E750DC9C96F698AD9F4FA1175DD_il2cpp_TypeInfo_var));
	unmarshaled.set_nonblockcallback_13(il2cpp_codegen_marshal_function_ptr_to_delegate<SOUND_NONBLOCK_CALLBACK_tFDA9F7F30FE6A3D367ACB86746046DD480BC45CE>(marshaled.___nonblockcallback_13, SOUND_NONBLOCK_CALLBACK_tFDA9F7F30FE6A3D367ACB86746046DD480BC45CE_il2cpp_TypeInfo_var));
	intptr_t unmarshaled_dlsname_temp_14;
	memset((&unmarshaled_dlsname_temp_14), 0, sizeof(unmarshaled_dlsname_temp_14));
	unmarshaled_dlsname_temp_14 = marshaled.___dlsname_14;
	unmarshaled.set_dlsname_14(unmarshaled_dlsname_temp_14);
	intptr_t unmarshaled_encryptionkey_temp_15;
	memset((&unmarshaled_encryptionkey_temp_15), 0, sizeof(unmarshaled_encryptionkey_temp_15));
	unmarshaled_encryptionkey_temp_15 = marshaled.___encryptionkey_15;
	unmarshaled.set_encryptionkey_15(unmarshaled_encryptionkey_temp_15);
	int32_t unmarshaled_maxpolyphony_temp_16 = 0;
	unmarshaled_maxpolyphony_temp_16 = marshaled.___maxpolyphony_16;
	unmarshaled.set_maxpolyphony_16(unmarshaled_maxpolyphony_temp_16);
	intptr_t unmarshaled_userdata_temp_17;
	memset((&unmarshaled_userdata_temp_17), 0, sizeof(unmarshaled_userdata_temp_17));
	unmarshaled_userdata_temp_17 = marshaled.___userdata_17;
	unmarshaled.set_userdata_17(unmarshaled_userdata_temp_17);
	int32_t unmarshaled_suggestedsoundtype_temp_18 = 0;
	unmarshaled_suggestedsoundtype_temp_18 = marshaled.___suggestedsoundtype_18;
	unmarshaled.set_suggestedsoundtype_18(unmarshaled_suggestedsoundtype_temp_18);
	unmarshaled.set_fileuseropen_19(il2cpp_codegen_marshal_function_ptr_to_delegate<FILE_OPEN_CALLBACK_t7A7741CFAFE85C3A76DBEE69DF461E6D96AEF17C>(marshaled.___fileuseropen_19, FILE_OPEN_CALLBACK_t7A7741CFAFE85C3A76DBEE69DF461E6D96AEF17C_il2cpp_TypeInfo_var));
	unmarshaled.set_fileuserclose_20(il2cpp_codegen_marshal_function_ptr_to_delegate<FILE_CLOSE_CALLBACK_tA347FC35A3EDE3EA674838B9302CA7847B2D0A59>(marshaled.___fileuserclose_20, FILE_CLOSE_CALLBACK_tA347FC35A3EDE3EA674838B9302CA7847B2D0A59_il2cpp_TypeInfo_var));
	unmarshaled.set_fileuserread_21(il2cpp_codegen_marshal_function_ptr_to_delegate<FILE_READ_CALLBACK_t98BD5E40D0AC284218606A892F750513E9403C1C>(marshaled.___fileuserread_21, FILE_READ_CALLBACK_t98BD5E40D0AC284218606A892F750513E9403C1C_il2cpp_TypeInfo_var));
	unmarshaled.set_fileuserseek_22(il2cpp_codegen_marshal_function_ptr_to_delegate<FILE_SEEK_CALLBACK_tCA1713616668F850F4F7CB185CFE66D7728365A1>(marshaled.___fileuserseek_22, FILE_SEEK_CALLBACK_tCA1713616668F850F4F7CB185CFE66D7728365A1_il2cpp_TypeInfo_var));
	unmarshaled.set_fileuserasyncread_23(il2cpp_codegen_marshal_function_ptr_to_delegate<FILE_ASYNCREAD_CALLBACK_tC94093AEE8D56351A512BB4239C46642E969F9D3>(marshaled.___fileuserasyncread_23, FILE_ASYNCREAD_CALLBACK_tC94093AEE8D56351A512BB4239C46642E969F9D3_il2cpp_TypeInfo_var));
	unmarshaled.set_fileuserasynccancel_24(il2cpp_codegen_marshal_function_ptr_to_delegate<FILE_ASYNCCANCEL_CALLBACK_t6FB6AA5C72C18AE5B41EDCA973157115A2EAEF3D>(marshaled.___fileuserasynccancel_24, FILE_ASYNCCANCEL_CALLBACK_t6FB6AA5C72C18AE5B41EDCA973157115A2EAEF3D_il2cpp_TypeInfo_var));
	intptr_t unmarshaled_fileuserdata_temp_25;
	memset((&unmarshaled_fileuserdata_temp_25), 0, sizeof(unmarshaled_fileuserdata_temp_25));
	unmarshaled_fileuserdata_temp_25 = marshaled.___fileuserdata_25;
	unmarshaled.set_fileuserdata_25(unmarshaled_fileuserdata_temp_25);
	int32_t unmarshaled_filebuffersize_temp_26 = 0;
	unmarshaled_filebuffersize_temp_26 = marshaled.___filebuffersize_26;
	unmarshaled.set_filebuffersize_26(unmarshaled_filebuffersize_temp_26);
	int32_t unmarshaled_channelorder_temp_27 = 0;
	unmarshaled_channelorder_temp_27 = marshaled.___channelorder_27;
	unmarshaled.set_channelorder_27(unmarshaled_channelorder_temp_27);
	intptr_t unmarshaled_initialsoundgroup_temp_28;
	memset((&unmarshaled_initialsoundgroup_temp_28), 0, sizeof(unmarshaled_initialsoundgroup_temp_28));
	unmarshaled_initialsoundgroup_temp_28 = marshaled.___initialsoundgroup_28;
	unmarshaled.set_initialsoundgroup_28(unmarshaled_initialsoundgroup_temp_28);
	uint32_t unmarshaled_initialseekposition_temp_29 = 0;
	unmarshaled_initialseekposition_temp_29 = marshaled.___initialseekposition_29;
	unmarshaled.set_initialseekposition_29(unmarshaled_initialseekposition_temp_29);
	uint32_t unmarshaled_initialseekpostype_temp_30 = 0;
	unmarshaled_initialseekpostype_temp_30 = marshaled.___initialseekpostype_30;
	unmarshaled.set_initialseekpostype_30(unmarshaled_initialseekpostype_temp_30);
	int32_t unmarshaled_ignoresetfilesystem_temp_31 = 0;
	unmarshaled_ignoresetfilesystem_temp_31 = marshaled.___ignoresetfilesystem_31;
	unmarshaled.set_ignoresetfilesystem_31(unmarshaled_ignoresetfilesystem_temp_31);
	uint32_t unmarshaled_audioqueuepolicy_temp_32 = 0;
	unmarshaled_audioqueuepolicy_temp_32 = marshaled.___audioqueuepolicy_32;
	unmarshaled.set_audioqueuepolicy_32(unmarshaled_audioqueuepolicy_temp_32);
	uint32_t unmarshaled_minmidigranularity_temp_33 = 0;
	unmarshaled_minmidigranularity_temp_33 = marshaled.___minmidigranularity_33;
	unmarshaled.set_minmidigranularity_33(unmarshaled_minmidigranularity_temp_33);
	int32_t unmarshaled_nonblockthreadid_temp_34 = 0;
	unmarshaled_nonblockthreadid_temp_34 = marshaled.___nonblockthreadid_34;
	unmarshaled.set_nonblockthreadid_34(unmarshaled_nonblockthreadid_temp_34);
	intptr_t unmarshaled_fsbguid_temp_35;
	memset((&unmarshaled_fsbguid_temp_35), 0, sizeof(unmarshaled_fsbguid_temp_35));
	unmarshaled_fsbguid_temp_35 = marshaled.___fsbguid_35;
	unmarshaled.set_fsbguid_35(unmarshaled_fsbguid_temp_35);
}
// Conversion method for clean up from marshalling of: FMOD.CREATESOUNDEXINFO
IL2CPP_EXTERN_C void CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225_marshal_pinvoke_cleanup(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: FMOD.CREATESOUNDEXINFO
IL2CPP_EXTERN_C void CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225_marshal_com(const CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225& unmarshaled, CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225_marshaled_com& marshaled)
{
	marshaled.___cbsize_0 = unmarshaled.get_cbsize_0();
	marshaled.___length_1 = unmarshaled.get_length_1();
	marshaled.___fileoffset_2 = unmarshaled.get_fileoffset_2();
	marshaled.___numchannels_3 = unmarshaled.get_numchannels_3();
	marshaled.___defaultfrequency_4 = unmarshaled.get_defaultfrequency_4();
	marshaled.___format_5 = unmarshaled.get_format_5();
	marshaled.___decodebuffersize_6 = unmarshaled.get_decodebuffersize_6();
	marshaled.___initialsubsound_7 = unmarshaled.get_initialsubsound_7();
	marshaled.___numsubsounds_8 = unmarshaled.get_numsubsounds_8();
	marshaled.___inclusionlist_9 = unmarshaled.get_inclusionlist_9();
	marshaled.___inclusionlistnum_10 = unmarshaled.get_inclusionlistnum_10();
	marshaled.___pcmreadcallback_11 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_pcmreadcallback_11()));
	marshaled.___pcmsetposcallback_12 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_pcmsetposcallback_12()));
	marshaled.___nonblockcallback_13 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_nonblockcallback_13()));
	marshaled.___dlsname_14 = unmarshaled.get_dlsname_14();
	marshaled.___encryptionkey_15 = unmarshaled.get_encryptionkey_15();
	marshaled.___maxpolyphony_16 = unmarshaled.get_maxpolyphony_16();
	marshaled.___userdata_17 = unmarshaled.get_userdata_17();
	marshaled.___suggestedsoundtype_18 = unmarshaled.get_suggestedsoundtype_18();
	marshaled.___fileuseropen_19 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_fileuseropen_19()));
	marshaled.___fileuserclose_20 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_fileuserclose_20()));
	marshaled.___fileuserread_21 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_fileuserread_21()));
	marshaled.___fileuserseek_22 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_fileuserseek_22()));
	marshaled.___fileuserasyncread_23 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_fileuserasyncread_23()));
	marshaled.___fileuserasynccancel_24 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_fileuserasynccancel_24()));
	marshaled.___fileuserdata_25 = unmarshaled.get_fileuserdata_25();
	marshaled.___filebuffersize_26 = unmarshaled.get_filebuffersize_26();
	marshaled.___channelorder_27 = unmarshaled.get_channelorder_27();
	marshaled.___initialsoundgroup_28 = unmarshaled.get_initialsoundgroup_28();
	marshaled.___initialseekposition_29 = unmarshaled.get_initialseekposition_29();
	marshaled.___initialseekpostype_30 = unmarshaled.get_initialseekpostype_30();
	marshaled.___ignoresetfilesystem_31 = unmarshaled.get_ignoresetfilesystem_31();
	marshaled.___audioqueuepolicy_32 = unmarshaled.get_audioqueuepolicy_32();
	marshaled.___minmidigranularity_33 = unmarshaled.get_minmidigranularity_33();
	marshaled.___nonblockthreadid_34 = unmarshaled.get_nonblockthreadid_34();
	marshaled.___fsbguid_35 = unmarshaled.get_fsbguid_35();
}
IL2CPP_EXTERN_C void CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225_marshal_com_back(const CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225_marshaled_com& marshaled, CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225_com_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t unmarshaled_cbsize_temp_0 = 0;
	unmarshaled_cbsize_temp_0 = marshaled.___cbsize_0;
	unmarshaled.set_cbsize_0(unmarshaled_cbsize_temp_0);
	uint32_t unmarshaled_length_temp_1 = 0;
	unmarshaled_length_temp_1 = marshaled.___length_1;
	unmarshaled.set_length_1(unmarshaled_length_temp_1);
	uint32_t unmarshaled_fileoffset_temp_2 = 0;
	unmarshaled_fileoffset_temp_2 = marshaled.___fileoffset_2;
	unmarshaled.set_fileoffset_2(unmarshaled_fileoffset_temp_2);
	int32_t unmarshaled_numchannels_temp_3 = 0;
	unmarshaled_numchannels_temp_3 = marshaled.___numchannels_3;
	unmarshaled.set_numchannels_3(unmarshaled_numchannels_temp_3);
	int32_t unmarshaled_defaultfrequency_temp_4 = 0;
	unmarshaled_defaultfrequency_temp_4 = marshaled.___defaultfrequency_4;
	unmarshaled.set_defaultfrequency_4(unmarshaled_defaultfrequency_temp_4);
	int32_t unmarshaled_format_temp_5 = 0;
	unmarshaled_format_temp_5 = marshaled.___format_5;
	unmarshaled.set_format_5(unmarshaled_format_temp_5);
	uint32_t unmarshaled_decodebuffersize_temp_6 = 0;
	unmarshaled_decodebuffersize_temp_6 = marshaled.___decodebuffersize_6;
	unmarshaled.set_decodebuffersize_6(unmarshaled_decodebuffersize_temp_6);
	int32_t unmarshaled_initialsubsound_temp_7 = 0;
	unmarshaled_initialsubsound_temp_7 = marshaled.___initialsubsound_7;
	unmarshaled.set_initialsubsound_7(unmarshaled_initialsubsound_temp_7);
	int32_t unmarshaled_numsubsounds_temp_8 = 0;
	unmarshaled_numsubsounds_temp_8 = marshaled.___numsubsounds_8;
	unmarshaled.set_numsubsounds_8(unmarshaled_numsubsounds_temp_8);
	intptr_t unmarshaled_inclusionlist_temp_9;
	memset((&unmarshaled_inclusionlist_temp_9), 0, sizeof(unmarshaled_inclusionlist_temp_9));
	unmarshaled_inclusionlist_temp_9 = marshaled.___inclusionlist_9;
	unmarshaled.set_inclusionlist_9(unmarshaled_inclusionlist_temp_9);
	int32_t unmarshaled_inclusionlistnum_temp_10 = 0;
	unmarshaled_inclusionlistnum_temp_10 = marshaled.___inclusionlistnum_10;
	unmarshaled.set_inclusionlistnum_10(unmarshaled_inclusionlistnum_temp_10);
	unmarshaled.set_pcmreadcallback_11(il2cpp_codegen_marshal_function_ptr_to_delegate<SOUND_PCMREAD_CALLBACK_t73F82A176E129053584188355C74C98D216AF44B>(marshaled.___pcmreadcallback_11, SOUND_PCMREAD_CALLBACK_t73F82A176E129053584188355C74C98D216AF44B_il2cpp_TypeInfo_var));
	unmarshaled.set_pcmsetposcallback_12(il2cpp_codegen_marshal_function_ptr_to_delegate<SOUND_PCMSETPOS_CALLBACK_t2CA9012A6D4A7E750DC9C96F698AD9F4FA1175DD>(marshaled.___pcmsetposcallback_12, SOUND_PCMSETPOS_CALLBACK_t2CA9012A6D4A7E750DC9C96F698AD9F4FA1175DD_il2cpp_TypeInfo_var));
	unmarshaled.set_nonblockcallback_13(il2cpp_codegen_marshal_function_ptr_to_delegate<SOUND_NONBLOCK_CALLBACK_tFDA9F7F30FE6A3D367ACB86746046DD480BC45CE>(marshaled.___nonblockcallback_13, SOUND_NONBLOCK_CALLBACK_tFDA9F7F30FE6A3D367ACB86746046DD480BC45CE_il2cpp_TypeInfo_var));
	intptr_t unmarshaled_dlsname_temp_14;
	memset((&unmarshaled_dlsname_temp_14), 0, sizeof(unmarshaled_dlsname_temp_14));
	unmarshaled_dlsname_temp_14 = marshaled.___dlsname_14;
	unmarshaled.set_dlsname_14(unmarshaled_dlsname_temp_14);
	intptr_t unmarshaled_encryptionkey_temp_15;
	memset((&unmarshaled_encryptionkey_temp_15), 0, sizeof(unmarshaled_encryptionkey_temp_15));
	unmarshaled_encryptionkey_temp_15 = marshaled.___encryptionkey_15;
	unmarshaled.set_encryptionkey_15(unmarshaled_encryptionkey_temp_15);
	int32_t unmarshaled_maxpolyphony_temp_16 = 0;
	unmarshaled_maxpolyphony_temp_16 = marshaled.___maxpolyphony_16;
	unmarshaled.set_maxpolyphony_16(unmarshaled_maxpolyphony_temp_16);
	intptr_t unmarshaled_userdata_temp_17;
	memset((&unmarshaled_userdata_temp_17), 0, sizeof(unmarshaled_userdata_temp_17));
	unmarshaled_userdata_temp_17 = marshaled.___userdata_17;
	unmarshaled.set_userdata_17(unmarshaled_userdata_temp_17);
	int32_t unmarshaled_suggestedsoundtype_temp_18 = 0;
	unmarshaled_suggestedsoundtype_temp_18 = marshaled.___suggestedsoundtype_18;
	unmarshaled.set_suggestedsoundtype_18(unmarshaled_suggestedsoundtype_temp_18);
	unmarshaled.set_fileuseropen_19(il2cpp_codegen_marshal_function_ptr_to_delegate<FILE_OPEN_CALLBACK_t7A7741CFAFE85C3A76DBEE69DF461E6D96AEF17C>(marshaled.___fileuseropen_19, FILE_OPEN_CALLBACK_t7A7741CFAFE85C3A76DBEE69DF461E6D96AEF17C_il2cpp_TypeInfo_var));
	unmarshaled.set_fileuserclose_20(il2cpp_codegen_marshal_function_ptr_to_delegate<FILE_CLOSE_CALLBACK_tA347FC35A3EDE3EA674838B9302CA7847B2D0A59>(marshaled.___fileuserclose_20, FILE_CLOSE_CALLBACK_tA347FC35A3EDE3EA674838B9302CA7847B2D0A59_il2cpp_TypeInfo_var));
	unmarshaled.set_fileuserread_21(il2cpp_codegen_marshal_function_ptr_to_delegate<FILE_READ_CALLBACK_t98BD5E40D0AC284218606A892F750513E9403C1C>(marshaled.___fileuserread_21, FILE_READ_CALLBACK_t98BD5E40D0AC284218606A892F750513E9403C1C_il2cpp_TypeInfo_var));
	unmarshaled.set_fileuserseek_22(il2cpp_codegen_marshal_function_ptr_to_delegate<FILE_SEEK_CALLBACK_tCA1713616668F850F4F7CB185CFE66D7728365A1>(marshaled.___fileuserseek_22, FILE_SEEK_CALLBACK_tCA1713616668F850F4F7CB185CFE66D7728365A1_il2cpp_TypeInfo_var));
	unmarshaled.set_fileuserasyncread_23(il2cpp_codegen_marshal_function_ptr_to_delegate<FILE_ASYNCREAD_CALLBACK_tC94093AEE8D56351A512BB4239C46642E969F9D3>(marshaled.___fileuserasyncread_23, FILE_ASYNCREAD_CALLBACK_tC94093AEE8D56351A512BB4239C46642E969F9D3_il2cpp_TypeInfo_var));
	unmarshaled.set_fileuserasynccancel_24(il2cpp_codegen_marshal_function_ptr_to_delegate<FILE_ASYNCCANCEL_CALLBACK_t6FB6AA5C72C18AE5B41EDCA973157115A2EAEF3D>(marshaled.___fileuserasynccancel_24, FILE_ASYNCCANCEL_CALLBACK_t6FB6AA5C72C18AE5B41EDCA973157115A2EAEF3D_il2cpp_TypeInfo_var));
	intptr_t unmarshaled_fileuserdata_temp_25;
	memset((&unmarshaled_fileuserdata_temp_25), 0, sizeof(unmarshaled_fileuserdata_temp_25));
	unmarshaled_fileuserdata_temp_25 = marshaled.___fileuserdata_25;
	unmarshaled.set_fileuserdata_25(unmarshaled_fileuserdata_temp_25);
	int32_t unmarshaled_filebuffersize_temp_26 = 0;
	unmarshaled_filebuffersize_temp_26 = marshaled.___filebuffersize_26;
	unmarshaled.set_filebuffersize_26(unmarshaled_filebuffersize_temp_26);
	int32_t unmarshaled_channelorder_temp_27 = 0;
	unmarshaled_channelorder_temp_27 = marshaled.___channelorder_27;
	unmarshaled.set_channelorder_27(unmarshaled_channelorder_temp_27);
	intptr_t unmarshaled_initialsoundgroup_temp_28;
	memset((&unmarshaled_initialsoundgroup_temp_28), 0, sizeof(unmarshaled_initialsoundgroup_temp_28));
	unmarshaled_initialsoundgroup_temp_28 = marshaled.___initialsoundgroup_28;
	unmarshaled.set_initialsoundgroup_28(unmarshaled_initialsoundgroup_temp_28);
	uint32_t unmarshaled_initialseekposition_temp_29 = 0;
	unmarshaled_initialseekposition_temp_29 = marshaled.___initialseekposition_29;
	unmarshaled.set_initialseekposition_29(unmarshaled_initialseekposition_temp_29);
	uint32_t unmarshaled_initialseekpostype_temp_30 = 0;
	unmarshaled_initialseekpostype_temp_30 = marshaled.___initialseekpostype_30;
	unmarshaled.set_initialseekpostype_30(unmarshaled_initialseekpostype_temp_30);
	int32_t unmarshaled_ignoresetfilesystem_temp_31 = 0;
	unmarshaled_ignoresetfilesystem_temp_31 = marshaled.___ignoresetfilesystem_31;
	unmarshaled.set_ignoresetfilesystem_31(unmarshaled_ignoresetfilesystem_temp_31);
	uint32_t unmarshaled_audioqueuepolicy_temp_32 = 0;
	unmarshaled_audioqueuepolicy_temp_32 = marshaled.___audioqueuepolicy_32;
	unmarshaled.set_audioqueuepolicy_32(unmarshaled_audioqueuepolicy_temp_32);
	uint32_t unmarshaled_minmidigranularity_temp_33 = 0;
	unmarshaled_minmidigranularity_temp_33 = marshaled.___minmidigranularity_33;
	unmarshaled.set_minmidigranularity_33(unmarshaled_minmidigranularity_temp_33);
	int32_t unmarshaled_nonblockthreadid_temp_34 = 0;
	unmarshaled_nonblockthreadid_temp_34 = marshaled.___nonblockthreadid_34;
	unmarshaled.set_nonblockthreadid_34(unmarshaled_nonblockthreadid_temp_34);
	intptr_t unmarshaled_fsbguid_temp_35;
	memset((&unmarshaled_fsbguid_temp_35), 0, sizeof(unmarshaled_fsbguid_temp_35));
	unmarshaled_fsbguid_temp_35 = marshaled.___fsbguid_35;
	unmarshaled.set_fsbguid_35(unmarshaled_fsbguid_temp_35);
}
// Conversion method for clean up from marshalling of: FMOD.CREATESOUNDEXINFO
IL2CPP_EXTERN_C void CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225_marshal_com_cleanup(CREATESOUNDEXINFO_tC770D176343C9CE0C56BF92B4F63392397560225_marshaled_com& marshaled)
{
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// FMOD.RESULT FMOD.Channel::setFrequency(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setFrequency_m49421B7232BC2851F412AE76DED466BD31D8785B (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float ___frequency0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_SetFrequency(this.handle, frequency);
		intptr_t L_0 = __this->get_handle_0();
		float L_1 = ___frequency0;
		int32_t L_2 = Channel_FMOD5_Channel_SetFrequency_mAEBAB3BEDE5C66915F84F0AC272C00C2BDC67EAE((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_setFrequency_m49421B7232BC2851F412AE76DED466BD31D8785B_AdjustorThunk (RuntimeObject * __this, float ___frequency0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_setFrequency_m49421B7232BC2851F412AE76DED466BD31D8785B(_thisAdjusted, ___frequency0, method);
}
// FMOD.RESULT FMOD.Channel::getFrequency(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getFrequency_mFF8117B650941A78706D0ADD44C42830ACD90E1D (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float* ___frequency0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_GetFrequency(this.handle, out frequency);
		intptr_t L_0 = __this->get_handle_0();
		float* L_1 = ___frequency0;
		int32_t L_2 = Channel_FMOD5_Channel_GetFrequency_m35EDEE84872CC9F99C20A047D7FF728BC9CAE4A9((intptr_t)L_0, (float*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_getFrequency_mFF8117B650941A78706D0ADD44C42830ACD90E1D_AdjustorThunk (RuntimeObject * __this, float* ___frequency0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_getFrequency_mFF8117B650941A78706D0ADD44C42830ACD90E1D(_thisAdjusted, ___frequency0, method);
}
// FMOD.RESULT FMOD.Channel::setPriority(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setPriority_mD69F03908FAD99F595717E97BE4531949D4B185C (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, int32_t ___priority0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_SetPriority(this.handle, priority);
		intptr_t L_0 = __this->get_handle_0();
		int32_t L_1 = ___priority0;
		int32_t L_2 = Channel_FMOD5_Channel_SetPriority_mEC7C9BADF2DECB310AA376363876F0FD5A01702A((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_setPriority_mD69F03908FAD99F595717E97BE4531949D4B185C_AdjustorThunk (RuntimeObject * __this, int32_t ___priority0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_setPriority_mD69F03908FAD99F595717E97BE4531949D4B185C(_thisAdjusted, ___priority0, method);
}
// FMOD.RESULT FMOD.Channel::getPriority(System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getPriority_m0DFA39D27FAA078426821600FCC292DCEE3B6D0A (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, int32_t* ___priority0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_GetPriority(this.handle, out priority);
		intptr_t L_0 = __this->get_handle_0();
		int32_t* L_1 = ___priority0;
		int32_t L_2 = Channel_FMOD5_Channel_GetPriority_mC38533697389A1D62D4F25DEE10A3B747FA8C980((intptr_t)L_0, (int32_t*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_getPriority_m0DFA39D27FAA078426821600FCC292DCEE3B6D0A_AdjustorThunk (RuntimeObject * __this, int32_t* ___priority0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_getPriority_m0DFA39D27FAA078426821600FCC292DCEE3B6D0A(_thisAdjusted, ___priority0, method);
}
// FMOD.RESULT FMOD.Channel::setPosition(System.UInt32,FMOD.TIMEUNIT)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setPosition_m731B79A462CE944FCC264B33862F0025266D022F (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, uint32_t ___position0, uint32_t ___postype1, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_SetPosition(this.handle, position, postype);
		intptr_t L_0 = __this->get_handle_0();
		uint32_t L_1 = ___position0;
		uint32_t L_2 = ___postype1;
		int32_t L_3 = Channel_FMOD5_Channel_SetPosition_m6880C790DEA3BA75D42FEE5DD13B243F5C6BC3AD((intptr_t)L_0, L_1, L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_setPosition_m731B79A462CE944FCC264B33862F0025266D022F_AdjustorThunk (RuntimeObject * __this, uint32_t ___position0, uint32_t ___postype1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_setPosition_m731B79A462CE944FCC264B33862F0025266D022F(_thisAdjusted, ___position0, ___postype1, method);
}
// FMOD.RESULT FMOD.Channel::getPosition(System.UInt32&,FMOD.TIMEUNIT)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getPosition_mC43555DA2ABEC30E52BB68A31E42ACB693F5F4D0 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, uint32_t* ___position0, uint32_t ___postype1, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_GetPosition(this.handle, out position, postype);
		intptr_t L_0 = __this->get_handle_0();
		uint32_t* L_1 = ___position0;
		uint32_t L_2 = ___postype1;
		int32_t L_3 = Channel_FMOD5_Channel_GetPosition_m7F2506851429CD1B101DD9E3326A3267FC706703((intptr_t)L_0, (uint32_t*)L_1, L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_getPosition_mC43555DA2ABEC30E52BB68A31E42ACB693F5F4D0_AdjustorThunk (RuntimeObject * __this, uint32_t* ___position0, uint32_t ___postype1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_getPosition_mC43555DA2ABEC30E52BB68A31E42ACB693F5F4D0(_thisAdjusted, ___position0, ___postype1, method);
}
// FMOD.RESULT FMOD.Channel::setChannelGroup(FMOD.ChannelGroup)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setChannelGroup_mFD09FE116E28ACBE1A560A1DBE58DE056A01EB4F (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069  ___channelgroup0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_SetChannelGroup(this.handle, channelgroup.handle);
		intptr_t L_0 = __this->get_handle_0();
		ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069  L_1 = ___channelgroup0;
		intptr_t L_2 = L_1.get_handle_0();
		int32_t L_3 = Channel_FMOD5_Channel_SetChannelGroup_m51F8AC42FB44AAF5664CB8AA930450A9B9B3F0EA((intptr_t)L_0, (intptr_t)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_setChannelGroup_mFD09FE116E28ACBE1A560A1DBE58DE056A01EB4F_AdjustorThunk (RuntimeObject * __this, ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069  ___channelgroup0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_setChannelGroup_mFD09FE116E28ACBE1A560A1DBE58DE056A01EB4F(_thisAdjusted, ___channelgroup0, method);
}
// FMOD.RESULT FMOD.Channel::getChannelGroup(FMOD.ChannelGroup&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getChannelGroup_mFFA7B435424F92B662128B44F9FB5FA054A0BEF1 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * ___channelgroup0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_GetChannelGroup(this.handle, out channelgroup.handle);
		intptr_t L_0 = __this->get_handle_0();
		ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * L_1 = ___channelgroup0;
		intptr_t* L_2 = L_1->get_address_of_handle_0();
		int32_t L_3 = Channel_FMOD5_Channel_GetChannelGroup_mF76B70C997F59B6787773751C9BD0B151AE1152B((intptr_t)L_0, (intptr_t*)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_getChannelGroup_mFFA7B435424F92B662128B44F9FB5FA054A0BEF1_AdjustorThunk (RuntimeObject * __this, ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * ___channelgroup0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_getChannelGroup_mFFA7B435424F92B662128B44F9FB5FA054A0BEF1(_thisAdjusted, ___channelgroup0, method);
}
// FMOD.RESULT FMOD.Channel::setLoopCount(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setLoopCount_m9AC742107CF073E7E236AA38342B5DC766653813 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, int32_t ___loopcount0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_SetLoopCount(this.handle, loopcount);
		intptr_t L_0 = __this->get_handle_0();
		int32_t L_1 = ___loopcount0;
		int32_t L_2 = Channel_FMOD5_Channel_SetLoopCount_m38CBD07F4D96F2C65D6923579F2F4CD05E1F4482((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_setLoopCount_m9AC742107CF073E7E236AA38342B5DC766653813_AdjustorThunk (RuntimeObject * __this, int32_t ___loopcount0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_setLoopCount_m9AC742107CF073E7E236AA38342B5DC766653813(_thisAdjusted, ___loopcount0, method);
}
// FMOD.RESULT FMOD.Channel::getLoopCount(System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getLoopCount_m8330A2262A7C28847B7D878623BD906B2AF6287A (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, int32_t* ___loopcount0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_GetLoopCount(this.handle, out loopcount);
		intptr_t L_0 = __this->get_handle_0();
		int32_t* L_1 = ___loopcount0;
		int32_t L_2 = Channel_FMOD5_Channel_GetLoopCount_m47055F889B892224B3EF188C7E456B64FB79F6D9((intptr_t)L_0, (int32_t*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_getLoopCount_m8330A2262A7C28847B7D878623BD906B2AF6287A_AdjustorThunk (RuntimeObject * __this, int32_t* ___loopcount0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_getLoopCount_m8330A2262A7C28847B7D878623BD906B2AF6287A(_thisAdjusted, ___loopcount0, method);
}
// FMOD.RESULT FMOD.Channel::setLoopPoints(System.UInt32,FMOD.TIMEUNIT,System.UInt32,FMOD.TIMEUNIT)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setLoopPoints_m701E0C26E0659281F6970C4B91DA672A4C526118 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, uint32_t ___loopstart0, uint32_t ___loopstarttype1, uint32_t ___loopend2, uint32_t ___loopendtype3, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_SetLoopPoints(this.handle, loopstart, loopstarttype, loopend, loopendtype);
		intptr_t L_0 = __this->get_handle_0();
		uint32_t L_1 = ___loopstart0;
		uint32_t L_2 = ___loopstarttype1;
		uint32_t L_3 = ___loopend2;
		uint32_t L_4 = ___loopendtype3;
		int32_t L_5 = Channel_FMOD5_Channel_SetLoopPoints_mD2BB5203D2567340FC16046A5D58BBF0DB363796((intptr_t)L_0, L_1, L_2, L_3, L_4, /*hidden argument*/NULL);
		return L_5;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_setLoopPoints_m701E0C26E0659281F6970C4B91DA672A4C526118_AdjustorThunk (RuntimeObject * __this, uint32_t ___loopstart0, uint32_t ___loopstarttype1, uint32_t ___loopend2, uint32_t ___loopendtype3, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_setLoopPoints_m701E0C26E0659281F6970C4B91DA672A4C526118(_thisAdjusted, ___loopstart0, ___loopstarttype1, ___loopend2, ___loopendtype3, method);
}
// FMOD.RESULT FMOD.Channel::getLoopPoints(System.UInt32&,FMOD.TIMEUNIT,System.UInt32&,FMOD.TIMEUNIT)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getLoopPoints_m7766E218C5FD6B8A67F84AE584A3CB793AD5346B (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, uint32_t* ___loopstart0, uint32_t ___loopstarttype1, uint32_t* ___loopend2, uint32_t ___loopendtype3, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_GetLoopPoints(this.handle, out loopstart, loopstarttype, out loopend, loopendtype);
		intptr_t L_0 = __this->get_handle_0();
		uint32_t* L_1 = ___loopstart0;
		uint32_t L_2 = ___loopstarttype1;
		uint32_t* L_3 = ___loopend2;
		uint32_t L_4 = ___loopendtype3;
		int32_t L_5 = Channel_FMOD5_Channel_GetLoopPoints_m1DFFC60A15B43F02610FCADC79D70BFBB7386B3C((intptr_t)L_0, (uint32_t*)L_1, L_2, (uint32_t*)L_3, L_4, /*hidden argument*/NULL);
		return L_5;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_getLoopPoints_m7766E218C5FD6B8A67F84AE584A3CB793AD5346B_AdjustorThunk (RuntimeObject * __this, uint32_t* ___loopstart0, uint32_t ___loopstarttype1, uint32_t* ___loopend2, uint32_t ___loopendtype3, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_getLoopPoints_m7766E218C5FD6B8A67F84AE584A3CB793AD5346B(_thisAdjusted, ___loopstart0, ___loopstarttype1, ___loopend2, ___loopendtype3, method);
}
// FMOD.RESULT FMOD.Channel::isVirtual(System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_isVirtual_mBCF96E0D57E7A2DA6EA7003CC9C3AC7AC35AA833 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, bool* ___isvirtual0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_IsVirtual(this.handle, out isvirtual);
		intptr_t L_0 = __this->get_handle_0();
		bool* L_1 = ___isvirtual0;
		int32_t L_2 = Channel_FMOD5_Channel_IsVirtual_m8BD74685BBB5BC10F5C57852D94EBB39D320CEDE((intptr_t)L_0, (bool*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_isVirtual_mBCF96E0D57E7A2DA6EA7003CC9C3AC7AC35AA833_AdjustorThunk (RuntimeObject * __this, bool* ___isvirtual0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_isVirtual_mBCF96E0D57E7A2DA6EA7003CC9C3AC7AC35AA833(_thisAdjusted, ___isvirtual0, method);
}
// FMOD.RESULT FMOD.Channel::getCurrentSound(FMOD.Sound&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getCurrentSound_mC45361DBFA8B128F58166E0813519C719170A3A0 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, Sound_t885E85646940F117BE88C2AF5A78E8E51374D688 * ___sound0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_GetCurrentSound(this.handle, out sound.handle);
		intptr_t L_0 = __this->get_handle_0();
		Sound_t885E85646940F117BE88C2AF5A78E8E51374D688 * L_1 = ___sound0;
		intptr_t* L_2 = L_1->get_address_of_handle_0();
		int32_t L_3 = Channel_FMOD5_Channel_GetCurrentSound_m0B512D6032919634EBA997316D1426DC1FB850B9((intptr_t)L_0, (intptr_t*)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_getCurrentSound_mC45361DBFA8B128F58166E0813519C719170A3A0_AdjustorThunk (RuntimeObject * __this, Sound_t885E85646940F117BE88C2AF5A78E8E51374D688 * ___sound0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_getCurrentSound_mC45361DBFA8B128F58166E0813519C719170A3A0(_thisAdjusted, ___sound0, method);
}
// FMOD.RESULT FMOD.Channel::getIndex(System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getIndex_m195D37BA63B0C6485A67DA9A23CA59D70DA806F2 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, int32_t* ___index0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_GetIndex(this.handle, out index);
		intptr_t L_0 = __this->get_handle_0();
		int32_t* L_1 = ___index0;
		int32_t L_2 = Channel_FMOD5_Channel_GetIndex_m4A0B418C87062515D3A49550B117AD3400FF64BA((intptr_t)L_0, (int32_t*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_getIndex_m195D37BA63B0C6485A67DA9A23CA59D70DA806F2_AdjustorThunk (RuntimeObject * __this, int32_t* ___index0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_getIndex_m195D37BA63B0C6485A67DA9A23CA59D70DA806F2(_thisAdjusted, ___index0, method);
}
// FMOD.RESULT FMOD.Channel::getSystemObject(FMOD.System&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getSystemObject_mF39E2562C4EE3E2C222869565169D0B5BC050945 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, System_t1E8F97CEB4B863C4A09A4EC514B0C27FBA8D08B7 * ___system0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_GetSystemObject(this.handle, out system.handle);
		intptr_t L_0 = __this->get_handle_0();
		System_t1E8F97CEB4B863C4A09A4EC514B0C27FBA8D08B7 * L_1 = ___system0;
		intptr_t* L_2 = L_1->get_address_of_handle_0();
		int32_t L_3 = Channel_FMOD5_Channel_GetSystemObject_m7EDCAA1D75EE2736939FFC3588B3536BEF823CB6((intptr_t)L_0, (intptr_t*)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_getSystemObject_mF39E2562C4EE3E2C222869565169D0B5BC050945_AdjustorThunk (RuntimeObject * __this, System_t1E8F97CEB4B863C4A09A4EC514B0C27FBA8D08B7 * ___system0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_getSystemObject_mF39E2562C4EE3E2C222869565169D0B5BC050945(_thisAdjusted, ___system0, method);
}
// FMOD.RESULT FMOD.Channel::stop()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_stop_m9F8FD0FB866FEC100C4A5A4B6AAC1569CDE83005 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_Stop(this.handle);
		intptr_t L_0 = __this->get_handle_0();
		int32_t L_1 = Channel_FMOD5_Channel_Stop_m6FDB906C3CFE0A206E855F0CDEF105593809A1F2((intptr_t)L_0, /*hidden argument*/NULL);
		return L_1;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_stop_m9F8FD0FB866FEC100C4A5A4B6AAC1569CDE83005_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_stop_m9F8FD0FB866FEC100C4A5A4B6AAC1569CDE83005(_thisAdjusted, method);
}
// FMOD.RESULT FMOD.Channel::setPaused(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setPaused_m753283D089F205FCFBFBBE456B32DCEE887ADCF1 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, bool ___paused0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_SetPaused(this.handle, paused);
		intptr_t L_0 = __this->get_handle_0();
		bool L_1 = ___paused0;
		int32_t L_2 = Channel_FMOD5_Channel_SetPaused_mC70B6B6901C82248D8998CB3689552CEF6D100D3((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_setPaused_m753283D089F205FCFBFBBE456B32DCEE887ADCF1_AdjustorThunk (RuntimeObject * __this, bool ___paused0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_setPaused_m753283D089F205FCFBFBBE456B32DCEE887ADCF1(_thisAdjusted, ___paused0, method);
}
// FMOD.RESULT FMOD.Channel::getPaused(System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getPaused_m7CFE28F5F63865DE9DFF37977E8B1B3E857FA018 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, bool* ___paused0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_GetPaused(this.handle, out paused);
		intptr_t L_0 = __this->get_handle_0();
		bool* L_1 = ___paused0;
		int32_t L_2 = Channel_FMOD5_Channel_GetPaused_mD0B2456F32EDC944F5BF1E43EB8389E9503602AF((intptr_t)L_0, (bool*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_getPaused_m7CFE28F5F63865DE9DFF37977E8B1B3E857FA018_AdjustorThunk (RuntimeObject * __this, bool* ___paused0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_getPaused_m7CFE28F5F63865DE9DFF37977E8B1B3E857FA018(_thisAdjusted, ___paused0, method);
}
// FMOD.RESULT FMOD.Channel::setVolume(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setVolume_m017C0789D87275B190EE253FE5AC3BB2FE66B127 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float ___volume0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_SetVolume(this.handle, volume);
		intptr_t L_0 = __this->get_handle_0();
		float L_1 = ___volume0;
		int32_t L_2 = Channel_FMOD5_Channel_SetVolume_mA06948C17473A9586B3605B97409E50959751B64((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_setVolume_m017C0789D87275B190EE253FE5AC3BB2FE66B127_AdjustorThunk (RuntimeObject * __this, float ___volume0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_setVolume_m017C0789D87275B190EE253FE5AC3BB2FE66B127(_thisAdjusted, ___volume0, method);
}
// FMOD.RESULT FMOD.Channel::getVolume(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getVolume_m155755E13B92D765A6A2E602CADC2E14859334E4 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float* ___volume0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_GetVolume(this.handle, out volume);
		intptr_t L_0 = __this->get_handle_0();
		float* L_1 = ___volume0;
		int32_t L_2 = Channel_FMOD5_Channel_GetVolume_m0833288C653EA3DEF653E253582D8CC1306009E5((intptr_t)L_0, (float*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_getVolume_m155755E13B92D765A6A2E602CADC2E14859334E4_AdjustorThunk (RuntimeObject * __this, float* ___volume0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_getVolume_m155755E13B92D765A6A2E602CADC2E14859334E4(_thisAdjusted, ___volume0, method);
}
// FMOD.RESULT FMOD.Channel::setVolumeRamp(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setVolumeRamp_m652F74ACBE2EE6D0110CFC38DB11093D60643893 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, bool ___ramp0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_SetVolumeRamp(this.handle, ramp);
		intptr_t L_0 = __this->get_handle_0();
		bool L_1 = ___ramp0;
		int32_t L_2 = Channel_FMOD5_Channel_SetVolumeRamp_m8C0EB34262FA99DC2A4D1ED97F71F6FF49917D11((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_setVolumeRamp_m652F74ACBE2EE6D0110CFC38DB11093D60643893_AdjustorThunk (RuntimeObject * __this, bool ___ramp0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_setVolumeRamp_m652F74ACBE2EE6D0110CFC38DB11093D60643893(_thisAdjusted, ___ramp0, method);
}
// FMOD.RESULT FMOD.Channel::getVolumeRamp(System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getVolumeRamp_m37DC322502C9AFB66E79C073FE949E7AA62211DC (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, bool* ___ramp0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_GetVolumeRamp(this.handle, out ramp);
		intptr_t L_0 = __this->get_handle_0();
		bool* L_1 = ___ramp0;
		int32_t L_2 = Channel_FMOD5_Channel_GetVolumeRamp_mDCF110828D76ED4AA46338EE00084339C5A87216((intptr_t)L_0, (bool*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_getVolumeRamp_m37DC322502C9AFB66E79C073FE949E7AA62211DC_AdjustorThunk (RuntimeObject * __this, bool* ___ramp0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_getVolumeRamp_m37DC322502C9AFB66E79C073FE949E7AA62211DC(_thisAdjusted, ___ramp0, method);
}
// FMOD.RESULT FMOD.Channel::getAudibility(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getAudibility_m2A132187AFE78882F8DDD12C23A77AAD5E60FB28 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float* ___audibility0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_GetAudibility(this.handle, out audibility);
		intptr_t L_0 = __this->get_handle_0();
		float* L_1 = ___audibility0;
		int32_t L_2 = Channel_FMOD5_Channel_GetAudibility_m2A80EA75F1544F1947A7DDCB054D1F88BF594C3A((intptr_t)L_0, (float*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_getAudibility_m2A132187AFE78882F8DDD12C23A77AAD5E60FB28_AdjustorThunk (RuntimeObject * __this, float* ___audibility0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_getAudibility_m2A132187AFE78882F8DDD12C23A77AAD5E60FB28(_thisAdjusted, ___audibility0, method);
}
// FMOD.RESULT FMOD.Channel::setPitch(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setPitch_m27C9E3DDC86C611B06C357A1E9C1BC323E994C24 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float ___pitch0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_SetPitch(this.handle, pitch);
		intptr_t L_0 = __this->get_handle_0();
		float L_1 = ___pitch0;
		int32_t L_2 = Channel_FMOD5_Channel_SetPitch_m549E1355687B9638C0736EC2D2046800086C8B68((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_setPitch_m27C9E3DDC86C611B06C357A1E9C1BC323E994C24_AdjustorThunk (RuntimeObject * __this, float ___pitch0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_setPitch_m27C9E3DDC86C611B06C357A1E9C1BC323E994C24(_thisAdjusted, ___pitch0, method);
}
// FMOD.RESULT FMOD.Channel::getPitch(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getPitch_m540A8B6A0DD8261EF97D9605B330F47FD33D2FFE (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float* ___pitch0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_GetPitch(this.handle, out pitch);
		intptr_t L_0 = __this->get_handle_0();
		float* L_1 = ___pitch0;
		int32_t L_2 = Channel_FMOD5_Channel_GetPitch_mB83CA5B83254E3D1334E5343431BA30BE7C06E99((intptr_t)L_0, (float*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_getPitch_m540A8B6A0DD8261EF97D9605B330F47FD33D2FFE_AdjustorThunk (RuntimeObject * __this, float* ___pitch0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_getPitch_m540A8B6A0DD8261EF97D9605B330F47FD33D2FFE(_thisAdjusted, ___pitch0, method);
}
// FMOD.RESULT FMOD.Channel::setMute(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setMute_m267F03569CA7286074549A3E7507318DFD5F6F59 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, bool ___mute0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_SetMute(this.handle, mute);
		intptr_t L_0 = __this->get_handle_0();
		bool L_1 = ___mute0;
		int32_t L_2 = Channel_FMOD5_Channel_SetMute_m75A3287E7D5CDA88FC8326E83360E4848576816D((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_setMute_m267F03569CA7286074549A3E7507318DFD5F6F59_AdjustorThunk (RuntimeObject * __this, bool ___mute0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_setMute_m267F03569CA7286074549A3E7507318DFD5F6F59(_thisAdjusted, ___mute0, method);
}
// FMOD.RESULT FMOD.Channel::getMute(System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getMute_mE720F9DD4FA7C024E1FE80D823BD251555D6C73B (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, bool* ___mute0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_GetMute(this.handle, out mute);
		intptr_t L_0 = __this->get_handle_0();
		bool* L_1 = ___mute0;
		int32_t L_2 = Channel_FMOD5_Channel_GetMute_m94680903460895FF29AED33D76AEC4B9F239C0B3((intptr_t)L_0, (bool*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_getMute_mE720F9DD4FA7C024E1FE80D823BD251555D6C73B_AdjustorThunk (RuntimeObject * __this, bool* ___mute0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_getMute_mE720F9DD4FA7C024E1FE80D823BD251555D6C73B(_thisAdjusted, ___mute0, method);
}
// FMOD.RESULT FMOD.Channel::setReverbProperties(System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setReverbProperties_m889A0D98D8BAE356449FDFE9FBFBABA95282DFFE (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, int32_t ___instance0, float ___wet1, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_SetReverbProperties(this.handle, instance, wet);
		intptr_t L_0 = __this->get_handle_0();
		int32_t L_1 = ___instance0;
		float L_2 = ___wet1;
		int32_t L_3 = Channel_FMOD5_Channel_SetReverbProperties_m08A03DBABEDB4176537EA71A9E35D404CA66C3FB((intptr_t)L_0, L_1, L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_setReverbProperties_m889A0D98D8BAE356449FDFE9FBFBABA95282DFFE_AdjustorThunk (RuntimeObject * __this, int32_t ___instance0, float ___wet1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_setReverbProperties_m889A0D98D8BAE356449FDFE9FBFBABA95282DFFE(_thisAdjusted, ___instance0, ___wet1, method);
}
// FMOD.RESULT FMOD.Channel::getReverbProperties(System.Int32,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getReverbProperties_m679D5BE878628A39DEF0090047A8994A5772857C (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, int32_t ___instance0, float* ___wet1, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_GetReverbProperties(this.handle, instance, out wet);
		intptr_t L_0 = __this->get_handle_0();
		int32_t L_1 = ___instance0;
		float* L_2 = ___wet1;
		int32_t L_3 = Channel_FMOD5_Channel_GetReverbProperties_mAC42354BD318ABC96D6B5DB5896C914516D0292C((intptr_t)L_0, L_1, (float*)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_getReverbProperties_m679D5BE878628A39DEF0090047A8994A5772857C_AdjustorThunk (RuntimeObject * __this, int32_t ___instance0, float* ___wet1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_getReverbProperties_m679D5BE878628A39DEF0090047A8994A5772857C(_thisAdjusted, ___instance0, ___wet1, method);
}
// FMOD.RESULT FMOD.Channel::setLowPassGain(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setLowPassGain_m3E56A35C46F4E956407F9F4F766A4FF01A2BF516 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float ___gain0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_SetLowPassGain(this.handle, gain);
		intptr_t L_0 = __this->get_handle_0();
		float L_1 = ___gain0;
		int32_t L_2 = Channel_FMOD5_Channel_SetLowPassGain_mEA080D59BBAE780C648C949DD378946927F3C72B((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_setLowPassGain_m3E56A35C46F4E956407F9F4F766A4FF01A2BF516_AdjustorThunk (RuntimeObject * __this, float ___gain0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_setLowPassGain_m3E56A35C46F4E956407F9F4F766A4FF01A2BF516(_thisAdjusted, ___gain0, method);
}
// FMOD.RESULT FMOD.Channel::getLowPassGain(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getLowPassGain_m16542B879C28270327836C47164B3C80AA55DEE6 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float* ___gain0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_GetLowPassGain(this.handle, out gain);
		intptr_t L_0 = __this->get_handle_0();
		float* L_1 = ___gain0;
		int32_t L_2 = Channel_FMOD5_Channel_GetLowPassGain_m97370BA6DCA9A36A51C7AE3B6A5CF2A8A059CA36((intptr_t)L_0, (float*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_getLowPassGain_m16542B879C28270327836C47164B3C80AA55DEE6_AdjustorThunk (RuntimeObject * __this, float* ___gain0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_getLowPassGain_m16542B879C28270327836C47164B3C80AA55DEE6(_thisAdjusted, ___gain0, method);
}
// FMOD.RESULT FMOD.Channel::setMode(FMOD.MODE)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setMode_mB0CDDF95BD76E8A54167EA963AF9DAC98AB5EE55 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, uint32_t ___mode0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_SetMode(this.handle, mode);
		intptr_t L_0 = __this->get_handle_0();
		uint32_t L_1 = ___mode0;
		int32_t L_2 = Channel_FMOD5_Channel_SetMode_m2F2BC0115F72AE0A589D39CAC85463B207748494((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_setMode_mB0CDDF95BD76E8A54167EA963AF9DAC98AB5EE55_AdjustorThunk (RuntimeObject * __this, uint32_t ___mode0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_setMode_mB0CDDF95BD76E8A54167EA963AF9DAC98AB5EE55(_thisAdjusted, ___mode0, method);
}
// FMOD.RESULT FMOD.Channel::getMode(FMOD.MODE&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getMode_m616E9CBD231995EAFB36A5520A54DB36377D95EE (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, uint32_t* ___mode0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_GetMode(this.handle, out mode);
		intptr_t L_0 = __this->get_handle_0();
		uint32_t* L_1 = ___mode0;
		int32_t L_2 = Channel_FMOD5_Channel_GetMode_m93CC755DC00A9932E0E0C26BB61B64B12913011A((intptr_t)L_0, (uint32_t*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_getMode_m616E9CBD231995EAFB36A5520A54DB36377D95EE_AdjustorThunk (RuntimeObject * __this, uint32_t* ___mode0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_getMode_m616E9CBD231995EAFB36A5520A54DB36377D95EE(_thisAdjusted, ___mode0, method);
}
// FMOD.RESULT FMOD.Channel::setCallback(FMOD.CHANNELCONTROL_CALLBACK)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setCallback_m796DDE64E10666A7AEDB66CF1E828AA72D931750 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, CHANNELCONTROL_CALLBACK_t95D7949ECD13791F21B2CC1501D3F741AB1C9CF5 * ___callback0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_SetCallback(this.handle, callback);
		intptr_t L_0 = __this->get_handle_0();
		CHANNELCONTROL_CALLBACK_t95D7949ECD13791F21B2CC1501D3F741AB1C9CF5 * L_1 = ___callback0;
		int32_t L_2 = Channel_FMOD5_Channel_SetCallback_m7EF77501FDFA59F25D52D267D782AA6B3EB08778((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_setCallback_m796DDE64E10666A7AEDB66CF1E828AA72D931750_AdjustorThunk (RuntimeObject * __this, CHANNELCONTROL_CALLBACK_t95D7949ECD13791F21B2CC1501D3F741AB1C9CF5 * ___callback0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_setCallback_m796DDE64E10666A7AEDB66CF1E828AA72D931750(_thisAdjusted, ___callback0, method);
}
// FMOD.RESULT FMOD.Channel::isPlaying(System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_isPlaying_m57AFFEAE60F45FB1402D43308AC84F1D54FE045F (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, bool* ___isplaying0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_IsPlaying(this.handle, out isplaying);
		intptr_t L_0 = __this->get_handle_0();
		bool* L_1 = ___isplaying0;
		int32_t L_2 = Channel_FMOD5_Channel_IsPlaying_m4EDD9C0801D5845718428144EDE7D52C0AC57F69((intptr_t)L_0, (bool*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_isPlaying_m57AFFEAE60F45FB1402D43308AC84F1D54FE045F_AdjustorThunk (RuntimeObject * __this, bool* ___isplaying0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_isPlaying_m57AFFEAE60F45FB1402D43308AC84F1D54FE045F(_thisAdjusted, ___isplaying0, method);
}
// FMOD.RESULT FMOD.Channel::setPan(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setPan_mB506C1B1132269F547C867C5250FA668AADE8876 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float ___pan0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_SetPan(this.handle, pan);
		intptr_t L_0 = __this->get_handle_0();
		float L_1 = ___pan0;
		int32_t L_2 = Channel_FMOD5_Channel_SetPan_m9D8C06BA87C75A4C5D86B59B7296ACBD2A2EE1FD((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_setPan_mB506C1B1132269F547C867C5250FA668AADE8876_AdjustorThunk (RuntimeObject * __this, float ___pan0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_setPan_mB506C1B1132269F547C867C5250FA668AADE8876(_thisAdjusted, ___pan0, method);
}
// FMOD.RESULT FMOD.Channel::setMixLevelsOutput(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setMixLevelsOutput_m0798755A914BCC1D10E2D9BA43ADA0D258A63BC8 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float ___frontleft0, float ___frontright1, float ___center2, float ___lfe3, float ___surroundleft4, float ___surroundright5, float ___backleft6, float ___backright7, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_SetMixLevelsOutput(this.handle, frontleft, frontright, center, lfe, surroundleft, surroundright, backleft, backright);
		intptr_t L_0 = __this->get_handle_0();
		float L_1 = ___frontleft0;
		float L_2 = ___frontright1;
		float L_3 = ___center2;
		float L_4 = ___lfe3;
		float L_5 = ___surroundleft4;
		float L_6 = ___surroundright5;
		float L_7 = ___backleft6;
		float L_8 = ___backright7;
		int32_t L_9 = Channel_FMOD5_Channel_SetMixLevelsOutput_m07B3078423C7B3BA0EF4EE7DCB5A74BB82AA4FBF((intptr_t)L_0, L_1, L_2, L_3, L_4, L_5, L_6, L_7, L_8, /*hidden argument*/NULL);
		return L_9;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_setMixLevelsOutput_m0798755A914BCC1D10E2D9BA43ADA0D258A63BC8_AdjustorThunk (RuntimeObject * __this, float ___frontleft0, float ___frontright1, float ___center2, float ___lfe3, float ___surroundleft4, float ___surroundright5, float ___backleft6, float ___backright7, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_setMixLevelsOutput_m0798755A914BCC1D10E2D9BA43ADA0D258A63BC8(_thisAdjusted, ___frontleft0, ___frontright1, ___center2, ___lfe3, ___surroundleft4, ___surroundright5, ___backleft6, ___backright7, method);
}
// FMOD.RESULT FMOD.Channel::setMixLevelsInput(System.Single[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setMixLevelsInput_m3798CACF4CBF55CF4E98BA7434D8169F66146794 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___levels0, int32_t ___numlevels1, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_SetMixLevelsInput(this.handle, levels, numlevels);
		intptr_t L_0 = __this->get_handle_0();
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_1 = ___levels0;
		int32_t L_2 = ___numlevels1;
		int32_t L_3 = Channel_FMOD5_Channel_SetMixLevelsInput_mB900BB86036DC4D287AF070A2FAB6D012938280F((intptr_t)L_0, L_1, L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_setMixLevelsInput_m3798CACF4CBF55CF4E98BA7434D8169F66146794_AdjustorThunk (RuntimeObject * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___levels0, int32_t ___numlevels1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_setMixLevelsInput_m3798CACF4CBF55CF4E98BA7434D8169F66146794(_thisAdjusted, ___levels0, ___numlevels1, method);
}
// FMOD.RESULT FMOD.Channel::setMixMatrix(System.Single[],System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setMixMatrix_m47418FD89D59A7484DBB70AE9EE185306E754938 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix0, int32_t ___outchannels1, int32_t ___inchannels2, int32_t ___inchannel_hop3, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_SetMixMatrix(this.handle, matrix, outchannels, inchannels, inchannel_hop);
		intptr_t L_0 = __this->get_handle_0();
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_1 = ___matrix0;
		int32_t L_2 = ___outchannels1;
		int32_t L_3 = ___inchannels2;
		int32_t L_4 = ___inchannel_hop3;
		int32_t L_5 = Channel_FMOD5_Channel_SetMixMatrix_mA4AE57B28C924F114EC26AE728C1F36F5C8BD01A((intptr_t)L_0, L_1, L_2, L_3, L_4, /*hidden argument*/NULL);
		return L_5;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_setMixMatrix_m47418FD89D59A7484DBB70AE9EE185306E754938_AdjustorThunk (RuntimeObject * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix0, int32_t ___outchannels1, int32_t ___inchannels2, int32_t ___inchannel_hop3, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_setMixMatrix_m47418FD89D59A7484DBB70AE9EE185306E754938(_thisAdjusted, ___matrix0, ___outchannels1, ___inchannels2, ___inchannel_hop3, method);
}
// FMOD.RESULT FMOD.Channel::getMixMatrix(System.Single[],System.Int32&,System.Int32&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getMixMatrix_mCE8E197EAA0407574A5D4AEE432A3B9CA7DEAC34 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix0, int32_t* ___outchannels1, int32_t* ___inchannels2, int32_t ___inchannel_hop3, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_GetMixMatrix(this.handle, matrix, out outchannels, out inchannels, inchannel_hop);
		intptr_t L_0 = __this->get_handle_0();
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_1 = ___matrix0;
		int32_t* L_2 = ___outchannels1;
		int32_t* L_3 = ___inchannels2;
		int32_t L_4 = ___inchannel_hop3;
		int32_t L_5 = Channel_FMOD5_Channel_GetMixMatrix_m13ABC60E817534529D1CDA0AB271D690CDB96160((intptr_t)L_0, L_1, (int32_t*)L_2, (int32_t*)L_3, L_4, /*hidden argument*/NULL);
		return L_5;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_getMixMatrix_mCE8E197EAA0407574A5D4AEE432A3B9CA7DEAC34_AdjustorThunk (RuntimeObject * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix0, int32_t* ___outchannels1, int32_t* ___inchannels2, int32_t ___inchannel_hop3, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_getMixMatrix_mCE8E197EAA0407574A5D4AEE432A3B9CA7DEAC34(_thisAdjusted, ___matrix0, ___outchannels1, ___inchannels2, ___inchannel_hop3, method);
}
// FMOD.RESULT FMOD.Channel::getDSPClock(System.UInt64&,System.UInt64&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getDSPClock_m986AC52E4CD3C9009EFB57BEA2A1682E205BBEC3 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, uint64_t* ___dspclock0, uint64_t* ___parentclock1, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_GetDSPClock(this.handle, out dspclock, out parentclock);
		intptr_t L_0 = __this->get_handle_0();
		uint64_t* L_1 = ___dspclock0;
		uint64_t* L_2 = ___parentclock1;
		int32_t L_3 = Channel_FMOD5_Channel_GetDSPClock_m11871BCA7AB855D6D414D5B9C353430A13268ED1((intptr_t)L_0, (uint64_t*)L_1, (uint64_t*)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_getDSPClock_m986AC52E4CD3C9009EFB57BEA2A1682E205BBEC3_AdjustorThunk (RuntimeObject * __this, uint64_t* ___dspclock0, uint64_t* ___parentclock1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_getDSPClock_m986AC52E4CD3C9009EFB57BEA2A1682E205BBEC3(_thisAdjusted, ___dspclock0, ___parentclock1, method);
}
// FMOD.RESULT FMOD.Channel::setDelay(System.UInt64,System.UInt64,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setDelay_m399460F80068F0790E2E6FEF69837AD7BE356987 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, uint64_t ___dspclock_start0, uint64_t ___dspclock_end1, bool ___stopchannels2, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_SetDelay(this.handle, dspclock_start, dspclock_end, stopchannels);
		intptr_t L_0 = __this->get_handle_0();
		uint64_t L_1 = ___dspclock_start0;
		uint64_t L_2 = ___dspclock_end1;
		bool L_3 = ___stopchannels2;
		int32_t L_4 = Channel_FMOD5_Channel_SetDelay_m2B28A02E80B58A5BDA26731D60EAAC2AD0C67F95((intptr_t)L_0, L_1, L_2, L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_setDelay_m399460F80068F0790E2E6FEF69837AD7BE356987_AdjustorThunk (RuntimeObject * __this, uint64_t ___dspclock_start0, uint64_t ___dspclock_end1, bool ___stopchannels2, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_setDelay_m399460F80068F0790E2E6FEF69837AD7BE356987(_thisAdjusted, ___dspclock_start0, ___dspclock_end1, ___stopchannels2, method);
}
// FMOD.RESULT FMOD.Channel::getDelay(System.UInt64&,System.UInt64&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getDelay_m287DDE522276BC3ABEED7AB75E53D7E7C383C554 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, uint64_t* ___dspclock_start0, uint64_t* ___dspclock_end1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Channel_getDelay_m287DDE522276BC3ABEED7AB75E53D7E7C383C554_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return FMOD5_Channel_GetDelay(this.handle, out dspclock_start, out dspclock_end, IntPtr.Zero);
		intptr_t L_0 = __this->get_handle_0();
		uint64_t* L_1 = ___dspclock_start0;
		uint64_t* L_2 = ___dspclock_end1;
		int32_t L_3 = Channel_FMOD5_Channel_GetDelay_mF8E5967F3315701B3C70757D8B51B9E43C28D5C6((intptr_t)L_0, (uint64_t*)L_1, (uint64_t*)L_2, (intptr_t)(0), /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_getDelay_m287DDE522276BC3ABEED7AB75E53D7E7C383C554_AdjustorThunk (RuntimeObject * __this, uint64_t* ___dspclock_start0, uint64_t* ___dspclock_end1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_getDelay_m287DDE522276BC3ABEED7AB75E53D7E7C383C554(_thisAdjusted, ___dspclock_start0, ___dspclock_end1, method);
}
// FMOD.RESULT FMOD.Channel::getDelay(System.UInt64&,System.UInt64&,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getDelay_mE01CD005BD79A684E07A6E050EBB7A2317F99097 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, uint64_t* ___dspclock_start0, uint64_t* ___dspclock_end1, bool* ___stopchannels2, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_GetDelay(this.handle, out dspclock_start, out dspclock_end, out stopchannels);
		intptr_t L_0 = __this->get_handle_0();
		uint64_t* L_1 = ___dspclock_start0;
		uint64_t* L_2 = ___dspclock_end1;
		bool* L_3 = ___stopchannels2;
		int32_t L_4 = Channel_FMOD5_Channel_GetDelay_mF092BE9F560A57EAD28E8AEBFDFB5475B82FF1E7((intptr_t)L_0, (uint64_t*)L_1, (uint64_t*)L_2, (bool*)L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_getDelay_mE01CD005BD79A684E07A6E050EBB7A2317F99097_AdjustorThunk (RuntimeObject * __this, uint64_t* ___dspclock_start0, uint64_t* ___dspclock_end1, bool* ___stopchannels2, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_getDelay_mE01CD005BD79A684E07A6E050EBB7A2317F99097(_thisAdjusted, ___dspclock_start0, ___dspclock_end1, ___stopchannels2, method);
}
// FMOD.RESULT FMOD.Channel::addFadePoint(System.UInt64,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_addFadePoint_m80CF3932872D17E9F8647C8FD33F0368B5961061 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, uint64_t ___dspclock0, float ___volume1, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_AddFadePoint(this.handle, dspclock, volume);
		intptr_t L_0 = __this->get_handle_0();
		uint64_t L_1 = ___dspclock0;
		float L_2 = ___volume1;
		int32_t L_3 = Channel_FMOD5_Channel_AddFadePoint_m263DF954D6DBF356D9CCFDCC7818C85BB2E2746E((intptr_t)L_0, L_1, L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_addFadePoint_m80CF3932872D17E9F8647C8FD33F0368B5961061_AdjustorThunk (RuntimeObject * __this, uint64_t ___dspclock0, float ___volume1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_addFadePoint_m80CF3932872D17E9F8647C8FD33F0368B5961061(_thisAdjusted, ___dspclock0, ___volume1, method);
}
// FMOD.RESULT FMOD.Channel::setFadePointRamp(System.UInt64,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setFadePointRamp_mC64A3E7B650B4C985FD266D84330074C1629DB24 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, uint64_t ___dspclock0, float ___volume1, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_SetFadePointRamp(this.handle, dspclock, volume);
		intptr_t L_0 = __this->get_handle_0();
		uint64_t L_1 = ___dspclock0;
		float L_2 = ___volume1;
		int32_t L_3 = Channel_FMOD5_Channel_SetFadePointRamp_m47BC57731FAEA81423189F08AC6FA23F0E06FF16((intptr_t)L_0, L_1, L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_setFadePointRamp_mC64A3E7B650B4C985FD266D84330074C1629DB24_AdjustorThunk (RuntimeObject * __this, uint64_t ___dspclock0, float ___volume1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_setFadePointRamp_mC64A3E7B650B4C985FD266D84330074C1629DB24(_thisAdjusted, ___dspclock0, ___volume1, method);
}
// FMOD.RESULT FMOD.Channel::removeFadePoints(System.UInt64,System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_removeFadePoints_m83314F52A994F29B6A745A8D98739A8808B65469 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, uint64_t ___dspclock_start0, uint64_t ___dspclock_end1, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_RemoveFadePoints(this.handle, dspclock_start, dspclock_end);
		intptr_t L_0 = __this->get_handle_0();
		uint64_t L_1 = ___dspclock_start0;
		uint64_t L_2 = ___dspclock_end1;
		int32_t L_3 = Channel_FMOD5_Channel_RemoveFadePoints_m9D0F3D5C64CCD1B46F712FFCF5E50B7664A363A5((intptr_t)L_0, L_1, L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_removeFadePoints_m83314F52A994F29B6A745A8D98739A8808B65469_AdjustorThunk (RuntimeObject * __this, uint64_t ___dspclock_start0, uint64_t ___dspclock_end1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_removeFadePoints_m83314F52A994F29B6A745A8D98739A8808B65469(_thisAdjusted, ___dspclock_start0, ___dspclock_end1, method);
}
// FMOD.RESULT FMOD.Channel::getFadePoints(System.UInt32&,System.UInt64[],System.Single[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getFadePoints_m7980EB4BC6B43D59F749EE8EE22E386E631E89EE (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, uint32_t* ___numpoints0, UInt64U5BU5D_tA808FE881491284FF25AFDF5C4BC92A826031EF4* ___point_dspclock1, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___point_volume2, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_GetFadePoints(this.handle, ref numpoints, point_dspclock, point_volume);
		intptr_t L_0 = __this->get_handle_0();
		uint32_t* L_1 = ___numpoints0;
		UInt64U5BU5D_tA808FE881491284FF25AFDF5C4BC92A826031EF4* L_2 = ___point_dspclock1;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_3 = ___point_volume2;
		int32_t L_4 = Channel_FMOD5_Channel_GetFadePoints_mBEC57F9E7A3C9BD31BB2780D0798C7761DC3B80F((intptr_t)L_0, (uint32_t*)L_1, L_2, L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_getFadePoints_m7980EB4BC6B43D59F749EE8EE22E386E631E89EE_AdjustorThunk (RuntimeObject * __this, uint32_t* ___numpoints0, UInt64U5BU5D_tA808FE881491284FF25AFDF5C4BC92A826031EF4* ___point_dspclock1, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___point_volume2, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_getFadePoints_m7980EB4BC6B43D59F749EE8EE22E386E631E89EE(_thisAdjusted, ___numpoints0, ___point_dspclock1, ___point_volume2, method);
}
// FMOD.RESULT FMOD.Channel::getDSP(System.Int32,FMOD.DSP&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getDSP_mBC4C4D4D760ED56C81F603A3A8FD3759C120E641 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, int32_t ___index0, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * ___dsp1, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_GetDSP(this.handle, index, out dsp.handle);
		intptr_t L_0 = __this->get_handle_0();
		int32_t L_1 = ___index0;
		DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * L_2 = ___dsp1;
		intptr_t* L_3 = L_2->get_address_of_handle_0();
		int32_t L_4 = Channel_FMOD5_Channel_GetDSP_mD2CD1B36E146B52F2F629970CA10BA29542ABAFB((intptr_t)L_0, L_1, (intptr_t*)L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_getDSP_mBC4C4D4D760ED56C81F603A3A8FD3759C120E641_AdjustorThunk (RuntimeObject * __this, int32_t ___index0, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * ___dsp1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_getDSP_mBC4C4D4D760ED56C81F603A3A8FD3759C120E641(_thisAdjusted, ___index0, ___dsp1, method);
}
// FMOD.RESULT FMOD.Channel::addDSP(System.Int32,FMOD.DSP)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_addDSP_m38A64EE2F27BA1F350ECA6FFD4C83727298A80B9 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, int32_t ___index0, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___dsp1, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_AddDSP(this.handle, index, dsp.handle);
		intptr_t L_0 = __this->get_handle_0();
		int32_t L_1 = ___index0;
		DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  L_2 = ___dsp1;
		intptr_t L_3 = L_2.get_handle_0();
		int32_t L_4 = Channel_FMOD5_Channel_AddDSP_m37A33AD192FA575ACB1C16C7A52FC1546E14E8C8((intptr_t)L_0, L_1, (intptr_t)L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_addDSP_m38A64EE2F27BA1F350ECA6FFD4C83727298A80B9_AdjustorThunk (RuntimeObject * __this, int32_t ___index0, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___dsp1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_addDSP_m38A64EE2F27BA1F350ECA6FFD4C83727298A80B9(_thisAdjusted, ___index0, ___dsp1, method);
}
// FMOD.RESULT FMOD.Channel::removeDSP(FMOD.DSP)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_removeDSP_m6436F31166E3C1CA7E4997AEBE424C580F938B8B (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___dsp0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_RemoveDSP(this.handle, dsp.handle);
		intptr_t L_0 = __this->get_handle_0();
		DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  L_1 = ___dsp0;
		intptr_t L_2 = L_1.get_handle_0();
		int32_t L_3 = Channel_FMOD5_Channel_RemoveDSP_m31ECB113E56C9FECE47E26BD66FE8360E41A5021((intptr_t)L_0, (intptr_t)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_removeDSP_m6436F31166E3C1CA7E4997AEBE424C580F938B8B_AdjustorThunk (RuntimeObject * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___dsp0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_removeDSP_m6436F31166E3C1CA7E4997AEBE424C580F938B8B(_thisAdjusted, ___dsp0, method);
}
// FMOD.RESULT FMOD.Channel::getNumDSPs(System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getNumDSPs_m007B54911568EBBD2745D9BD3C82A41955D41A43 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, int32_t* ___numdsps0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_GetNumDSPs(this.handle, out numdsps);
		intptr_t L_0 = __this->get_handle_0();
		int32_t* L_1 = ___numdsps0;
		int32_t L_2 = Channel_FMOD5_Channel_GetNumDSPs_m5978F8695FE3137860A8A5F5CFF2F27A77BACE95((intptr_t)L_0, (int32_t*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_getNumDSPs_m007B54911568EBBD2745D9BD3C82A41955D41A43_AdjustorThunk (RuntimeObject * __this, int32_t* ___numdsps0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_getNumDSPs_m007B54911568EBBD2745D9BD3C82A41955D41A43(_thisAdjusted, ___numdsps0, method);
}
// FMOD.RESULT FMOD.Channel::setDSPIndex(FMOD.DSP,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setDSPIndex_mA39923787959A8CE3F0FB4C8076BFDDC8332FDFF (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___dsp0, int32_t ___index1, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_SetDSPIndex(this.handle, dsp.handle, index);
		intptr_t L_0 = __this->get_handle_0();
		DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  L_1 = ___dsp0;
		intptr_t L_2 = L_1.get_handle_0();
		int32_t L_3 = ___index1;
		int32_t L_4 = Channel_FMOD5_Channel_SetDSPIndex_m311D6577B2812BE7DF785F873593004A1D96BDD6((intptr_t)L_0, (intptr_t)L_2, L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_setDSPIndex_mA39923787959A8CE3F0FB4C8076BFDDC8332FDFF_AdjustorThunk (RuntimeObject * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___dsp0, int32_t ___index1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_setDSPIndex_mA39923787959A8CE3F0FB4C8076BFDDC8332FDFF(_thisAdjusted, ___dsp0, ___index1, method);
}
// FMOD.RESULT FMOD.Channel::getDSPIndex(FMOD.DSP,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getDSPIndex_mD654405243361EEB7092303C6E5D69D70B405D03 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___dsp0, int32_t* ___index1, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_GetDSPIndex(this.handle, dsp.handle, out index);
		intptr_t L_0 = __this->get_handle_0();
		DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  L_1 = ___dsp0;
		intptr_t L_2 = L_1.get_handle_0();
		int32_t* L_3 = ___index1;
		int32_t L_4 = Channel_FMOD5_Channel_GetDSPIndex_m83C92691848DD8CC89FBD344B2FB23516A2E874A((intptr_t)L_0, (intptr_t)L_2, (int32_t*)L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_getDSPIndex_mD654405243361EEB7092303C6E5D69D70B405D03_AdjustorThunk (RuntimeObject * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___dsp0, int32_t* ___index1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_getDSPIndex_mD654405243361EEB7092303C6E5D69D70B405D03(_thisAdjusted, ___dsp0, ___index1, method);
}
// FMOD.RESULT FMOD.Channel::set3DAttributes(FMOD.VECTOR&,FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_set3DAttributes_mBCCF587430290C4827F8472723F6D02760BE95E7 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___pos0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___vel1, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_Set3DAttributes(this.handle, ref pos, ref vel);
		intptr_t L_0 = __this->get_handle_0();
		VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * L_1 = ___pos0;
		VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * L_2 = ___vel1;
		int32_t L_3 = Channel_FMOD5_Channel_Set3DAttributes_m5C28FF6966651D85308AF42EBAF1DFAD049A6930((intptr_t)L_0, (VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *)L_1, (VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_set3DAttributes_mBCCF587430290C4827F8472723F6D02760BE95E7_AdjustorThunk (RuntimeObject * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___pos0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___vel1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_set3DAttributes_mBCCF587430290C4827F8472723F6D02760BE95E7(_thisAdjusted, ___pos0, ___vel1, method);
}
// FMOD.RESULT FMOD.Channel::get3DAttributes(FMOD.VECTOR&,FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_get3DAttributes_m370A321CE9C8F21FF047C2CF142B39DF7BCB8A5E (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___pos0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___vel1, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_Get3DAttributes(this.handle, out pos, out vel);
		intptr_t L_0 = __this->get_handle_0();
		VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * L_1 = ___pos0;
		VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * L_2 = ___vel1;
		int32_t L_3 = Channel_FMOD5_Channel_Get3DAttributes_mC59C68F24306A674C42D634474DDD5990188DA25((intptr_t)L_0, (VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *)L_1, (VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_get3DAttributes_m370A321CE9C8F21FF047C2CF142B39DF7BCB8A5E_AdjustorThunk (RuntimeObject * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___pos0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___vel1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_get3DAttributes_m370A321CE9C8F21FF047C2CF142B39DF7BCB8A5E(_thisAdjusted, ___pos0, ___vel1, method);
}
// FMOD.RESULT FMOD.Channel::set3DMinMaxDistance(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_set3DMinMaxDistance_m2B6A575A4347C4AF92A7A4B6D34DD0666E96A7C1 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float ___mindistance0, float ___maxdistance1, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_Set3DMinMaxDistance(this.handle, mindistance, maxdistance);
		intptr_t L_0 = __this->get_handle_0();
		float L_1 = ___mindistance0;
		float L_2 = ___maxdistance1;
		int32_t L_3 = Channel_FMOD5_Channel_Set3DMinMaxDistance_m33B3D9323FF5E8E61ACA97D7012D6BE06CECCECA((intptr_t)L_0, L_1, L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_set3DMinMaxDistance_m2B6A575A4347C4AF92A7A4B6D34DD0666E96A7C1_AdjustorThunk (RuntimeObject * __this, float ___mindistance0, float ___maxdistance1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_set3DMinMaxDistance_m2B6A575A4347C4AF92A7A4B6D34DD0666E96A7C1(_thisAdjusted, ___mindistance0, ___maxdistance1, method);
}
// FMOD.RESULT FMOD.Channel::get3DMinMaxDistance(System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_get3DMinMaxDistance_m9C117E504021FCA217297388392E5EC68581BCA1 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float* ___mindistance0, float* ___maxdistance1, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_Get3DMinMaxDistance(this.handle, out mindistance, out maxdistance);
		intptr_t L_0 = __this->get_handle_0();
		float* L_1 = ___mindistance0;
		float* L_2 = ___maxdistance1;
		int32_t L_3 = Channel_FMOD5_Channel_Get3DMinMaxDistance_mC34A3CB41FED1CC47E487A57D80D5251726B09D0((intptr_t)L_0, (float*)L_1, (float*)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_get3DMinMaxDistance_m9C117E504021FCA217297388392E5EC68581BCA1_AdjustorThunk (RuntimeObject * __this, float* ___mindistance0, float* ___maxdistance1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_get3DMinMaxDistance_m9C117E504021FCA217297388392E5EC68581BCA1(_thisAdjusted, ___mindistance0, ___maxdistance1, method);
}
// FMOD.RESULT FMOD.Channel::set3DConeSettings(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_set3DConeSettings_mC1B2242ABC50E4CEC46DCF48361CDEF0B9E32A81 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float ___insideconeangle0, float ___outsideconeangle1, float ___outsidevolume2, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_Set3DConeSettings(this.handle, insideconeangle, outsideconeangle, outsidevolume);
		intptr_t L_0 = __this->get_handle_0();
		float L_1 = ___insideconeangle0;
		float L_2 = ___outsideconeangle1;
		float L_3 = ___outsidevolume2;
		int32_t L_4 = Channel_FMOD5_Channel_Set3DConeSettings_m1E46C0748EF7F2C1CAFDCFE3435F9A1097617A99((intptr_t)L_0, L_1, L_2, L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_set3DConeSettings_mC1B2242ABC50E4CEC46DCF48361CDEF0B9E32A81_AdjustorThunk (RuntimeObject * __this, float ___insideconeangle0, float ___outsideconeangle1, float ___outsidevolume2, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_set3DConeSettings_mC1B2242ABC50E4CEC46DCF48361CDEF0B9E32A81(_thisAdjusted, ___insideconeangle0, ___outsideconeangle1, ___outsidevolume2, method);
}
// FMOD.RESULT FMOD.Channel::get3DConeSettings(System.Single&,System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_get3DConeSettings_m594618E3B55AEA47C6149EFE1EEC340B9D0D3331 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float* ___insideconeangle0, float* ___outsideconeangle1, float* ___outsidevolume2, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_Get3DConeSettings(this.handle, out insideconeangle, out outsideconeangle, out outsidevolume);
		intptr_t L_0 = __this->get_handle_0();
		float* L_1 = ___insideconeangle0;
		float* L_2 = ___outsideconeangle1;
		float* L_3 = ___outsidevolume2;
		int32_t L_4 = Channel_FMOD5_Channel_Get3DConeSettings_m1FABFBE23D5AF54E4C79E1C920A11A5BB0D5327A((intptr_t)L_0, (float*)L_1, (float*)L_2, (float*)L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_get3DConeSettings_m594618E3B55AEA47C6149EFE1EEC340B9D0D3331_AdjustorThunk (RuntimeObject * __this, float* ___insideconeangle0, float* ___outsideconeangle1, float* ___outsidevolume2, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_get3DConeSettings_m594618E3B55AEA47C6149EFE1EEC340B9D0D3331(_thisAdjusted, ___insideconeangle0, ___outsideconeangle1, ___outsidevolume2, method);
}
// FMOD.RESULT FMOD.Channel::set3DConeOrientation(FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_set3DConeOrientation_mF7391D50F55408CEBDD830363DA9EBFF17FF3BDA (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___orientation0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_Set3DConeOrientation(this.handle, ref orientation);
		intptr_t L_0 = __this->get_handle_0();
		VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * L_1 = ___orientation0;
		int32_t L_2 = Channel_FMOD5_Channel_Set3DConeOrientation_mCFEB777E567E041FA42263880E0438E3B1E20883((intptr_t)L_0, (VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_set3DConeOrientation_mF7391D50F55408CEBDD830363DA9EBFF17FF3BDA_AdjustorThunk (RuntimeObject * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___orientation0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_set3DConeOrientation_mF7391D50F55408CEBDD830363DA9EBFF17FF3BDA(_thisAdjusted, ___orientation0, method);
}
// FMOD.RESULT FMOD.Channel::get3DConeOrientation(FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_get3DConeOrientation_mA800502057234726083BA1081F4099A4DDB6E31C (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___orientation0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_Get3DConeOrientation(this.handle, out orientation);
		intptr_t L_0 = __this->get_handle_0();
		VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * L_1 = ___orientation0;
		int32_t L_2 = Channel_FMOD5_Channel_Get3DConeOrientation_m68A3101A5998C8053048DC7411313B023BABA9A0((intptr_t)L_0, (VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_get3DConeOrientation_mA800502057234726083BA1081F4099A4DDB6E31C_AdjustorThunk (RuntimeObject * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___orientation0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_get3DConeOrientation_mA800502057234726083BA1081F4099A4DDB6E31C(_thisAdjusted, ___orientation0, method);
}
// FMOD.RESULT FMOD.Channel::set3DCustomRolloff(FMOD.VECTOR&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_set3DCustomRolloff_m7C721D59B02808278401E1A226DC5AA1525BE773 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___points0, int32_t ___numpoints1, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_Set3DCustomRolloff(this.handle, ref points, numpoints);
		intptr_t L_0 = __this->get_handle_0();
		VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * L_1 = ___points0;
		int32_t L_2 = ___numpoints1;
		int32_t L_3 = Channel_FMOD5_Channel_Set3DCustomRolloff_mD491EB73CA60C2C2CD1A50CD418C340EB3421C55((intptr_t)L_0, (VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *)L_1, L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_set3DCustomRolloff_m7C721D59B02808278401E1A226DC5AA1525BE773_AdjustorThunk (RuntimeObject * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___points0, int32_t ___numpoints1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_set3DCustomRolloff_m7C721D59B02808278401E1A226DC5AA1525BE773(_thisAdjusted, ___points0, ___numpoints1, method);
}
// FMOD.RESULT FMOD.Channel::get3DCustomRolloff(System.IntPtr&,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_get3DCustomRolloff_mE10B67FA024E42BA2D01324F36918766059A0C73 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, intptr_t* ___points0, int32_t* ___numpoints1, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_Get3DCustomRolloff(this.handle, out points, out numpoints);
		intptr_t L_0 = __this->get_handle_0();
		intptr_t* L_1 = ___points0;
		int32_t* L_2 = ___numpoints1;
		int32_t L_3 = Channel_FMOD5_Channel_Get3DCustomRolloff_mA253F0237FCDE57E978D1B8DD9C707C2CE2BD971((intptr_t)L_0, (intptr_t*)L_1, (int32_t*)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_get3DCustomRolloff_mE10B67FA024E42BA2D01324F36918766059A0C73_AdjustorThunk (RuntimeObject * __this, intptr_t* ___points0, int32_t* ___numpoints1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_get3DCustomRolloff_mE10B67FA024E42BA2D01324F36918766059A0C73(_thisAdjusted, ___points0, ___numpoints1, method);
}
// FMOD.RESULT FMOD.Channel::set3DOcclusion(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_set3DOcclusion_mE3B3F9384381216FB31DE383046AD3B850354D9B (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float ___directocclusion0, float ___reverbocclusion1, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_Set3DOcclusion(this.handle, directocclusion, reverbocclusion);
		intptr_t L_0 = __this->get_handle_0();
		float L_1 = ___directocclusion0;
		float L_2 = ___reverbocclusion1;
		int32_t L_3 = Channel_FMOD5_Channel_Set3DOcclusion_m82BD2CABD57A11B64FF54E2EA695DB6FC44BEFC6((intptr_t)L_0, L_1, L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_set3DOcclusion_mE3B3F9384381216FB31DE383046AD3B850354D9B_AdjustorThunk (RuntimeObject * __this, float ___directocclusion0, float ___reverbocclusion1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_set3DOcclusion_mE3B3F9384381216FB31DE383046AD3B850354D9B(_thisAdjusted, ___directocclusion0, ___reverbocclusion1, method);
}
// FMOD.RESULT FMOD.Channel::get3DOcclusion(System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_get3DOcclusion_m38DF95871EEA232415BEA69B9C05A228A38D6D65 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float* ___directocclusion0, float* ___reverbocclusion1, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_Get3DOcclusion(this.handle, out directocclusion, out reverbocclusion);
		intptr_t L_0 = __this->get_handle_0();
		float* L_1 = ___directocclusion0;
		float* L_2 = ___reverbocclusion1;
		int32_t L_3 = Channel_FMOD5_Channel_Get3DOcclusion_m2C7BFA827EA81DA7C8927C6936B177F6ED5FC7F3((intptr_t)L_0, (float*)L_1, (float*)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_get3DOcclusion_m38DF95871EEA232415BEA69B9C05A228A38D6D65_AdjustorThunk (RuntimeObject * __this, float* ___directocclusion0, float* ___reverbocclusion1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_get3DOcclusion_m38DF95871EEA232415BEA69B9C05A228A38D6D65(_thisAdjusted, ___directocclusion0, ___reverbocclusion1, method);
}
// FMOD.RESULT FMOD.Channel::set3DSpread(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_set3DSpread_m91B7A36352C1962D1024EA0C210A6706287E2665 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float ___angle0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_Set3DSpread(this.handle, angle);
		intptr_t L_0 = __this->get_handle_0();
		float L_1 = ___angle0;
		int32_t L_2 = Channel_FMOD5_Channel_Set3DSpread_m3E83CEF17AF4E72F0F114A285D02A824D733B350((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_set3DSpread_m91B7A36352C1962D1024EA0C210A6706287E2665_AdjustorThunk (RuntimeObject * __this, float ___angle0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_set3DSpread_m91B7A36352C1962D1024EA0C210A6706287E2665(_thisAdjusted, ___angle0, method);
}
// FMOD.RESULT FMOD.Channel::get3DSpread(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_get3DSpread_mDD7474886200B9929C885266643BECE87B3E5178 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float* ___angle0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_Get3DSpread(this.handle, out angle);
		intptr_t L_0 = __this->get_handle_0();
		float* L_1 = ___angle0;
		int32_t L_2 = Channel_FMOD5_Channel_Get3DSpread_m057E79C9C9DA9FA63DD2A7C1F6BCB72267FF5CE6((intptr_t)L_0, (float*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_get3DSpread_mDD7474886200B9929C885266643BECE87B3E5178_AdjustorThunk (RuntimeObject * __this, float* ___angle0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_get3DSpread_mDD7474886200B9929C885266643BECE87B3E5178(_thisAdjusted, ___angle0, method);
}
// FMOD.RESULT FMOD.Channel::set3DLevel(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_set3DLevel_m28CCBB1C381CF9FC7949DE964B60B98F3BE75D85 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float ___level0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_Set3DLevel(this.handle, level);
		intptr_t L_0 = __this->get_handle_0();
		float L_1 = ___level0;
		int32_t L_2 = Channel_FMOD5_Channel_Set3DLevel_mEA0418535561207F86497CC38A4C1C6C9983E806((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_set3DLevel_m28CCBB1C381CF9FC7949DE964B60B98F3BE75D85_AdjustorThunk (RuntimeObject * __this, float ___level0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_set3DLevel_m28CCBB1C381CF9FC7949DE964B60B98F3BE75D85(_thisAdjusted, ___level0, method);
}
// FMOD.RESULT FMOD.Channel::get3DLevel(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_get3DLevel_m5040FB74ACCAEC5AE0C112A8DC8111CCFB2BD46B (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float* ___level0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_Get3DLevel(this.handle, out level);
		intptr_t L_0 = __this->get_handle_0();
		float* L_1 = ___level0;
		int32_t L_2 = Channel_FMOD5_Channel_Get3DLevel_m565A368E7A2BA33C789DFFAB6A17D778DCF7D0AC((intptr_t)L_0, (float*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_get3DLevel_m5040FB74ACCAEC5AE0C112A8DC8111CCFB2BD46B_AdjustorThunk (RuntimeObject * __this, float* ___level0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_get3DLevel_m5040FB74ACCAEC5AE0C112A8DC8111CCFB2BD46B(_thisAdjusted, ___level0, method);
}
// FMOD.RESULT FMOD.Channel::set3DDopplerLevel(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_set3DDopplerLevel_m4A5ECFA7DE99D7085E6AC8B382F6B1B3A4FC0809 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float ___level0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_Set3DDopplerLevel(this.handle, level);
		intptr_t L_0 = __this->get_handle_0();
		float L_1 = ___level0;
		int32_t L_2 = Channel_FMOD5_Channel_Set3DDopplerLevel_mABDDCE433E27EB3FCCD72828842284F3C91E0D7A((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_set3DDopplerLevel_m4A5ECFA7DE99D7085E6AC8B382F6B1B3A4FC0809_AdjustorThunk (RuntimeObject * __this, float ___level0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_set3DDopplerLevel_m4A5ECFA7DE99D7085E6AC8B382F6B1B3A4FC0809(_thisAdjusted, ___level0, method);
}
// FMOD.RESULT FMOD.Channel::get3DDopplerLevel(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_get3DDopplerLevel_m2B7E4D9D5AF4DA553398E581B151B5E424791DB4 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, float* ___level0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_Get3DDopplerLevel(this.handle, out level);
		intptr_t L_0 = __this->get_handle_0();
		float* L_1 = ___level0;
		int32_t L_2 = Channel_FMOD5_Channel_Get3DDopplerLevel_m54A5ACC0258E39E135E2D0CCEEEE22B7F8B8F08D((intptr_t)L_0, (float*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_get3DDopplerLevel_m2B7E4D9D5AF4DA553398E581B151B5E424791DB4_AdjustorThunk (RuntimeObject * __this, float* ___level0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_get3DDopplerLevel_m2B7E4D9D5AF4DA553398E581B151B5E424791DB4(_thisAdjusted, ___level0, method);
}
// FMOD.RESULT FMOD.Channel::set3DDistanceFilter(System.Boolean,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_set3DDistanceFilter_mC7E4CF5257F20D705F5143269BD5169D2074B4BC (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, bool ___custom0, float ___customLevel1, float ___centerFreq2, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_Set3DDistanceFilter(this.handle, custom, customLevel, centerFreq);
		intptr_t L_0 = __this->get_handle_0();
		bool L_1 = ___custom0;
		float L_2 = ___customLevel1;
		float L_3 = ___centerFreq2;
		int32_t L_4 = Channel_FMOD5_Channel_Set3DDistanceFilter_mFE28A418BAADDDF114A5B6B64D5FDFB72C03AA42((intptr_t)L_0, L_1, L_2, L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_set3DDistanceFilter_mC7E4CF5257F20D705F5143269BD5169D2074B4BC_AdjustorThunk (RuntimeObject * __this, bool ___custom0, float ___customLevel1, float ___centerFreq2, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_set3DDistanceFilter_mC7E4CF5257F20D705F5143269BD5169D2074B4BC(_thisAdjusted, ___custom0, ___customLevel1, ___centerFreq2, method);
}
// FMOD.RESULT FMOD.Channel::get3DDistanceFilter(System.Boolean&,System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_get3DDistanceFilter_m5828517E43F2701D39C165A649D96FF0E0FA0062 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, bool* ___custom0, float* ___customLevel1, float* ___centerFreq2, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_Get3DDistanceFilter(this.handle, out custom, out customLevel, out centerFreq);
		intptr_t L_0 = __this->get_handle_0();
		bool* L_1 = ___custom0;
		float* L_2 = ___customLevel1;
		float* L_3 = ___centerFreq2;
		int32_t L_4 = Channel_FMOD5_Channel_Get3DDistanceFilter_mB53951F2028561350A25A47EBBF987EF49BA9291((intptr_t)L_0, (bool*)L_1, (float*)L_2, (float*)L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_get3DDistanceFilter_m5828517E43F2701D39C165A649D96FF0E0FA0062_AdjustorThunk (RuntimeObject * __this, bool* ___custom0, float* ___customLevel1, float* ___centerFreq2, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_get3DDistanceFilter_m5828517E43F2701D39C165A649D96FF0E0FA0062(_thisAdjusted, ___custom0, ___customLevel1, ___centerFreq2, method);
}
// FMOD.RESULT FMOD.Channel::setUserData(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_setUserData_mA7EE6EDF46333E8B8D94E41911FEBBC106CA21CF (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, intptr_t ___userdata0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_SetUserData(this.handle, userdata);
		intptr_t L_0 = __this->get_handle_0();
		intptr_t L_1 = ___userdata0;
		int32_t L_2 = Channel_FMOD5_Channel_SetUserData_m359F4FCB96AC079FCD3805C95E071D5D824B2F30((intptr_t)L_0, (intptr_t)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_setUserData_mA7EE6EDF46333E8B8D94E41911FEBBC106CA21CF_AdjustorThunk (RuntimeObject * __this, intptr_t ___userdata0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_setUserData_mA7EE6EDF46333E8B8D94E41911FEBBC106CA21CF(_thisAdjusted, ___userdata0, method);
}
// FMOD.RESULT FMOD.Channel::getUserData(System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_getUserData_m5267AF208D87ADB21E52B62474397CE0CE549457 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, intptr_t* ___userdata0, const RuntimeMethod* method)
{
	{
		// return FMOD5_Channel_GetUserData(this.handle, out userdata);
		intptr_t L_0 = __this->get_handle_0();
		intptr_t* L_1 = ___userdata0;
		int32_t L_2 = Channel_FMOD5_Channel_GetUserData_mE35AE3DF7BB18D18812731F99FBA4F1BCE409A29((intptr_t)L_0, (intptr_t*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t Channel_getUserData_m5267AF208D87ADB21E52B62474397CE0CE549457_AdjustorThunk (RuntimeObject * __this, intptr_t* ___userdata0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_getUserData_m5267AF208D87ADB21E52B62474397CE0CE549457(_thisAdjusted, ___userdata0, method);
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_SetFrequency(intptr_t, float);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetFrequency(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetFrequency_mAEBAB3BEDE5C66915F84F0AC272C00C2BDC67EAE (intptr_t ___channel0, float ___frequency1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_SetFrequency", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_SetFrequency)(___channel0, ___frequency1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___frequency1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_GetFrequency(intptr_t, float*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetFrequency(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetFrequency_m35EDEE84872CC9F99C20A047D7FF728BC9CAE4A9 (intptr_t ___channel0, float* ___frequency1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_GetFrequency", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_GetFrequency)(___channel0, ___frequency1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___frequency1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_SetPriority(intptr_t, int32_t);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetPriority(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetPriority_mEC7C9BADF2DECB310AA376363876F0FD5A01702A (intptr_t ___channel0, int32_t ___priority1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_SetPriority", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_SetPriority)(___channel0, ___priority1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___priority1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_GetPriority(intptr_t, int32_t*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetPriority(System.IntPtr,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetPriority_mC38533697389A1D62D4F25DEE10A3B747FA8C980 (intptr_t ___channel0, int32_t* ___priority1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_GetPriority", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_GetPriority)(___channel0, ___priority1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___priority1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_SetPosition(intptr_t, uint32_t, uint32_t);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetPosition(System.IntPtr,System.UInt32,FMOD.TIMEUNIT)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetPosition_m6880C790DEA3BA75D42FEE5DD13B243F5C6BC3AD (intptr_t ___channel0, uint32_t ___position1, uint32_t ___postype2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, uint32_t, uint32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint32_t) + sizeof(uint32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_SetPosition", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_SetPosition)(___channel0, ___position1, ___postype2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___position1, ___postype2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_GetPosition(intptr_t, uint32_t*, uint32_t);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetPosition(System.IntPtr,System.UInt32&,FMOD.TIMEUNIT)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetPosition_m7F2506851429CD1B101DD9E3326A3267FC706703 (intptr_t ___channel0, uint32_t* ___position1, uint32_t ___postype2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, uint32_t*, uint32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint32_t*) + sizeof(uint32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_GetPosition", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_GetPosition)(___channel0, ___position1, ___postype2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___position1, ___postype2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_SetChannelGroup(intptr_t, intptr_t);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetChannelGroup(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetChannelGroup_m51F8AC42FB44AAF5664CB8AA930450A9B9B3F0EA (intptr_t ___channel0, intptr_t ___channelgroup1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_SetChannelGroup", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_SetChannelGroup)(___channel0, ___channelgroup1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___channelgroup1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_GetChannelGroup(intptr_t, intptr_t*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetChannelGroup(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetChannelGroup_mF76B70C997F59B6787773751C9BD0B151AE1152B (intptr_t ___channel0, intptr_t* ___channelgroup1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_GetChannelGroup", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_GetChannelGroup)(___channel0, ___channelgroup1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___channelgroup1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_SetLoopCount(intptr_t, int32_t);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetLoopCount(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetLoopCount_m38CBD07F4D96F2C65D6923579F2F4CD05E1F4482 (intptr_t ___channel0, int32_t ___loopcount1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_SetLoopCount", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_SetLoopCount)(___channel0, ___loopcount1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___loopcount1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_GetLoopCount(intptr_t, int32_t*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetLoopCount(System.IntPtr,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetLoopCount_m47055F889B892224B3EF188C7E456B64FB79F6D9 (intptr_t ___channel0, int32_t* ___loopcount1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_GetLoopCount", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_GetLoopCount)(___channel0, ___loopcount1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___loopcount1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_SetLoopPoints(intptr_t, uint32_t, uint32_t, uint32_t, uint32_t);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetLoopPoints(System.IntPtr,System.UInt32,FMOD.TIMEUNIT,System.UInt32,FMOD.TIMEUNIT)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetLoopPoints_mD2BB5203D2567340FC16046A5D58BBF0DB363796 (intptr_t ___channel0, uint32_t ___loopstart1, uint32_t ___loopstarttype2, uint32_t ___loopend3, uint32_t ___loopendtype4, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, uint32_t, uint32_t, uint32_t, uint32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint32_t) + sizeof(uint32_t) + sizeof(uint32_t) + sizeof(uint32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_SetLoopPoints", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_SetLoopPoints)(___channel0, ___loopstart1, ___loopstarttype2, ___loopend3, ___loopendtype4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___loopstart1, ___loopstarttype2, ___loopend3, ___loopendtype4);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_GetLoopPoints(intptr_t, uint32_t*, uint32_t, uint32_t*, uint32_t);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetLoopPoints(System.IntPtr,System.UInt32&,FMOD.TIMEUNIT,System.UInt32&,FMOD.TIMEUNIT)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetLoopPoints_m1DFFC60A15B43F02610FCADC79D70BFBB7386B3C (intptr_t ___channel0, uint32_t* ___loopstart1, uint32_t ___loopstarttype2, uint32_t* ___loopend3, uint32_t ___loopendtype4, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, uint32_t*, uint32_t, uint32_t*, uint32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint32_t*) + sizeof(uint32_t) + sizeof(uint32_t*) + sizeof(uint32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_GetLoopPoints", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_GetLoopPoints)(___channel0, ___loopstart1, ___loopstarttype2, ___loopend3, ___loopendtype4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___loopstart1, ___loopstarttype2, ___loopend3, ___loopendtype4);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_IsVirtual(intptr_t, int32_t*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_IsVirtual(System.IntPtr,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_IsVirtual_m8BD74685BBB5BC10F5C57852D94EBB39D320CEDE (intptr_t ___channel0, bool* ___isvirtual1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_IsVirtual", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___isvirtual1' to native representation
	int32_t ____isvirtual1_empty = 0;
	int32_t* ____isvirtual1_marshaled = &____isvirtual1_empty;

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_IsVirtual)(___channel0, ____isvirtual1_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ____isvirtual1_marshaled);
	#endif

	// Marshaling of parameter '___isvirtual1' back from native representation
	bool _____isvirtual1_marshaled_unmarshaled_dereferenced = false;
	_____isvirtual1_marshaled_unmarshaled_dereferenced = static_cast<bool>(*____isvirtual1_marshaled);
	*___isvirtual1 = _____isvirtual1_marshaled_unmarshaled_dereferenced;

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_GetCurrentSound(intptr_t, intptr_t*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetCurrentSound(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetCurrentSound_m0B512D6032919634EBA997316D1426DC1FB850B9 (intptr_t ___channel0, intptr_t* ___sound1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_GetCurrentSound", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_GetCurrentSound)(___channel0, ___sound1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___sound1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_GetIndex(intptr_t, int32_t*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetIndex(System.IntPtr,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetIndex_m4A0B418C87062515D3A49550B117AD3400FF64BA (intptr_t ___channel0, int32_t* ___index1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_GetIndex", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_GetIndex)(___channel0, ___index1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___index1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_GetSystemObject(intptr_t, intptr_t*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetSystemObject(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetSystemObject_m7EDCAA1D75EE2736939FFC3588B3536BEF823CB6 (intptr_t ___channel0, intptr_t* ___system1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_GetSystemObject", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_GetSystemObject)(___channel0, ___system1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___system1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_Stop(intptr_t);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Stop(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Stop_m6FDB906C3CFE0A206E855F0CDEF105593809A1F2 (intptr_t ___channel0, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_Stop", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_Stop)(___channel0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_SetPaused(intptr_t, int32_t);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetPaused(System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetPaused_mC70B6B6901C82248D8998CB3689552CEF6D100D3 (intptr_t ___channel0, bool ___paused1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + 4;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_SetPaused", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_SetPaused)(___channel0, static_cast<int32_t>(___paused1));
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, static_cast<int32_t>(___paused1));
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_GetPaused(intptr_t, int32_t*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetPaused(System.IntPtr,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetPaused_mD0B2456F32EDC944F5BF1E43EB8389E9503602AF (intptr_t ___channel0, bool* ___paused1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_GetPaused", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___paused1' to native representation
	int32_t ____paused1_empty = 0;
	int32_t* ____paused1_marshaled = &____paused1_empty;

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_GetPaused)(___channel0, ____paused1_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ____paused1_marshaled);
	#endif

	// Marshaling of parameter '___paused1' back from native representation
	bool _____paused1_marshaled_unmarshaled_dereferenced = false;
	_____paused1_marshaled_unmarshaled_dereferenced = static_cast<bool>(*____paused1_marshaled);
	*___paused1 = _____paused1_marshaled_unmarshaled_dereferenced;

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_SetVolume(intptr_t, float);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetVolume(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetVolume_mA06948C17473A9586B3605B97409E50959751B64 (intptr_t ___channel0, float ___volume1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_SetVolume", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_SetVolume)(___channel0, ___volume1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___volume1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_GetVolume(intptr_t, float*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetVolume(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetVolume_m0833288C653EA3DEF653E253582D8CC1306009E5 (intptr_t ___channel0, float* ___volume1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_GetVolume", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_GetVolume)(___channel0, ___volume1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___volume1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_SetVolumeRamp(intptr_t, int32_t);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetVolumeRamp(System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetVolumeRamp_m8C0EB34262FA99DC2A4D1ED97F71F6FF49917D11 (intptr_t ___channel0, bool ___ramp1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + 4;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_SetVolumeRamp", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_SetVolumeRamp)(___channel0, static_cast<int32_t>(___ramp1));
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, static_cast<int32_t>(___ramp1));
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_GetVolumeRamp(intptr_t, int32_t*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetVolumeRamp(System.IntPtr,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetVolumeRamp_mDCF110828D76ED4AA46338EE00084339C5A87216 (intptr_t ___channel0, bool* ___ramp1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_GetVolumeRamp", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___ramp1' to native representation
	int32_t ____ramp1_empty = 0;
	int32_t* ____ramp1_marshaled = &____ramp1_empty;

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_GetVolumeRamp)(___channel0, ____ramp1_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ____ramp1_marshaled);
	#endif

	// Marshaling of parameter '___ramp1' back from native representation
	bool _____ramp1_marshaled_unmarshaled_dereferenced = false;
	_____ramp1_marshaled_unmarshaled_dereferenced = static_cast<bool>(*____ramp1_marshaled);
	*___ramp1 = _____ramp1_marshaled_unmarshaled_dereferenced;

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_GetAudibility(intptr_t, float*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetAudibility(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetAudibility_m2A80EA75F1544F1947A7DDCB054D1F88BF594C3A (intptr_t ___channel0, float* ___audibility1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_GetAudibility", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_GetAudibility)(___channel0, ___audibility1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___audibility1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_SetPitch(intptr_t, float);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetPitch(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetPitch_m549E1355687B9638C0736EC2D2046800086C8B68 (intptr_t ___channel0, float ___pitch1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_SetPitch", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_SetPitch)(___channel0, ___pitch1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___pitch1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_GetPitch(intptr_t, float*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetPitch(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetPitch_mB83CA5B83254E3D1334E5343431BA30BE7C06E99 (intptr_t ___channel0, float* ___pitch1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_GetPitch", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_GetPitch)(___channel0, ___pitch1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___pitch1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_SetMute(intptr_t, int32_t);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetMute(System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetMute_m75A3287E7D5CDA88FC8326E83360E4848576816D (intptr_t ___channel0, bool ___mute1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + 4;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_SetMute", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_SetMute)(___channel0, static_cast<int32_t>(___mute1));
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, static_cast<int32_t>(___mute1));
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_GetMute(intptr_t, int32_t*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetMute(System.IntPtr,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetMute_m94680903460895FF29AED33D76AEC4B9F239C0B3 (intptr_t ___channel0, bool* ___mute1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_GetMute", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___mute1' to native representation
	int32_t ____mute1_empty = 0;
	int32_t* ____mute1_marshaled = &____mute1_empty;

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_GetMute)(___channel0, ____mute1_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ____mute1_marshaled);
	#endif

	// Marshaling of parameter '___mute1' back from native representation
	bool _____mute1_marshaled_unmarshaled_dereferenced = false;
	_____mute1_marshaled_unmarshaled_dereferenced = static_cast<bool>(*____mute1_marshaled);
	*___mute1 = _____mute1_marshaled_unmarshaled_dereferenced;

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_SetReverbProperties(intptr_t, int32_t, float);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetReverbProperties(System.IntPtr,System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetReverbProperties_m08A03DBABEDB4176537EA71A9E35D404CA66C3FB (intptr_t ___channel0, int32_t ___instance1, float ___wet2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_SetReverbProperties", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_SetReverbProperties)(___channel0, ___instance1, ___wet2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___instance1, ___wet2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_GetReverbProperties(intptr_t, int32_t, float*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetReverbProperties(System.IntPtr,System.Int32,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetReverbProperties_mAC42354BD318ABC96D6B5DB5896C914516D0292C (intptr_t ___channel0, int32_t ___instance1, float* ___wet2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t, float*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_GetReverbProperties", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_GetReverbProperties)(___channel0, ___instance1, ___wet2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___instance1, ___wet2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_SetLowPassGain(intptr_t, float);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetLowPassGain(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetLowPassGain_mEA080D59BBAE780C648C949DD378946927F3C72B (intptr_t ___channel0, float ___gain1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_SetLowPassGain", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_SetLowPassGain)(___channel0, ___gain1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___gain1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_GetLowPassGain(intptr_t, float*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetLowPassGain(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetLowPassGain_m97370BA6DCA9A36A51C7AE3B6A5CF2A8A059CA36 (intptr_t ___channel0, float* ___gain1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_GetLowPassGain", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_GetLowPassGain)(___channel0, ___gain1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___gain1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_SetMode(intptr_t, uint32_t);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetMode(System.IntPtr,FMOD.MODE)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetMode_m2F2BC0115F72AE0A589D39CAC85463B207748494 (intptr_t ___channel0, uint32_t ___mode1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, uint32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_SetMode", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_SetMode)(___channel0, ___mode1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___mode1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_GetMode(intptr_t, uint32_t*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetMode(System.IntPtr,FMOD.MODE&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetMode_m93CC755DC00A9932E0E0C26BB61B64B12913011A (intptr_t ___channel0, uint32_t* ___mode1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, uint32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_GetMode", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_GetMode)(___channel0, ___mode1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___mode1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_SetCallback(intptr_t, Il2CppMethodPointer);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetCallback(System.IntPtr,FMOD.CHANNELCONTROL_CALLBACK)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetCallback_m7EF77501FDFA59F25D52D267D782AA6B3EB08778 (intptr_t ___channel0, CHANNELCONTROL_CALLBACK_t95D7949ECD13791F21B2CC1501D3F741AB1C9CF5 * ___callback1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_SetCallback", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___callback1' to native representation
	Il2CppMethodPointer ____callback1_marshaled = NULL;
	____callback1_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___callback1));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_SetCallback)(___channel0, ____callback1_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ____callback1_marshaled);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_IsPlaying(intptr_t, int32_t*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_IsPlaying(System.IntPtr,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_IsPlaying_m4EDD9C0801D5845718428144EDE7D52C0AC57F69 (intptr_t ___channel0, bool* ___isplaying1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_IsPlaying", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___isplaying1' to native representation
	int32_t ____isplaying1_empty = 0;
	int32_t* ____isplaying1_marshaled = &____isplaying1_empty;

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_IsPlaying)(___channel0, ____isplaying1_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ____isplaying1_marshaled);
	#endif

	// Marshaling of parameter '___isplaying1' back from native representation
	bool _____isplaying1_marshaled_unmarshaled_dereferenced = false;
	_____isplaying1_marshaled_unmarshaled_dereferenced = static_cast<bool>(*____isplaying1_marshaled);
	*___isplaying1 = _____isplaying1_marshaled_unmarshaled_dereferenced;

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_SetPan(intptr_t, float);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetPan(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetPan_m9D8C06BA87C75A4C5D86B59B7296ACBD2A2EE1FD (intptr_t ___channel0, float ___pan1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_SetPan", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_SetPan)(___channel0, ___pan1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___pan1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_SetMixLevelsOutput(intptr_t, float, float, float, float, float, float, float, float);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetMixLevelsOutput(System.IntPtr,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetMixLevelsOutput_m07B3078423C7B3BA0EF4EE7DCB5A74BB82AA4FBF (intptr_t ___channel0, float ___frontleft1, float ___frontright2, float ___center3, float ___lfe4, float ___surroundleft5, float ___surroundright6, float ___backleft7, float ___backright8, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float, float, float, float, float, float, float, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float) + sizeof(float) + sizeof(float) + sizeof(float) + sizeof(float) + sizeof(float) + sizeof(float) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_SetMixLevelsOutput", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_SetMixLevelsOutput)(___channel0, ___frontleft1, ___frontright2, ___center3, ___lfe4, ___surroundleft5, ___surroundright6, ___backleft7, ___backright8);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___frontleft1, ___frontright2, ___center3, ___lfe4, ___surroundleft5, ___surroundright6, ___backleft7, ___backright8);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_SetMixLevelsInput(intptr_t, float*, int32_t);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetMixLevelsInput(System.IntPtr,System.Single[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetMixLevelsInput_mB900BB86036DC4D287AF070A2FAB6D012938280F (intptr_t ___channel0, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___levels1, int32_t ___numlevels2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_SetMixLevelsInput", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___levels1' to native representation
	float* ____levels1_marshaled = NULL;
	if (___levels1 != NULL)
	{
		____levels1_marshaled = reinterpret_cast<float*>((___levels1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_SetMixLevelsInput)(___channel0, ____levels1_marshaled, ___numlevels2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ____levels1_marshaled, ___numlevels2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_SetMixMatrix(intptr_t, float*, int32_t, int32_t, int32_t);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetMixMatrix(System.IntPtr,System.Single[],System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetMixMatrix_mA4AE57B28C924F114EC26AE728C1F36F5C8BD01A (intptr_t ___channel0, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix1, int32_t ___outchannels2, int32_t ___inchannels3, int32_t ___inchannel_hop4, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_SetMixMatrix", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___matrix1' to native representation
	float* ____matrix1_marshaled = NULL;
	if (___matrix1 != NULL)
	{
		____matrix1_marshaled = reinterpret_cast<float*>((___matrix1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_SetMixMatrix)(___channel0, ____matrix1_marshaled, ___outchannels2, ___inchannels3, ___inchannel_hop4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ____matrix1_marshaled, ___outchannels2, ___inchannels3, ___inchannel_hop4);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_GetMixMatrix(intptr_t, float*, int32_t*, int32_t*, int32_t);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetMixMatrix(System.IntPtr,System.Single[],System.Int32&,System.Int32&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetMixMatrix_m13ABC60E817534529D1CDA0AB271D690CDB96160 (intptr_t ___channel0, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix1, int32_t* ___outchannels2, int32_t* ___inchannels3, int32_t ___inchannel_hop4, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*, int32_t*, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t*) + sizeof(int32_t*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_GetMixMatrix", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___matrix1' to native representation
	float* ____matrix1_marshaled = NULL;
	if (___matrix1 != NULL)
	{
		____matrix1_marshaled = reinterpret_cast<float*>((___matrix1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_GetMixMatrix)(___channel0, ____matrix1_marshaled, ___outchannels2, ___inchannels3, ___inchannel_hop4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ____matrix1_marshaled, ___outchannels2, ___inchannels3, ___inchannel_hop4);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_GetDSPClock(intptr_t, uint64_t*, uint64_t*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetDSPClock(System.IntPtr,System.UInt64&,System.UInt64&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetDSPClock_m11871BCA7AB855D6D414D5B9C353430A13268ED1 (intptr_t ___channel0, uint64_t* ___dspclock1, uint64_t* ___parentclock2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, uint64_t*, uint64_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint64_t*) + sizeof(uint64_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_GetDSPClock", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_GetDSPClock)(___channel0, ___dspclock1, ___parentclock2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___dspclock1, ___parentclock2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_SetDelay(intptr_t, uint64_t, uint64_t, int32_t);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetDelay(System.IntPtr,System.UInt64,System.UInt64,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetDelay_m2B28A02E80B58A5BDA26731D60EAAC2AD0C67F95 (intptr_t ___channel0, uint64_t ___dspclock_start1, uint64_t ___dspclock_end2, bool ___stopchannels3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, uint64_t, uint64_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint64_t) + sizeof(uint64_t) + 4;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_SetDelay", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_SetDelay)(___channel0, ___dspclock_start1, ___dspclock_end2, static_cast<int32_t>(___stopchannels3));
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___dspclock_start1, ___dspclock_end2, static_cast<int32_t>(___stopchannels3));
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_GetDelay(intptr_t, uint64_t*, uint64_t*, intptr_t);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetDelay(System.IntPtr,System.UInt64&,System.UInt64&,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetDelay_mF8E5967F3315701B3C70757D8B51B9E43C28D5C6 (intptr_t ___channel0, uint64_t* ___dspclock_start1, uint64_t* ___dspclock_end2, intptr_t ___zero3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, uint64_t*, uint64_t*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint64_t*) + sizeof(uint64_t*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_GetDelay", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_GetDelay)(___channel0, ___dspclock_start1, ___dspclock_end2, ___zero3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___dspclock_start1, ___dspclock_end2, ___zero3);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetDelay(System.IntPtr,System.UInt64&,System.UInt64&,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetDelay_mF092BE9F560A57EAD28E8AEBFDFB5475B82FF1E7 (intptr_t ___channel0, uint64_t* ___dspclock_start1, uint64_t* ___dspclock_end2, bool* ___stopchannels3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, uint64_t*, uint64_t*, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint64_t*) + sizeof(uint64_t*) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_GetDelay", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___stopchannels3' to native representation
	int32_t ____stopchannels3_empty = 0;
	int32_t* ____stopchannels3_marshaled = &____stopchannels3_empty;

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_GetDelay)(___channel0, ___dspclock_start1, ___dspclock_end2, ____stopchannels3_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___dspclock_start1, ___dspclock_end2, ____stopchannels3_marshaled);
	#endif

	// Marshaling of parameter '___stopchannels3' back from native representation
	bool _____stopchannels3_marshaled_unmarshaled_dereferenced = false;
	_____stopchannels3_marshaled_unmarshaled_dereferenced = static_cast<bool>(*____stopchannels3_marshaled);
	*___stopchannels3 = _____stopchannels3_marshaled_unmarshaled_dereferenced;

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_AddFadePoint(intptr_t, uint64_t, float);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_AddFadePoint(System.IntPtr,System.UInt64,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_AddFadePoint_m263DF954D6DBF356D9CCFDCC7818C85BB2E2746E (intptr_t ___channel0, uint64_t ___dspclock1, float ___volume2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, uint64_t, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint64_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_AddFadePoint", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_AddFadePoint)(___channel0, ___dspclock1, ___volume2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___dspclock1, ___volume2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_SetFadePointRamp(intptr_t, uint64_t, float);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetFadePointRamp(System.IntPtr,System.UInt64,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetFadePointRamp_m47BC57731FAEA81423189F08AC6FA23F0E06FF16 (intptr_t ___channel0, uint64_t ___dspclock1, float ___volume2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, uint64_t, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint64_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_SetFadePointRamp", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_SetFadePointRamp)(___channel0, ___dspclock1, ___volume2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___dspclock1, ___volume2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_RemoveFadePoints(intptr_t, uint64_t, uint64_t);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_RemoveFadePoints(System.IntPtr,System.UInt64,System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_RemoveFadePoints_m9D0F3D5C64CCD1B46F712FFCF5E50B7664A363A5 (intptr_t ___channel0, uint64_t ___dspclock_start1, uint64_t ___dspclock_end2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, uint64_t, uint64_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint64_t) + sizeof(uint64_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_RemoveFadePoints", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_RemoveFadePoints)(___channel0, ___dspclock_start1, ___dspclock_end2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___dspclock_start1, ___dspclock_end2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_GetFadePoints(intptr_t, uint32_t*, uint64_t*, float*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetFadePoints(System.IntPtr,System.UInt32&,System.UInt64[],System.Single[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetFadePoints_mBEC57F9E7A3C9BD31BB2780D0798C7761DC3B80F (intptr_t ___channel0, uint32_t* ___numpoints1, UInt64U5BU5D_tA808FE881491284FF25AFDF5C4BC92A826031EF4* ___point_dspclock2, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___point_volume3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, uint32_t*, uint64_t*, float*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint32_t*) + sizeof(void*) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_GetFadePoints", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___point_dspclock2' to native representation
	uint64_t* ____point_dspclock2_marshaled = NULL;
	if (___point_dspclock2 != NULL)
	{
		____point_dspclock2_marshaled = reinterpret_cast<uint64_t*>((___point_dspclock2)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___point_volume3' to native representation
	float* ____point_volume3_marshaled = NULL;
	if (___point_volume3 != NULL)
	{
		____point_volume3_marshaled = reinterpret_cast<float*>((___point_volume3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_GetFadePoints)(___channel0, ___numpoints1, ____point_dspclock2_marshaled, ____point_volume3_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___numpoints1, ____point_dspclock2_marshaled, ____point_volume3_marshaled);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_GetDSP(intptr_t, int32_t, intptr_t*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetDSP(System.IntPtr,System.Int32,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetDSP_mD2CD1B36E146B52F2F629970CA10BA29542ABAFB (intptr_t ___channel0, int32_t ___index1, intptr_t* ___dsp2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_GetDSP", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_GetDSP)(___channel0, ___index1, ___dsp2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___index1, ___dsp2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_AddDSP(intptr_t, int32_t, intptr_t);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_AddDSP(System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_AddDSP_m37A33AD192FA575ACB1C16C7A52FC1546E14E8C8 (intptr_t ___channel0, int32_t ___index1, intptr_t ___dsp2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_AddDSP", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_AddDSP)(___channel0, ___index1, ___dsp2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___index1, ___dsp2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_RemoveDSP(intptr_t, intptr_t);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_RemoveDSP(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_RemoveDSP_m31ECB113E56C9FECE47E26BD66FE8360E41A5021 (intptr_t ___channel0, intptr_t ___dsp1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_RemoveDSP", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_RemoveDSP)(___channel0, ___dsp1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___dsp1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_GetNumDSPs(intptr_t, int32_t*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetNumDSPs(System.IntPtr,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetNumDSPs_m5978F8695FE3137860A8A5F5CFF2F27A77BACE95 (intptr_t ___channel0, int32_t* ___numdsps1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_GetNumDSPs", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_GetNumDSPs)(___channel0, ___numdsps1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___numdsps1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_SetDSPIndex(intptr_t, intptr_t, int32_t);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetDSPIndex(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetDSPIndex_m311D6577B2812BE7DF785F873593004A1D96BDD6 (intptr_t ___channel0, intptr_t ___dsp1, int32_t ___index2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_SetDSPIndex", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_SetDSPIndex)(___channel0, ___dsp1, ___index2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___dsp1, ___index2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_GetDSPIndex(intptr_t, intptr_t, int32_t*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetDSPIndex(System.IntPtr,System.IntPtr,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetDSPIndex_m83C92691848DD8CC89FBD344B2FB23516A2E874A (intptr_t ___channel0, intptr_t ___dsp1, int32_t* ___index2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_GetDSPIndex", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_GetDSPIndex)(___channel0, ___dsp1, ___index2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___dsp1, ___index2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_Set3DAttributes(intptr_t, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Set3DAttributes(System.IntPtr,FMOD.VECTOR&,FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Set3DAttributes_m5C28FF6966651D85308AF42EBAF1DFAD049A6930 (intptr_t ___channel0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___pos1, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___vel2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *) + sizeof(VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_Set3DAttributes", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_Set3DAttributes)(___channel0, ___pos1, ___vel2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___pos1, ___vel2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_Get3DAttributes(intptr_t, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Get3DAttributes(System.IntPtr,FMOD.VECTOR&,FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Get3DAttributes_mC59C68F24306A674C42D634474DDD5990188DA25 (intptr_t ___channel0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___pos1, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___vel2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *) + sizeof(VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_Get3DAttributes", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_Get3DAttributes)(___channel0, ___pos1, ___vel2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___pos1, ___vel2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_Set3DMinMaxDistance(intptr_t, float, float);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Set3DMinMaxDistance(System.IntPtr,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Set3DMinMaxDistance_m33B3D9323FF5E8E61ACA97D7012D6BE06CECCECA (intptr_t ___channel0, float ___mindistance1, float ___maxdistance2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_Set3DMinMaxDistance", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_Set3DMinMaxDistance)(___channel0, ___mindistance1, ___maxdistance2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___mindistance1, ___maxdistance2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_Get3DMinMaxDistance(intptr_t, float*, float*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Get3DMinMaxDistance(System.IntPtr,System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Get3DMinMaxDistance_mC34A3CB41FED1CC47E487A57D80D5251726B09D0 (intptr_t ___channel0, float* ___mindistance1, float* ___maxdistance2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*, float*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float*) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_Get3DMinMaxDistance", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_Get3DMinMaxDistance)(___channel0, ___mindistance1, ___maxdistance2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___mindistance1, ___maxdistance2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_Set3DConeSettings(intptr_t, float, float, float);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Set3DConeSettings(System.IntPtr,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Set3DConeSettings_m1E46C0748EF7F2C1CAFDCFE3435F9A1097617A99 (intptr_t ___channel0, float ___insideconeangle1, float ___outsideconeangle2, float ___outsidevolume3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float, float, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float) + sizeof(float) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_Set3DConeSettings", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_Set3DConeSettings)(___channel0, ___insideconeangle1, ___outsideconeangle2, ___outsidevolume3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___insideconeangle1, ___outsideconeangle2, ___outsidevolume3);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_Get3DConeSettings(intptr_t, float*, float*, float*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Get3DConeSettings(System.IntPtr,System.Single&,System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Get3DConeSettings_m1FABFBE23D5AF54E4C79E1C920A11A5BB0D5327A (intptr_t ___channel0, float* ___insideconeangle1, float* ___outsideconeangle2, float* ___outsidevolume3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*, float*, float*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float*) + sizeof(float*) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_Get3DConeSettings", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_Get3DConeSettings)(___channel0, ___insideconeangle1, ___outsideconeangle2, ___outsidevolume3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___insideconeangle1, ___outsideconeangle2, ___outsidevolume3);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_Set3DConeOrientation(intptr_t, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Set3DConeOrientation(System.IntPtr,FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Set3DConeOrientation_mCFEB777E567E041FA42263880E0438E3B1E20883 (intptr_t ___channel0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___orientation1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_Set3DConeOrientation", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_Set3DConeOrientation)(___channel0, ___orientation1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___orientation1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_Get3DConeOrientation(intptr_t, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Get3DConeOrientation(System.IntPtr,FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Get3DConeOrientation_m68A3101A5998C8053048DC7411313B023BABA9A0 (intptr_t ___channel0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___orientation1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_Get3DConeOrientation", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_Get3DConeOrientation)(___channel0, ___orientation1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___orientation1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_Set3DCustomRolloff(intptr_t, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *, int32_t);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Set3DCustomRolloff(System.IntPtr,FMOD.VECTOR&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Set3DCustomRolloff_mD491EB73CA60C2C2CD1A50CD418C340EB3421C55 (intptr_t ___channel0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___points1, int32_t ___numpoints2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_Set3DCustomRolloff", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_Set3DCustomRolloff)(___channel0, ___points1, ___numpoints2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___points1, ___numpoints2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_Get3DCustomRolloff(intptr_t, intptr_t*, int32_t*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Get3DCustomRolloff(System.IntPtr,System.IntPtr&,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Get3DCustomRolloff_mA253F0237FCDE57E978D1B8DD9C707C2CE2BD971 (intptr_t ___channel0, intptr_t* ___points1, int32_t* ___numpoints2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t*, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_Get3DCustomRolloff", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_Get3DCustomRolloff)(___channel0, ___points1, ___numpoints2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___points1, ___numpoints2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_Set3DOcclusion(intptr_t, float, float);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Set3DOcclusion(System.IntPtr,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Set3DOcclusion_m82BD2CABD57A11B64FF54E2EA695DB6FC44BEFC6 (intptr_t ___channel0, float ___directocclusion1, float ___reverbocclusion2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_Set3DOcclusion", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_Set3DOcclusion)(___channel0, ___directocclusion1, ___reverbocclusion2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___directocclusion1, ___reverbocclusion2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_Get3DOcclusion(intptr_t, float*, float*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Get3DOcclusion(System.IntPtr,System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Get3DOcclusion_m2C7BFA827EA81DA7C8927C6936B177F6ED5FC7F3 (intptr_t ___channel0, float* ___directocclusion1, float* ___reverbocclusion2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*, float*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float*) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_Get3DOcclusion", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_Get3DOcclusion)(___channel0, ___directocclusion1, ___reverbocclusion2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___directocclusion1, ___reverbocclusion2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_Set3DSpread(intptr_t, float);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Set3DSpread(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Set3DSpread_m3E83CEF17AF4E72F0F114A285D02A824D733B350 (intptr_t ___channel0, float ___angle1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_Set3DSpread", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_Set3DSpread)(___channel0, ___angle1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___angle1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_Get3DSpread(intptr_t, float*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Get3DSpread(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Get3DSpread_m057E79C9C9DA9FA63DD2A7C1F6BCB72267FF5CE6 (intptr_t ___channel0, float* ___angle1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_Get3DSpread", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_Get3DSpread)(___channel0, ___angle1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___angle1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_Set3DLevel(intptr_t, float);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Set3DLevel(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Set3DLevel_mEA0418535561207F86497CC38A4C1C6C9983E806 (intptr_t ___channel0, float ___level1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_Set3DLevel", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_Set3DLevel)(___channel0, ___level1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___level1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_Get3DLevel(intptr_t, float*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Get3DLevel(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Get3DLevel_m565A368E7A2BA33C789DFFAB6A17D778DCF7D0AC (intptr_t ___channel0, float* ___level1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_Get3DLevel", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_Get3DLevel)(___channel0, ___level1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___level1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_Set3DDopplerLevel(intptr_t, float);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Set3DDopplerLevel(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Set3DDopplerLevel_mABDDCE433E27EB3FCCD72828842284F3C91E0D7A (intptr_t ___channel0, float ___level1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_Set3DDopplerLevel", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_Set3DDopplerLevel)(___channel0, ___level1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___level1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_Get3DDopplerLevel(intptr_t, float*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Get3DDopplerLevel(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Get3DDopplerLevel_m54A5ACC0258E39E135E2D0CCEEEE22B7F8B8F08D (intptr_t ___channel0, float* ___level1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_Get3DDopplerLevel", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_Get3DDopplerLevel)(___channel0, ___level1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___level1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_Set3DDistanceFilter(intptr_t, int32_t, float, float);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Set3DDistanceFilter(System.IntPtr,System.Boolean,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Set3DDistanceFilter_mFE28A418BAADDDF114A5B6B64D5FDFB72C03AA42 (intptr_t ___channel0, bool ___custom1, float ___customLevel2, float ___centerFreq3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t, float, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + 4 + sizeof(float) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_Set3DDistanceFilter", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_Set3DDistanceFilter)(___channel0, static_cast<int32_t>(___custom1), ___customLevel2, ___centerFreq3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, static_cast<int32_t>(___custom1), ___customLevel2, ___centerFreq3);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_Get3DDistanceFilter(intptr_t, int32_t*, float*, float*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_Get3DDistanceFilter(System.IntPtr,System.Boolean&,System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_Get3DDistanceFilter_mB53951F2028561350A25A47EBBF987EF49BA9291 (intptr_t ___channel0, bool* ___custom1, float* ___customLevel2, float* ___centerFreq3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t*, float*, float*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t*) + sizeof(float*) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_Get3DDistanceFilter", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___custom1' to native representation
	int32_t ____custom1_empty = 0;
	int32_t* ____custom1_marshaled = &____custom1_empty;

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_Get3DDistanceFilter)(___channel0, ____custom1_marshaled, ___customLevel2, ___centerFreq3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ____custom1_marshaled, ___customLevel2, ___centerFreq3);
	#endif

	// Marshaling of parameter '___custom1' back from native representation
	bool _____custom1_marshaled_unmarshaled_dereferenced = false;
	_____custom1_marshaled_unmarshaled_dereferenced = static_cast<bool>(*____custom1_marshaled);
	*___custom1 = _____custom1_marshaled_unmarshaled_dereferenced;

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_SetUserData(intptr_t, intptr_t);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_SetUserData(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_SetUserData_m359F4FCB96AC079FCD3805C95E071D5D824B2F30 (intptr_t ___channel0, intptr_t ___userdata1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_SetUserData", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_SetUserData)(___channel0, ___userdata1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___userdata1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Channel_GetUserData(intptr_t, intptr_t*);
#endif
// FMOD.RESULT FMOD.Channel::FMOD5_Channel_GetUserData(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Channel_FMOD5_Channel_GetUserData_mE35AE3DF7BB18D18812731F99FBA4F1BCE409A29 (intptr_t ___channel0, intptr_t* ___userdata1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Channel_GetUserData", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Channel_GetUserData)(___channel0, ___userdata1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channel0, ___userdata1);
	#endif

	return returnValue;
}
// System.Boolean FMOD.Channel::hasHandle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Channel_hasHandle_mB3B2C4307E75D35F6521FF3374DAF1BEE793E506 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Channel_hasHandle_mB3B2C4307E75D35F6521FF3374DAF1BEE793E506_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public bool hasHandle()     { return this.handle != IntPtr.Zero; }
		intptr_t L_0 = __this->get_handle_0();
		bool L_1 = IntPtr_op_Inequality_mB4886A806009EA825EFCC60CD2A7F6EB8E273A61((intptr_t)L_0, (intptr_t)(0), /*hidden argument*/NULL);
		return L_1;
	}
}
IL2CPP_EXTERN_C  bool Channel_hasHandle_mB3B2C4307E75D35F6521FF3374DAF1BEE793E506_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	return Channel_hasHandle_mB3B2C4307E75D35F6521FF3374DAF1BEE793E506(_thisAdjusted, method);
}
// System.Void FMOD.Channel::clearHandle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Channel_clearHandle_m2DC368368C90A088742321ED558AA1CDF14FF2F6 (Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Channel_clearHandle_m2DC368368C90A088742321ED558AA1CDF14FF2F6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public void clearHandle()   { this.handle = IntPtr.Zero; }
		__this->set_handle_0((intptr_t)(0));
		// public void clearHandle()   { this.handle = IntPtr.Zero; }
		return;
	}
}
IL2CPP_EXTERN_C  void Channel_clearHandle_m2DC368368C90A088742321ED558AA1CDF14FF2F6_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * _thisAdjusted = reinterpret_cast<Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 *>(__this + _offset);
	Channel_clearHandle_m2DC368368C90A088742321ED558AA1CDF14FF2F6(_thisAdjusted, method);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// FMOD.RESULT FMOD.ChannelGroup::release()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_release_m1C76131F70CBCBEE3D21590813F5EC10F810A295 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_Release(this.handle);
		intptr_t L_0 = __this->get_handle_0();
		int32_t L_1 = ChannelGroup_FMOD5_ChannelGroup_Release_mCF7AE9552AADFB0BAD400F91F6B7711C58ADDB5D((intptr_t)L_0, /*hidden argument*/NULL);
		return L_1;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_release_m1C76131F70CBCBEE3D21590813F5EC10F810A295_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_release_m1C76131F70CBCBEE3D21590813F5EC10F810A295(_thisAdjusted, method);
}
// FMOD.RESULT FMOD.ChannelGroup::addGroup(FMOD.ChannelGroup,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_addGroup_mCE1145005428A1BEA29DC68CA9111F9CF27B6A7E (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069  ___group0, bool ___propagatedspclock1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ChannelGroup_addGroup_mCE1145005428A1BEA29DC68CA9111F9CF27B6A7E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return FMOD5_ChannelGroup_AddGroup(this.handle, group.handle, propagatedspclock, IntPtr.Zero);
		intptr_t L_0 = __this->get_handle_0();
		ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069  L_1 = ___group0;
		intptr_t L_2 = L_1.get_handle_0();
		bool L_3 = ___propagatedspclock1;
		int32_t L_4 = ChannelGroup_FMOD5_ChannelGroup_AddGroup_m1AEAAE2E9459894F8BD98DABE85E7F3AAC427FDC((intptr_t)L_0, (intptr_t)L_2, L_3, (intptr_t)(0), /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_addGroup_mCE1145005428A1BEA29DC68CA9111F9CF27B6A7E_AdjustorThunk (RuntimeObject * __this, ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069  ___group0, bool ___propagatedspclock1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_addGroup_mCE1145005428A1BEA29DC68CA9111F9CF27B6A7E(_thisAdjusted, ___group0, ___propagatedspclock1, method);
}
// FMOD.RESULT FMOD.ChannelGroup::addGroup(FMOD.ChannelGroup,System.Boolean,FMOD.DSPConnection&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_addGroup_m6CEFBBFF40C42C1D45983DC17B8A7CDFDC5631ED (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069  ___group0, bool ___propagatedspclock1, DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * ___connection2, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_AddGroup(this.handle, group.handle, propagatedspclock, out connection.handle);
		intptr_t L_0 = __this->get_handle_0();
		ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069  L_1 = ___group0;
		intptr_t L_2 = L_1.get_handle_0();
		bool L_3 = ___propagatedspclock1;
		DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * L_4 = ___connection2;
		intptr_t* L_5 = L_4->get_address_of_handle_0();
		int32_t L_6 = ChannelGroup_FMOD5_ChannelGroup_AddGroup_mFF9828E1578F297238D8EFB0E97ED6B77AB14F8A((intptr_t)L_0, (intptr_t)L_2, L_3, (intptr_t*)L_5, /*hidden argument*/NULL);
		return L_6;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_addGroup_m6CEFBBFF40C42C1D45983DC17B8A7CDFDC5631ED_AdjustorThunk (RuntimeObject * __this, ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069  ___group0, bool ___propagatedspclock1, DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * ___connection2, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_addGroup_m6CEFBBFF40C42C1D45983DC17B8A7CDFDC5631ED(_thisAdjusted, ___group0, ___propagatedspclock1, ___connection2, method);
}
// FMOD.RESULT FMOD.ChannelGroup::getNumGroups(System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getNumGroups_m3E4E03733490F1CBDE776CE418E412339FB062EA (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, int32_t* ___numgroups0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_GetNumGroups(this.handle, out numgroups);
		intptr_t L_0 = __this->get_handle_0();
		int32_t* L_1 = ___numgroups0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_GetNumGroups_mE17AF280FCCB51DD0A0D76467004627C1D5E82D3((intptr_t)L_0, (int32_t*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_getNumGroups_m3E4E03733490F1CBDE776CE418E412339FB062EA_AdjustorThunk (RuntimeObject * __this, int32_t* ___numgroups0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_getNumGroups_m3E4E03733490F1CBDE776CE418E412339FB062EA(_thisAdjusted, ___numgroups0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::getGroup(System.Int32,FMOD.ChannelGroup&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getGroup_m116076104D372B4B2D9228CAEFB356B06941411B (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, int32_t ___index0, ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * ___group1, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_GetGroup(this.handle, index, out group.handle);
		intptr_t L_0 = __this->get_handle_0();
		int32_t L_1 = ___index0;
		ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * L_2 = ___group1;
		intptr_t* L_3 = L_2->get_address_of_handle_0();
		int32_t L_4 = ChannelGroup_FMOD5_ChannelGroup_GetGroup_mEBC3C58A4B5081F2599D9D1A2A998B26F7AD54AD((intptr_t)L_0, L_1, (intptr_t*)L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_getGroup_m116076104D372B4B2D9228CAEFB356B06941411B_AdjustorThunk (RuntimeObject * __this, int32_t ___index0, ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * ___group1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_getGroup_m116076104D372B4B2D9228CAEFB356B06941411B(_thisAdjusted, ___index0, ___group1, method);
}
// FMOD.RESULT FMOD.ChannelGroup::getParentGroup(FMOD.ChannelGroup&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getParentGroup_m593E0D73F9BD1E00F414D1E0B596133F106E0DE2 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * ___group0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_GetParentGroup(this.handle, out group.handle);
		intptr_t L_0 = __this->get_handle_0();
		ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * L_1 = ___group0;
		intptr_t* L_2 = L_1->get_address_of_handle_0();
		int32_t L_3 = ChannelGroup_FMOD5_ChannelGroup_GetParentGroup_m8C563FBD98F9353C24A8B13DCF2958401E067E09((intptr_t)L_0, (intptr_t*)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_getParentGroup_m593E0D73F9BD1E00F414D1E0B596133F106E0DE2_AdjustorThunk (RuntimeObject * __this, ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * ___group0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_getParentGroup_m593E0D73F9BD1E00F414D1E0B596133F106E0DE2(_thisAdjusted, ___group0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::getName(System.String&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getName_m249DBCE8CDC68ECD72A98C92F305E556314C28DA (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, String_t** ___name0, int32_t ___namelen1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ChannelGroup_getName_m249DBCE8CDC68ECD72A98C92F305E556314C28DA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	intptr_t V_0;
	memset((&V_0), 0, sizeof(V_0));
	int32_t V_1 = 0;
	ThreadSafeEncoding_t9C88ACD17730C478FB2685CA11D1ABC64C1A1771 * V_2 = NULL;
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		// IntPtr stringMem = Marshal.AllocHGlobal(namelen);
		int32_t L_0 = ___namelen1;
		IL2CPP_RUNTIME_CLASS_INIT(Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var);
		intptr_t L_1 = Marshal_AllocHGlobal_m3BFCB876D7469108C8676D6DD90D943806C13A58(L_0, /*hidden argument*/NULL);
		V_0 = (intptr_t)L_1;
		// RESULT result = FMOD5_ChannelGroup_GetName(this.handle, stringMem, namelen);
		intptr_t L_2 = __this->get_handle_0();
		intptr_t L_3 = V_0;
		int32_t L_4 = ___namelen1;
		int32_t L_5 = ChannelGroup_FMOD5_ChannelGroup_GetName_m0253A55C677F233432F12BE9C5F8E11E8739892C((intptr_t)L_2, (intptr_t)L_3, L_4, /*hidden argument*/NULL);
		V_1 = L_5;
		// using (StringHelper.ThreadSafeEncoding encoder = StringHelper.GetFreeHelper())
		IL2CPP_RUNTIME_CLASS_INIT(StringHelper_tCA6285337EBB683D188638581D30D196C340F0FC_il2cpp_TypeInfo_var);
		ThreadSafeEncoding_t9C88ACD17730C478FB2685CA11D1ABC64C1A1771 * L_6 = StringHelper_GetFreeHelper_mF20CD435503694A169A0FBC7EDAD73E3BCE4E257(/*hidden argument*/NULL);
		V_2 = L_6;
	}

IL_001b:
	try
	{ // begin try (depth: 1)
		// name = encoder.stringFromNative(stringMem);
		String_t** L_7 = ___name0;
		ThreadSafeEncoding_t9C88ACD17730C478FB2685CA11D1ABC64C1A1771 * L_8 = V_2;
		intptr_t L_9 = V_0;
		NullCheck(L_8);
		String_t* L_10 = ThreadSafeEncoding_stringFromNative_m5D2DB516A8AF5CE6BC34A3DF0A402E4A6F2CD3A0(L_8, (intptr_t)L_9, /*hidden argument*/NULL);
		*((RuntimeObject **)L_7) = (RuntimeObject *)L_10;
		Il2CppCodeGenWriteBarrier((void**)(RuntimeObject **)L_7, (void*)(RuntimeObject *)L_10);
		// }
		IL2CPP_LEAVE(0x30, FINALLY_0026);
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0026;
	}

FINALLY_0026:
	{ // begin finally (depth: 1)
		{
			ThreadSafeEncoding_t9C88ACD17730C478FB2685CA11D1ABC64C1A1771 * L_11 = V_2;
			if (!L_11)
			{
				goto IL_002f;
			}
		}

IL_0029:
		{
			ThreadSafeEncoding_t9C88ACD17730C478FB2685CA11D1ABC64C1A1771 * L_12 = V_2;
			NullCheck(L_12);
			InterfaceActionInvoker0::Invoke(0 /* System.Void System.IDisposable::Dispose() */, IDisposable_t7218B22548186B208D65EA5B7870503810A2D15A_il2cpp_TypeInfo_var, L_12);
		}

IL_002f:
		{
			IL2CPP_END_FINALLY(38)
		}
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(38)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x30, IL_0030)
	}

IL_0030:
	{
		// Marshal.FreeHGlobal(stringMem);
		intptr_t L_13 = V_0;
		IL2CPP_RUNTIME_CLASS_INIT(Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var);
		Marshal_FreeHGlobal_mF098DF00F5341FDE4747A6F2004D5A0C9B03ED85((intptr_t)L_13, /*hidden argument*/NULL);
		// return result;
		int32_t L_14 = V_1;
		return L_14;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_getName_m249DBCE8CDC68ECD72A98C92F305E556314C28DA_AdjustorThunk (RuntimeObject * __this, String_t** ___name0, int32_t ___namelen1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_getName_m249DBCE8CDC68ECD72A98C92F305E556314C28DA(_thisAdjusted, ___name0, ___namelen1, method);
}
// FMOD.RESULT FMOD.ChannelGroup::getNumChannels(System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getNumChannels_m0B89B78D70EA56AFAB266B88FB1EF7784F1949CA (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, int32_t* ___numchannels0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_GetNumChannels(this.handle, out numchannels);
		intptr_t L_0 = __this->get_handle_0();
		int32_t* L_1 = ___numchannels0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_GetNumChannels_mC942911FB4218B0004E91DBFDB37A66B58CAAE10((intptr_t)L_0, (int32_t*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_getNumChannels_m0B89B78D70EA56AFAB266B88FB1EF7784F1949CA_AdjustorThunk (RuntimeObject * __this, int32_t* ___numchannels0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_getNumChannels_m0B89B78D70EA56AFAB266B88FB1EF7784F1949CA(_thisAdjusted, ___numchannels0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::getChannel(System.Int32,FMOD.Channel&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getChannel_mA5D971D838818FA12049F1B43889408AD2FCB165 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, int32_t ___index0, Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * ___channel1, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_GetChannel(this.handle, index, out channel.handle);
		intptr_t L_0 = __this->get_handle_0();
		int32_t L_1 = ___index0;
		Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * L_2 = ___channel1;
		intptr_t* L_3 = L_2->get_address_of_handle_0();
		int32_t L_4 = ChannelGroup_FMOD5_ChannelGroup_GetChannel_mF2648AB86AD5EFD7925A0ED999630D195D408816((intptr_t)L_0, L_1, (intptr_t*)L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_getChannel_mA5D971D838818FA12049F1B43889408AD2FCB165_AdjustorThunk (RuntimeObject * __this, int32_t ___index0, Channel_t09996FB7BBA181BA9D3598470C388E79484B20E4 * ___channel1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_getChannel_mA5D971D838818FA12049F1B43889408AD2FCB165(_thisAdjusted, ___index0, ___channel1, method);
}
// FMOD.RESULT FMOD.ChannelGroup::getSystemObject(FMOD.System&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getSystemObject_mC6401EDB885E94C6F6B3701E65BC45B6D0FF2739 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, System_t1E8F97CEB4B863C4A09A4EC514B0C27FBA8D08B7 * ___system0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_GetSystemObject(this.handle, out system.handle);
		intptr_t L_0 = __this->get_handle_0();
		System_t1E8F97CEB4B863C4A09A4EC514B0C27FBA8D08B7 * L_1 = ___system0;
		intptr_t* L_2 = L_1->get_address_of_handle_0();
		int32_t L_3 = ChannelGroup_FMOD5_ChannelGroup_GetSystemObject_m38BE230B59DA645955B18DE24A3DC88ABF1A22B7((intptr_t)L_0, (intptr_t*)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_getSystemObject_mC6401EDB885E94C6F6B3701E65BC45B6D0FF2739_AdjustorThunk (RuntimeObject * __this, System_t1E8F97CEB4B863C4A09A4EC514B0C27FBA8D08B7 * ___system0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_getSystemObject_mC6401EDB885E94C6F6B3701E65BC45B6D0FF2739(_thisAdjusted, ___system0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::stop()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_stop_m4ED408A83C2B4E83A49816082603D742C367D133 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_Stop(this.handle);
		intptr_t L_0 = __this->get_handle_0();
		int32_t L_1 = ChannelGroup_FMOD5_ChannelGroup_Stop_m0F989A2322E65BBEDF27EFEDBAE868BCE7F5B0F2((intptr_t)L_0, /*hidden argument*/NULL);
		return L_1;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_stop_m4ED408A83C2B4E83A49816082603D742C367D133_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_stop_m4ED408A83C2B4E83A49816082603D742C367D133(_thisAdjusted, method);
}
// FMOD.RESULT FMOD.ChannelGroup::setPaused(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setPaused_mF90E1D1467F50123CA850E1185239B89DC81F728 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, bool ___paused0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_SetPaused(this.handle, paused);
		intptr_t L_0 = __this->get_handle_0();
		bool L_1 = ___paused0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_SetPaused_mBE639C22AB5041CE3A7E0B6FE0D56439150EB78B((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_setPaused_mF90E1D1467F50123CA850E1185239B89DC81F728_AdjustorThunk (RuntimeObject * __this, bool ___paused0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_setPaused_mF90E1D1467F50123CA850E1185239B89DC81F728(_thisAdjusted, ___paused0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::getPaused(System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getPaused_mBCD3ECF079AAF02AF05B80FBAE826F8F9469E448 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, bool* ___paused0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_GetPaused(this.handle, out paused);
		intptr_t L_0 = __this->get_handle_0();
		bool* L_1 = ___paused0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_GetPaused_mD70E168FE815DF1DF9CD5BEDF16EB1D8E143FBF0((intptr_t)L_0, (bool*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_getPaused_mBCD3ECF079AAF02AF05B80FBAE826F8F9469E448_AdjustorThunk (RuntimeObject * __this, bool* ___paused0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_getPaused_mBCD3ECF079AAF02AF05B80FBAE826F8F9469E448(_thisAdjusted, ___paused0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::setVolume(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setVolume_mE0B27DBBED7048BFA7B897304CCB881AA06F551B (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float ___volume0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_SetVolume(this.handle, volume);
		intptr_t L_0 = __this->get_handle_0();
		float L_1 = ___volume0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_SetVolume_m807734AACF95B3B8C3680EE2631DEAF718056A99((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_setVolume_mE0B27DBBED7048BFA7B897304CCB881AA06F551B_AdjustorThunk (RuntimeObject * __this, float ___volume0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_setVolume_mE0B27DBBED7048BFA7B897304CCB881AA06F551B(_thisAdjusted, ___volume0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::getVolume(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getVolume_mF75F198E301C02C19FD412CB8E9B1602DA60CC7C (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float* ___volume0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_GetVolume(this.handle, out volume);
		intptr_t L_0 = __this->get_handle_0();
		float* L_1 = ___volume0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_GetVolume_mEF9C0BCAC316C02D30CC084956FE681C1C6547E4((intptr_t)L_0, (float*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_getVolume_mF75F198E301C02C19FD412CB8E9B1602DA60CC7C_AdjustorThunk (RuntimeObject * __this, float* ___volume0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_getVolume_mF75F198E301C02C19FD412CB8E9B1602DA60CC7C(_thisAdjusted, ___volume0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::setVolumeRamp(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setVolumeRamp_mE31F5D1CF2A5F67B223A1ACD94CCEA84BB2E4A5C (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, bool ___ramp0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_SetVolumeRamp(this.handle, ramp);
		intptr_t L_0 = __this->get_handle_0();
		bool L_1 = ___ramp0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_SetVolumeRamp_mA22F044E892707687F17D0954BC7AD84FE7756E3((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_setVolumeRamp_mE31F5D1CF2A5F67B223A1ACD94CCEA84BB2E4A5C_AdjustorThunk (RuntimeObject * __this, bool ___ramp0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_setVolumeRamp_mE31F5D1CF2A5F67B223A1ACD94CCEA84BB2E4A5C(_thisAdjusted, ___ramp0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::getVolumeRamp(System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getVolumeRamp_mEAE02167B4C82F515692A3C17997C51B1B5CC77B (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, bool* ___ramp0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_GetVolumeRamp(this.handle, out ramp);
		intptr_t L_0 = __this->get_handle_0();
		bool* L_1 = ___ramp0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_GetVolumeRamp_m43A95009E60FF18AB4878084AB71EAD3F0EE7E2E((intptr_t)L_0, (bool*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_getVolumeRamp_mEAE02167B4C82F515692A3C17997C51B1B5CC77B_AdjustorThunk (RuntimeObject * __this, bool* ___ramp0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_getVolumeRamp_mEAE02167B4C82F515692A3C17997C51B1B5CC77B(_thisAdjusted, ___ramp0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::getAudibility(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getAudibility_m7B9BDDBFD767F24198D8AF75C7C59ED7AAF8C070 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float* ___audibility0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_GetAudibility(this.handle, out audibility);
		intptr_t L_0 = __this->get_handle_0();
		float* L_1 = ___audibility0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_GetAudibility_mD1D78619DD2B29609D5E68DE5A1ED5F8525C9CDE((intptr_t)L_0, (float*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_getAudibility_m7B9BDDBFD767F24198D8AF75C7C59ED7AAF8C070_AdjustorThunk (RuntimeObject * __this, float* ___audibility0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_getAudibility_m7B9BDDBFD767F24198D8AF75C7C59ED7AAF8C070(_thisAdjusted, ___audibility0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::setPitch(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setPitch_mA374C7EEB52407834DC365C17E51BBF032BD7263 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float ___pitch0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_SetPitch(this.handle, pitch);
		intptr_t L_0 = __this->get_handle_0();
		float L_1 = ___pitch0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_SetPitch_m98E67DBF83E55357687C7EE41B281C75DFECB847((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_setPitch_mA374C7EEB52407834DC365C17E51BBF032BD7263_AdjustorThunk (RuntimeObject * __this, float ___pitch0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_setPitch_mA374C7EEB52407834DC365C17E51BBF032BD7263(_thisAdjusted, ___pitch0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::getPitch(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getPitch_mF870BF530D1D99F73F6BB0E1F821DDBA7C76365D (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float* ___pitch0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_GetPitch(this.handle, out pitch);
		intptr_t L_0 = __this->get_handle_0();
		float* L_1 = ___pitch0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_GetPitch_m9417E16234D88BE6267AA0E8E82FF4A3F6B934B9((intptr_t)L_0, (float*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_getPitch_mF870BF530D1D99F73F6BB0E1F821DDBA7C76365D_AdjustorThunk (RuntimeObject * __this, float* ___pitch0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_getPitch_mF870BF530D1D99F73F6BB0E1F821DDBA7C76365D(_thisAdjusted, ___pitch0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::setMute(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setMute_m258FF98011C114C69FB587FF2F8E6DC06EEE60E7 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, bool ___mute0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_SetMute(this.handle, mute);
		intptr_t L_0 = __this->get_handle_0();
		bool L_1 = ___mute0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_SetMute_m0147EC514B4C9428804295D19C16ADB61F8FC5F8((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_setMute_m258FF98011C114C69FB587FF2F8E6DC06EEE60E7_AdjustorThunk (RuntimeObject * __this, bool ___mute0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_setMute_m258FF98011C114C69FB587FF2F8E6DC06EEE60E7(_thisAdjusted, ___mute0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::getMute(System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getMute_mA322E5AD8090737BE368EA0F7C8588375F9979E6 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, bool* ___mute0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_GetMute(this.handle, out mute);
		intptr_t L_0 = __this->get_handle_0();
		bool* L_1 = ___mute0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_GetMute_mEF147FD210889FFC3D16F7A5A4D71824C91AF9BD((intptr_t)L_0, (bool*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_getMute_mA322E5AD8090737BE368EA0F7C8588375F9979E6_AdjustorThunk (RuntimeObject * __this, bool* ___mute0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_getMute_mA322E5AD8090737BE368EA0F7C8588375F9979E6(_thisAdjusted, ___mute0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::setReverbProperties(System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setReverbProperties_m392EF523D1FEAB8845DE4595D9E00D865C5C8EE4 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, int32_t ___instance0, float ___wet1, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_SetReverbProperties(this.handle, instance, wet);
		intptr_t L_0 = __this->get_handle_0();
		int32_t L_1 = ___instance0;
		float L_2 = ___wet1;
		int32_t L_3 = ChannelGroup_FMOD5_ChannelGroup_SetReverbProperties_m760B424E4C52928F32BA30F4FE906E5219B64635((intptr_t)L_0, L_1, L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_setReverbProperties_m392EF523D1FEAB8845DE4595D9E00D865C5C8EE4_AdjustorThunk (RuntimeObject * __this, int32_t ___instance0, float ___wet1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_setReverbProperties_m392EF523D1FEAB8845DE4595D9E00D865C5C8EE4(_thisAdjusted, ___instance0, ___wet1, method);
}
// FMOD.RESULT FMOD.ChannelGroup::getReverbProperties(System.Int32,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getReverbProperties_m2261E026DC1F7850FFC25C82CCC1EED3953B979A (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, int32_t ___instance0, float* ___wet1, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_GetReverbProperties(this.handle, instance, out wet);
		intptr_t L_0 = __this->get_handle_0();
		int32_t L_1 = ___instance0;
		float* L_2 = ___wet1;
		int32_t L_3 = ChannelGroup_FMOD5_ChannelGroup_GetReverbProperties_m0887C37F5BBCC41A60E312CF2A20BBB111634F80((intptr_t)L_0, L_1, (float*)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_getReverbProperties_m2261E026DC1F7850FFC25C82CCC1EED3953B979A_AdjustorThunk (RuntimeObject * __this, int32_t ___instance0, float* ___wet1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_getReverbProperties_m2261E026DC1F7850FFC25C82CCC1EED3953B979A(_thisAdjusted, ___instance0, ___wet1, method);
}
// FMOD.RESULT FMOD.ChannelGroup::setLowPassGain(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setLowPassGain_mB6E63048C1EADD67DADD3087F2438666A4BBB5CA (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float ___gain0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_SetLowPassGain(this.handle, gain);
		intptr_t L_0 = __this->get_handle_0();
		float L_1 = ___gain0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_SetLowPassGain_m02BD432F4C31A0AE5E61599FBAEA7EBD2D8666E6((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_setLowPassGain_mB6E63048C1EADD67DADD3087F2438666A4BBB5CA_AdjustorThunk (RuntimeObject * __this, float ___gain0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_setLowPassGain_mB6E63048C1EADD67DADD3087F2438666A4BBB5CA(_thisAdjusted, ___gain0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::getLowPassGain(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getLowPassGain_mA28C6A5E488485D1C7F6D98F2B59ECCFCC8D014B (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float* ___gain0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_GetLowPassGain(this.handle, out gain);
		intptr_t L_0 = __this->get_handle_0();
		float* L_1 = ___gain0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_GetLowPassGain_mDC0CDE3A6A056372C40F00AB03ED74B00C7784E8((intptr_t)L_0, (float*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_getLowPassGain_mA28C6A5E488485D1C7F6D98F2B59ECCFCC8D014B_AdjustorThunk (RuntimeObject * __this, float* ___gain0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_getLowPassGain_mA28C6A5E488485D1C7F6D98F2B59ECCFCC8D014B(_thisAdjusted, ___gain0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::setMode(FMOD.MODE)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setMode_mB692666128AD708FE713EA70769685367A8179B1 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, uint32_t ___mode0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_SetMode(this.handle, mode);
		intptr_t L_0 = __this->get_handle_0();
		uint32_t L_1 = ___mode0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_SetMode_m34FA3364D10D0EB736FF83109300BF3E1C406F22((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_setMode_mB692666128AD708FE713EA70769685367A8179B1_AdjustorThunk (RuntimeObject * __this, uint32_t ___mode0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_setMode_mB692666128AD708FE713EA70769685367A8179B1(_thisAdjusted, ___mode0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::getMode(FMOD.MODE&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getMode_mA38C266432659E17B921E412608AF7F592C17994 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, uint32_t* ___mode0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_GetMode(this.handle, out mode);
		intptr_t L_0 = __this->get_handle_0();
		uint32_t* L_1 = ___mode0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_GetMode_m94249A271BC8D9560E4B8DC005F9E48F1EC06923((intptr_t)L_0, (uint32_t*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_getMode_mA38C266432659E17B921E412608AF7F592C17994_AdjustorThunk (RuntimeObject * __this, uint32_t* ___mode0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_getMode_mA38C266432659E17B921E412608AF7F592C17994(_thisAdjusted, ___mode0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::setCallback(FMOD.CHANNELCONTROL_CALLBACK)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setCallback_mFA62D354532CECDCCC1A66B455001FDF93ACC249 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, CHANNELCONTROL_CALLBACK_t95D7949ECD13791F21B2CC1501D3F741AB1C9CF5 * ___callback0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_SetCallback(this.handle, callback);
		intptr_t L_0 = __this->get_handle_0();
		CHANNELCONTROL_CALLBACK_t95D7949ECD13791F21B2CC1501D3F741AB1C9CF5 * L_1 = ___callback0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_SetCallback_m5F8FFD6E9584EF32B42189A87F0739FE7E05D95D((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_setCallback_mFA62D354532CECDCCC1A66B455001FDF93ACC249_AdjustorThunk (RuntimeObject * __this, CHANNELCONTROL_CALLBACK_t95D7949ECD13791F21B2CC1501D3F741AB1C9CF5 * ___callback0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_setCallback_mFA62D354532CECDCCC1A66B455001FDF93ACC249(_thisAdjusted, ___callback0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::isPlaying(System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_isPlaying_m9C986AE34C99FE523F537493B45EB9B1F55AEA90 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, bool* ___isplaying0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_IsPlaying(this.handle, out isplaying);
		intptr_t L_0 = __this->get_handle_0();
		bool* L_1 = ___isplaying0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_IsPlaying_mEC677F7159FB2B4BB6D095E6ADD4CAF2D7D6990F((intptr_t)L_0, (bool*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_isPlaying_m9C986AE34C99FE523F537493B45EB9B1F55AEA90_AdjustorThunk (RuntimeObject * __this, bool* ___isplaying0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_isPlaying_m9C986AE34C99FE523F537493B45EB9B1F55AEA90(_thisAdjusted, ___isplaying0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::setPan(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setPan_m9EE4D1E5FC0C666ACF9033D3386CA18FF35F59CD (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float ___pan0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_SetPan(this.handle, pan);
		intptr_t L_0 = __this->get_handle_0();
		float L_1 = ___pan0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_SetPan_m7709AC32CEF6D8038E7AA694A37D04F612660449((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_setPan_m9EE4D1E5FC0C666ACF9033D3386CA18FF35F59CD_AdjustorThunk (RuntimeObject * __this, float ___pan0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_setPan_m9EE4D1E5FC0C666ACF9033D3386CA18FF35F59CD(_thisAdjusted, ___pan0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::setMixLevelsOutput(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setMixLevelsOutput_mC905B8BA92E42A844FBA7ECBE8F97C5C692006F1 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float ___frontleft0, float ___frontright1, float ___center2, float ___lfe3, float ___surroundleft4, float ___surroundright5, float ___backleft6, float ___backright7, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_SetMixLevelsOutput(this.handle, frontleft, frontright, center, lfe, surroundleft, surroundright, backleft, backright);
		intptr_t L_0 = __this->get_handle_0();
		float L_1 = ___frontleft0;
		float L_2 = ___frontright1;
		float L_3 = ___center2;
		float L_4 = ___lfe3;
		float L_5 = ___surroundleft4;
		float L_6 = ___surroundright5;
		float L_7 = ___backleft6;
		float L_8 = ___backright7;
		int32_t L_9 = ChannelGroup_FMOD5_ChannelGroup_SetMixLevelsOutput_mB39E3792DA1F8E82CC20D48E555C28A4D36D8759((intptr_t)L_0, L_1, L_2, L_3, L_4, L_5, L_6, L_7, L_8, /*hidden argument*/NULL);
		return L_9;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_setMixLevelsOutput_mC905B8BA92E42A844FBA7ECBE8F97C5C692006F1_AdjustorThunk (RuntimeObject * __this, float ___frontleft0, float ___frontright1, float ___center2, float ___lfe3, float ___surroundleft4, float ___surroundright5, float ___backleft6, float ___backright7, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_setMixLevelsOutput_mC905B8BA92E42A844FBA7ECBE8F97C5C692006F1(_thisAdjusted, ___frontleft0, ___frontright1, ___center2, ___lfe3, ___surroundleft4, ___surroundright5, ___backleft6, ___backright7, method);
}
// FMOD.RESULT FMOD.ChannelGroup::setMixLevelsInput(System.Single[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setMixLevelsInput_m4D65B63EE3132AD3A3CA059906464B73CC16EF71 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___levels0, int32_t ___numlevels1, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_SetMixLevelsInput(this.handle, levels, numlevels);
		intptr_t L_0 = __this->get_handle_0();
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_1 = ___levels0;
		int32_t L_2 = ___numlevels1;
		int32_t L_3 = ChannelGroup_FMOD5_ChannelGroup_SetMixLevelsInput_m1A3291A1578DC03E13D077EF603B156C035DA914((intptr_t)L_0, L_1, L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_setMixLevelsInput_m4D65B63EE3132AD3A3CA059906464B73CC16EF71_AdjustorThunk (RuntimeObject * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___levels0, int32_t ___numlevels1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_setMixLevelsInput_m4D65B63EE3132AD3A3CA059906464B73CC16EF71(_thisAdjusted, ___levels0, ___numlevels1, method);
}
// FMOD.RESULT FMOD.ChannelGroup::setMixMatrix(System.Single[],System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setMixMatrix_mAFF78D2BB81CD51FED98F7C1C2C4C1CEA8388F9F (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix0, int32_t ___outchannels1, int32_t ___inchannels2, int32_t ___inchannel_hop3, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_SetMixMatrix(this.handle, matrix, outchannels, inchannels, inchannel_hop);
		intptr_t L_0 = __this->get_handle_0();
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_1 = ___matrix0;
		int32_t L_2 = ___outchannels1;
		int32_t L_3 = ___inchannels2;
		int32_t L_4 = ___inchannel_hop3;
		int32_t L_5 = ChannelGroup_FMOD5_ChannelGroup_SetMixMatrix_m43CF6332FC8F8964CE0CD4F3BD220CEE30020073((intptr_t)L_0, L_1, L_2, L_3, L_4, /*hidden argument*/NULL);
		return L_5;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_setMixMatrix_mAFF78D2BB81CD51FED98F7C1C2C4C1CEA8388F9F_AdjustorThunk (RuntimeObject * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix0, int32_t ___outchannels1, int32_t ___inchannels2, int32_t ___inchannel_hop3, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_setMixMatrix_mAFF78D2BB81CD51FED98F7C1C2C4C1CEA8388F9F(_thisAdjusted, ___matrix0, ___outchannels1, ___inchannels2, ___inchannel_hop3, method);
}
// FMOD.RESULT FMOD.ChannelGroup::getMixMatrix(System.Single[],System.Int32&,System.Int32&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getMixMatrix_m6E40D58E085303C79ACD6F094BC96DEABE47291B (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix0, int32_t* ___outchannels1, int32_t* ___inchannels2, int32_t ___inchannel_hop3, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_GetMixMatrix(this.handle, matrix, out outchannels, out inchannels, inchannel_hop);
		intptr_t L_0 = __this->get_handle_0();
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_1 = ___matrix0;
		int32_t* L_2 = ___outchannels1;
		int32_t* L_3 = ___inchannels2;
		int32_t L_4 = ___inchannel_hop3;
		int32_t L_5 = ChannelGroup_FMOD5_ChannelGroup_GetMixMatrix_mC974B5D5F28AA65362C5371CF48A2736A0D8DF25((intptr_t)L_0, L_1, (int32_t*)L_2, (int32_t*)L_3, L_4, /*hidden argument*/NULL);
		return L_5;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_getMixMatrix_m6E40D58E085303C79ACD6F094BC96DEABE47291B_AdjustorThunk (RuntimeObject * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix0, int32_t* ___outchannels1, int32_t* ___inchannels2, int32_t ___inchannel_hop3, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_getMixMatrix_m6E40D58E085303C79ACD6F094BC96DEABE47291B(_thisAdjusted, ___matrix0, ___outchannels1, ___inchannels2, ___inchannel_hop3, method);
}
// FMOD.RESULT FMOD.ChannelGroup::getDSPClock(System.UInt64&,System.UInt64&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getDSPClock_m17A091F23CAAAFD81678C6BC139D557D893301CB (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, uint64_t* ___dspclock0, uint64_t* ___parentclock1, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_GetDSPClock(this.handle, out dspclock, out parentclock);
		intptr_t L_0 = __this->get_handle_0();
		uint64_t* L_1 = ___dspclock0;
		uint64_t* L_2 = ___parentclock1;
		int32_t L_3 = ChannelGroup_FMOD5_ChannelGroup_GetDSPClock_mAFD667C022D846D91821C9B0CC51C56D15958253((intptr_t)L_0, (uint64_t*)L_1, (uint64_t*)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_getDSPClock_m17A091F23CAAAFD81678C6BC139D557D893301CB_AdjustorThunk (RuntimeObject * __this, uint64_t* ___dspclock0, uint64_t* ___parentclock1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_getDSPClock_m17A091F23CAAAFD81678C6BC139D557D893301CB(_thisAdjusted, ___dspclock0, ___parentclock1, method);
}
// FMOD.RESULT FMOD.ChannelGroup::setDelay(System.UInt64,System.UInt64,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setDelay_mC8937376224CA521506DC916E7A6191FE54B6589 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, uint64_t ___dspclock_start0, uint64_t ___dspclock_end1, bool ___stopchannels2, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_SetDelay(this.handle, dspclock_start, dspclock_end, stopchannels);
		intptr_t L_0 = __this->get_handle_0();
		uint64_t L_1 = ___dspclock_start0;
		uint64_t L_2 = ___dspclock_end1;
		bool L_3 = ___stopchannels2;
		int32_t L_4 = ChannelGroup_FMOD5_ChannelGroup_SetDelay_m22361606893E41831736E545EB89CCC40643EF4F((intptr_t)L_0, L_1, L_2, L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_setDelay_mC8937376224CA521506DC916E7A6191FE54B6589_AdjustorThunk (RuntimeObject * __this, uint64_t ___dspclock_start0, uint64_t ___dspclock_end1, bool ___stopchannels2, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_setDelay_mC8937376224CA521506DC916E7A6191FE54B6589(_thisAdjusted, ___dspclock_start0, ___dspclock_end1, ___stopchannels2, method);
}
// FMOD.RESULT FMOD.ChannelGroup::getDelay(System.UInt64&,System.UInt64&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getDelay_m56C301B16C1652BB132B09653912491F7F17848E (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, uint64_t* ___dspclock_start0, uint64_t* ___dspclock_end1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ChannelGroup_getDelay_m56C301B16C1652BB132B09653912491F7F17848E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return FMOD5_ChannelGroup_GetDelay(this.handle, out dspclock_start, out dspclock_end, IntPtr.Zero);
		intptr_t L_0 = __this->get_handle_0();
		uint64_t* L_1 = ___dspclock_start0;
		uint64_t* L_2 = ___dspclock_end1;
		int32_t L_3 = ChannelGroup_FMOD5_ChannelGroup_GetDelay_m790CCF3CA70CDA18DA5A7777017069A5B6736707((intptr_t)L_0, (uint64_t*)L_1, (uint64_t*)L_2, (intptr_t)(0), /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_getDelay_m56C301B16C1652BB132B09653912491F7F17848E_AdjustorThunk (RuntimeObject * __this, uint64_t* ___dspclock_start0, uint64_t* ___dspclock_end1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_getDelay_m56C301B16C1652BB132B09653912491F7F17848E(_thisAdjusted, ___dspclock_start0, ___dspclock_end1, method);
}
// FMOD.RESULT FMOD.ChannelGroup::getDelay(System.UInt64&,System.UInt64&,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getDelay_m8F07C7096D589D4CBD236729215D30A59999CB32 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, uint64_t* ___dspclock_start0, uint64_t* ___dspclock_end1, bool* ___stopchannels2, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_GetDelay(this.handle, out dspclock_start, out dspclock_end, out stopchannels);
		intptr_t L_0 = __this->get_handle_0();
		uint64_t* L_1 = ___dspclock_start0;
		uint64_t* L_2 = ___dspclock_end1;
		bool* L_3 = ___stopchannels2;
		int32_t L_4 = ChannelGroup_FMOD5_ChannelGroup_GetDelay_m8E11B5F6380818473ED224CA76CFA6725A084AA3((intptr_t)L_0, (uint64_t*)L_1, (uint64_t*)L_2, (bool*)L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_getDelay_m8F07C7096D589D4CBD236729215D30A59999CB32_AdjustorThunk (RuntimeObject * __this, uint64_t* ___dspclock_start0, uint64_t* ___dspclock_end1, bool* ___stopchannels2, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_getDelay_m8F07C7096D589D4CBD236729215D30A59999CB32(_thisAdjusted, ___dspclock_start0, ___dspclock_end1, ___stopchannels2, method);
}
// FMOD.RESULT FMOD.ChannelGroup::addFadePoint(System.UInt64,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_addFadePoint_m2936401E5AB26CB019D16507ED0CF10186C5782A (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, uint64_t ___dspclock0, float ___volume1, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_AddFadePoint(this.handle, dspclock, volume);
		intptr_t L_0 = __this->get_handle_0();
		uint64_t L_1 = ___dspclock0;
		float L_2 = ___volume1;
		int32_t L_3 = ChannelGroup_FMOD5_ChannelGroup_AddFadePoint_mF64C02A4E035972F94811E69D29F041B26E27F63((intptr_t)L_0, L_1, L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_addFadePoint_m2936401E5AB26CB019D16507ED0CF10186C5782A_AdjustorThunk (RuntimeObject * __this, uint64_t ___dspclock0, float ___volume1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_addFadePoint_m2936401E5AB26CB019D16507ED0CF10186C5782A(_thisAdjusted, ___dspclock0, ___volume1, method);
}
// FMOD.RESULT FMOD.ChannelGroup::setFadePointRamp(System.UInt64,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setFadePointRamp_m514F1E78B543B3A48B53B70CDDF45202A11CA4E9 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, uint64_t ___dspclock0, float ___volume1, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_SetFadePointRamp(this.handle, dspclock, volume);
		intptr_t L_0 = __this->get_handle_0();
		uint64_t L_1 = ___dspclock0;
		float L_2 = ___volume1;
		int32_t L_3 = ChannelGroup_FMOD5_ChannelGroup_SetFadePointRamp_m3755C55B0105A5909C7933B5B508C612A72040F7((intptr_t)L_0, L_1, L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_setFadePointRamp_m514F1E78B543B3A48B53B70CDDF45202A11CA4E9_AdjustorThunk (RuntimeObject * __this, uint64_t ___dspclock0, float ___volume1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_setFadePointRamp_m514F1E78B543B3A48B53B70CDDF45202A11CA4E9(_thisAdjusted, ___dspclock0, ___volume1, method);
}
// FMOD.RESULT FMOD.ChannelGroup::removeFadePoints(System.UInt64,System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_removeFadePoints_m87985E8F95A609D55CC58E2D6FF013405C67299B (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, uint64_t ___dspclock_start0, uint64_t ___dspclock_end1, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_RemoveFadePoints(this.handle, dspclock_start, dspclock_end);
		intptr_t L_0 = __this->get_handle_0();
		uint64_t L_1 = ___dspclock_start0;
		uint64_t L_2 = ___dspclock_end1;
		int32_t L_3 = ChannelGroup_FMOD5_ChannelGroup_RemoveFadePoints_mB32A350562A1C1DAF8875C322BF2270247C87629((intptr_t)L_0, L_1, L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_removeFadePoints_m87985E8F95A609D55CC58E2D6FF013405C67299B_AdjustorThunk (RuntimeObject * __this, uint64_t ___dspclock_start0, uint64_t ___dspclock_end1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_removeFadePoints_m87985E8F95A609D55CC58E2D6FF013405C67299B(_thisAdjusted, ___dspclock_start0, ___dspclock_end1, method);
}
// FMOD.RESULT FMOD.ChannelGroup::getFadePoints(System.UInt32&,System.UInt64[],System.Single[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getFadePoints_m4156D385F044DB76B10F1942EC7E598F2FCC2FE3 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, uint32_t* ___numpoints0, UInt64U5BU5D_tA808FE881491284FF25AFDF5C4BC92A826031EF4* ___point_dspclock1, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___point_volume2, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_GetFadePoints(this.handle, ref numpoints, point_dspclock, point_volume);
		intptr_t L_0 = __this->get_handle_0();
		uint32_t* L_1 = ___numpoints0;
		UInt64U5BU5D_tA808FE881491284FF25AFDF5C4BC92A826031EF4* L_2 = ___point_dspclock1;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_3 = ___point_volume2;
		int32_t L_4 = ChannelGroup_FMOD5_ChannelGroup_GetFadePoints_m251D589DCCB47B5A27B2E1B133B291DD950EFAFC((intptr_t)L_0, (uint32_t*)L_1, L_2, L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_getFadePoints_m4156D385F044DB76B10F1942EC7E598F2FCC2FE3_AdjustorThunk (RuntimeObject * __this, uint32_t* ___numpoints0, UInt64U5BU5D_tA808FE881491284FF25AFDF5C4BC92A826031EF4* ___point_dspclock1, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___point_volume2, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_getFadePoints_m4156D385F044DB76B10F1942EC7E598F2FCC2FE3(_thisAdjusted, ___numpoints0, ___point_dspclock1, ___point_volume2, method);
}
// FMOD.RESULT FMOD.ChannelGroup::getDSP(System.Int32,FMOD.DSP&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getDSP_mA461676D8274C7750EE1071997D72C6311186FCC (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, int32_t ___index0, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * ___dsp1, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_GetDSP(this.handle, index, out dsp.handle);
		intptr_t L_0 = __this->get_handle_0();
		int32_t L_1 = ___index0;
		DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * L_2 = ___dsp1;
		intptr_t* L_3 = L_2->get_address_of_handle_0();
		int32_t L_4 = ChannelGroup_FMOD5_ChannelGroup_GetDSP_mCCAC7014A2AB297B97F7A1BAEB0157AE208F9A76((intptr_t)L_0, L_1, (intptr_t*)L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_getDSP_mA461676D8274C7750EE1071997D72C6311186FCC_AdjustorThunk (RuntimeObject * __this, int32_t ___index0, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * ___dsp1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_getDSP_mA461676D8274C7750EE1071997D72C6311186FCC(_thisAdjusted, ___index0, ___dsp1, method);
}
// FMOD.RESULT FMOD.ChannelGroup::addDSP(System.Int32,FMOD.DSP)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_addDSP_m91798C3A37B101A5B22E6EE8D6132474C48EA003 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, int32_t ___index0, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___dsp1, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_AddDSP(this.handle, index, dsp.handle);
		intptr_t L_0 = __this->get_handle_0();
		int32_t L_1 = ___index0;
		DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  L_2 = ___dsp1;
		intptr_t L_3 = L_2.get_handle_0();
		int32_t L_4 = ChannelGroup_FMOD5_ChannelGroup_AddDSP_m3BBD7F50976FC8CE402A75BA4326CD068CE8450D((intptr_t)L_0, L_1, (intptr_t)L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_addDSP_m91798C3A37B101A5B22E6EE8D6132474C48EA003_AdjustorThunk (RuntimeObject * __this, int32_t ___index0, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___dsp1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_addDSP_m91798C3A37B101A5B22E6EE8D6132474C48EA003(_thisAdjusted, ___index0, ___dsp1, method);
}
// FMOD.RESULT FMOD.ChannelGroup::removeDSP(FMOD.DSP)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_removeDSP_m935D52C490FFD5B5FFDE11AE48B98237E0B0E62C (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___dsp0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_RemoveDSP(this.handle, dsp.handle);
		intptr_t L_0 = __this->get_handle_0();
		DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  L_1 = ___dsp0;
		intptr_t L_2 = L_1.get_handle_0();
		int32_t L_3 = ChannelGroup_FMOD5_ChannelGroup_RemoveDSP_m61C8630351AB22FC3637435BFAEA58D111271AC9((intptr_t)L_0, (intptr_t)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_removeDSP_m935D52C490FFD5B5FFDE11AE48B98237E0B0E62C_AdjustorThunk (RuntimeObject * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___dsp0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_removeDSP_m935D52C490FFD5B5FFDE11AE48B98237E0B0E62C(_thisAdjusted, ___dsp0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::getNumDSPs(System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getNumDSPs_mE9640C8FDA35EEE62FF23949EFB8874530818C23 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, int32_t* ___numdsps0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_GetNumDSPs(this.handle, out numdsps);
		intptr_t L_0 = __this->get_handle_0();
		int32_t* L_1 = ___numdsps0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_GetNumDSPs_mC2D2A0654C038B7A8E5E0491A89E328EDDCB84C8((intptr_t)L_0, (int32_t*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_getNumDSPs_mE9640C8FDA35EEE62FF23949EFB8874530818C23_AdjustorThunk (RuntimeObject * __this, int32_t* ___numdsps0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_getNumDSPs_mE9640C8FDA35EEE62FF23949EFB8874530818C23(_thisAdjusted, ___numdsps0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::setDSPIndex(FMOD.DSP,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setDSPIndex_m548DAE78D8DE9FB4E67E786156038722023720B9 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___dsp0, int32_t ___index1, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_SetDSPIndex(this.handle, dsp.handle, index);
		intptr_t L_0 = __this->get_handle_0();
		DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  L_1 = ___dsp0;
		intptr_t L_2 = L_1.get_handle_0();
		int32_t L_3 = ___index1;
		int32_t L_4 = ChannelGroup_FMOD5_ChannelGroup_SetDSPIndex_mA5A046FA5378239227C2F0EF60F4581D50B4EDB9((intptr_t)L_0, (intptr_t)L_2, L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_setDSPIndex_m548DAE78D8DE9FB4E67E786156038722023720B9_AdjustorThunk (RuntimeObject * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___dsp0, int32_t ___index1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_setDSPIndex_m548DAE78D8DE9FB4E67E786156038722023720B9(_thisAdjusted, ___dsp0, ___index1, method);
}
// FMOD.RESULT FMOD.ChannelGroup::getDSPIndex(FMOD.DSP,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getDSPIndex_mB2190A962FC55F316CFD6C67A8E5F6A7536CEAEE (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___dsp0, int32_t* ___index1, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_GetDSPIndex(this.handle, dsp.handle, out index);
		intptr_t L_0 = __this->get_handle_0();
		DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  L_1 = ___dsp0;
		intptr_t L_2 = L_1.get_handle_0();
		int32_t* L_3 = ___index1;
		int32_t L_4 = ChannelGroup_FMOD5_ChannelGroup_GetDSPIndex_m333E81DC2D2B5C042C4AEDFCF78413BEA2D698AD((intptr_t)L_0, (intptr_t)L_2, (int32_t*)L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_getDSPIndex_mB2190A962FC55F316CFD6C67A8E5F6A7536CEAEE_AdjustorThunk (RuntimeObject * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___dsp0, int32_t* ___index1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_getDSPIndex_mB2190A962FC55F316CFD6C67A8E5F6A7536CEAEE(_thisAdjusted, ___dsp0, ___index1, method);
}
// FMOD.RESULT FMOD.ChannelGroup::set3DAttributes(FMOD.VECTOR&,FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_set3DAttributes_m6A2F561D4DAA9151428743A5A2D29426F4C2BA98 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___pos0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___vel1, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_Set3DAttributes(this.handle, ref pos, ref vel);
		intptr_t L_0 = __this->get_handle_0();
		VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * L_1 = ___pos0;
		VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * L_2 = ___vel1;
		int32_t L_3 = ChannelGroup_FMOD5_ChannelGroup_Set3DAttributes_m38EAF6CD17CF86D1E9F01EB613759F34D2D7ABAE((intptr_t)L_0, (VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *)L_1, (VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_set3DAttributes_m6A2F561D4DAA9151428743A5A2D29426F4C2BA98_AdjustorThunk (RuntimeObject * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___pos0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___vel1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_set3DAttributes_m6A2F561D4DAA9151428743A5A2D29426F4C2BA98(_thisAdjusted, ___pos0, ___vel1, method);
}
// FMOD.RESULT FMOD.ChannelGroup::get3DAttributes(FMOD.VECTOR&,FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_get3DAttributes_mBCE254E77CCFCE76941AF939A2F5A96A7C35B13E (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___pos0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___vel1, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_Get3DAttributes(this.handle, out pos, out vel);
		intptr_t L_0 = __this->get_handle_0();
		VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * L_1 = ___pos0;
		VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * L_2 = ___vel1;
		int32_t L_3 = ChannelGroup_FMOD5_ChannelGroup_Get3DAttributes_mF5AF2EE98B1B2977D2D5E2D74677410894372469((intptr_t)L_0, (VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *)L_1, (VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_get3DAttributes_mBCE254E77CCFCE76941AF939A2F5A96A7C35B13E_AdjustorThunk (RuntimeObject * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___pos0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___vel1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_get3DAttributes_mBCE254E77CCFCE76941AF939A2F5A96A7C35B13E(_thisAdjusted, ___pos0, ___vel1, method);
}
// FMOD.RESULT FMOD.ChannelGroup::set3DMinMaxDistance(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_set3DMinMaxDistance_m9AF62CD9E3054C99FC434794CA002385C97708F5 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float ___mindistance0, float ___maxdistance1, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_Set3DMinMaxDistance(this.handle, mindistance, maxdistance);
		intptr_t L_0 = __this->get_handle_0();
		float L_1 = ___mindistance0;
		float L_2 = ___maxdistance1;
		int32_t L_3 = ChannelGroup_FMOD5_ChannelGroup_Set3DMinMaxDistance_m8E3E723200CA45153811C264427EF69BC2E89979((intptr_t)L_0, L_1, L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_set3DMinMaxDistance_m9AF62CD9E3054C99FC434794CA002385C97708F5_AdjustorThunk (RuntimeObject * __this, float ___mindistance0, float ___maxdistance1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_set3DMinMaxDistance_m9AF62CD9E3054C99FC434794CA002385C97708F5(_thisAdjusted, ___mindistance0, ___maxdistance1, method);
}
// FMOD.RESULT FMOD.ChannelGroup::get3DMinMaxDistance(System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_get3DMinMaxDistance_mA3E3E55ADC6978002B29662690E152988674B011 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float* ___mindistance0, float* ___maxdistance1, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_Get3DMinMaxDistance(this.handle, out mindistance, out maxdistance);
		intptr_t L_0 = __this->get_handle_0();
		float* L_1 = ___mindistance0;
		float* L_2 = ___maxdistance1;
		int32_t L_3 = ChannelGroup_FMOD5_ChannelGroup_Get3DMinMaxDistance_m1A532300CA8AC76FF60812C10294E0AB5ECB8FEB((intptr_t)L_0, (float*)L_1, (float*)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_get3DMinMaxDistance_mA3E3E55ADC6978002B29662690E152988674B011_AdjustorThunk (RuntimeObject * __this, float* ___mindistance0, float* ___maxdistance1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_get3DMinMaxDistance_mA3E3E55ADC6978002B29662690E152988674B011(_thisAdjusted, ___mindistance0, ___maxdistance1, method);
}
// FMOD.RESULT FMOD.ChannelGroup::set3DConeSettings(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_set3DConeSettings_m5FC78819D1022DC0DD2371AF6A6AB618E30869D3 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float ___insideconeangle0, float ___outsideconeangle1, float ___outsidevolume2, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_Set3DConeSettings(this.handle, insideconeangle, outsideconeangle, outsidevolume);
		intptr_t L_0 = __this->get_handle_0();
		float L_1 = ___insideconeangle0;
		float L_2 = ___outsideconeangle1;
		float L_3 = ___outsidevolume2;
		int32_t L_4 = ChannelGroup_FMOD5_ChannelGroup_Set3DConeSettings_m2BB5FE21547DC09ADAA97A060B3B8B1F5B96498B((intptr_t)L_0, L_1, L_2, L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_set3DConeSettings_m5FC78819D1022DC0DD2371AF6A6AB618E30869D3_AdjustorThunk (RuntimeObject * __this, float ___insideconeangle0, float ___outsideconeangle1, float ___outsidevolume2, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_set3DConeSettings_m5FC78819D1022DC0DD2371AF6A6AB618E30869D3(_thisAdjusted, ___insideconeangle0, ___outsideconeangle1, ___outsidevolume2, method);
}
// FMOD.RESULT FMOD.ChannelGroup::get3DConeSettings(System.Single&,System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_get3DConeSettings_m8D553FA6A7ACD4DCE121FB9F7639BE2F5685EDF8 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float* ___insideconeangle0, float* ___outsideconeangle1, float* ___outsidevolume2, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_Get3DConeSettings(this.handle, out insideconeangle, out outsideconeangle, out outsidevolume);
		intptr_t L_0 = __this->get_handle_0();
		float* L_1 = ___insideconeangle0;
		float* L_2 = ___outsideconeangle1;
		float* L_3 = ___outsidevolume2;
		int32_t L_4 = ChannelGroup_FMOD5_ChannelGroup_Get3DConeSettings_m5C2D03C1FD98D8F48077309E88570C9DFB96EDD8((intptr_t)L_0, (float*)L_1, (float*)L_2, (float*)L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_get3DConeSettings_m8D553FA6A7ACD4DCE121FB9F7639BE2F5685EDF8_AdjustorThunk (RuntimeObject * __this, float* ___insideconeangle0, float* ___outsideconeangle1, float* ___outsidevolume2, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_get3DConeSettings_m8D553FA6A7ACD4DCE121FB9F7639BE2F5685EDF8(_thisAdjusted, ___insideconeangle0, ___outsideconeangle1, ___outsidevolume2, method);
}
// FMOD.RESULT FMOD.ChannelGroup::set3DConeOrientation(FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_set3DConeOrientation_m1E258F50858489514D094D961B8F50CD76D4F136 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___orientation0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_Set3DConeOrientation(this.handle, ref orientation);
		intptr_t L_0 = __this->get_handle_0();
		VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * L_1 = ___orientation0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_Set3DConeOrientation_mA4FC9EA2F87185AB3BB5D5615FF830258E3378E2((intptr_t)L_0, (VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_set3DConeOrientation_m1E258F50858489514D094D961B8F50CD76D4F136_AdjustorThunk (RuntimeObject * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___orientation0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_set3DConeOrientation_m1E258F50858489514D094D961B8F50CD76D4F136(_thisAdjusted, ___orientation0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::get3DConeOrientation(FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_get3DConeOrientation_mE581105CB252CADE55CC434578BBEB54FE36B6F8 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___orientation0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_Get3DConeOrientation(this.handle, out orientation);
		intptr_t L_0 = __this->get_handle_0();
		VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * L_1 = ___orientation0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_Get3DConeOrientation_m12C15825F07BF4946F1460DF2B4AD70BF508D415((intptr_t)L_0, (VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_get3DConeOrientation_mE581105CB252CADE55CC434578BBEB54FE36B6F8_AdjustorThunk (RuntimeObject * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___orientation0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_get3DConeOrientation_mE581105CB252CADE55CC434578BBEB54FE36B6F8(_thisAdjusted, ___orientation0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::set3DCustomRolloff(FMOD.VECTOR&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_set3DCustomRolloff_mD7E9FEF271A8989F66BB7CEAA05AFB4BA382AED3 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___points0, int32_t ___numpoints1, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_Set3DCustomRolloff(this.handle, ref points, numpoints);
		intptr_t L_0 = __this->get_handle_0();
		VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * L_1 = ___points0;
		int32_t L_2 = ___numpoints1;
		int32_t L_3 = ChannelGroup_FMOD5_ChannelGroup_Set3DCustomRolloff_m8BA3CF2552F9ABB7F12890A7AF4257789BCF9701((intptr_t)L_0, (VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *)L_1, L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_set3DCustomRolloff_mD7E9FEF271A8989F66BB7CEAA05AFB4BA382AED3_AdjustorThunk (RuntimeObject * __this, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___points0, int32_t ___numpoints1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_set3DCustomRolloff_mD7E9FEF271A8989F66BB7CEAA05AFB4BA382AED3(_thisAdjusted, ___points0, ___numpoints1, method);
}
// FMOD.RESULT FMOD.ChannelGroup::get3DCustomRolloff(System.IntPtr&,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_get3DCustomRolloff_m668BEA7719870D5C8E6E1BB3E2D3116F3DCC72BC (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, intptr_t* ___points0, int32_t* ___numpoints1, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_Get3DCustomRolloff(this.handle, out points, out numpoints);
		intptr_t L_0 = __this->get_handle_0();
		intptr_t* L_1 = ___points0;
		int32_t* L_2 = ___numpoints1;
		int32_t L_3 = ChannelGroup_FMOD5_ChannelGroup_Get3DCustomRolloff_m56DFC27A13AEB44A5976D00DE06F35EE67EFF1FE((intptr_t)L_0, (intptr_t*)L_1, (int32_t*)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_get3DCustomRolloff_m668BEA7719870D5C8E6E1BB3E2D3116F3DCC72BC_AdjustorThunk (RuntimeObject * __this, intptr_t* ___points0, int32_t* ___numpoints1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_get3DCustomRolloff_m668BEA7719870D5C8E6E1BB3E2D3116F3DCC72BC(_thisAdjusted, ___points0, ___numpoints1, method);
}
// FMOD.RESULT FMOD.ChannelGroup::set3DOcclusion(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_set3DOcclusion_m7E4B076D55EDDD7320A11DF62E981E8999212BAF (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float ___directocclusion0, float ___reverbocclusion1, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_Set3DOcclusion(this.handle, directocclusion, reverbocclusion);
		intptr_t L_0 = __this->get_handle_0();
		float L_1 = ___directocclusion0;
		float L_2 = ___reverbocclusion1;
		int32_t L_3 = ChannelGroup_FMOD5_ChannelGroup_Set3DOcclusion_mC8E6CCE0014CEAAD310FFF891A8D75FE22370171((intptr_t)L_0, L_1, L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_set3DOcclusion_m7E4B076D55EDDD7320A11DF62E981E8999212BAF_AdjustorThunk (RuntimeObject * __this, float ___directocclusion0, float ___reverbocclusion1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_set3DOcclusion_m7E4B076D55EDDD7320A11DF62E981E8999212BAF(_thisAdjusted, ___directocclusion0, ___reverbocclusion1, method);
}
// FMOD.RESULT FMOD.ChannelGroup::get3DOcclusion(System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_get3DOcclusion_m006501ABD9B0824FEF19844E0B8B6651355F9EE8 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float* ___directocclusion0, float* ___reverbocclusion1, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_Get3DOcclusion(this.handle, out directocclusion, out reverbocclusion);
		intptr_t L_0 = __this->get_handle_0();
		float* L_1 = ___directocclusion0;
		float* L_2 = ___reverbocclusion1;
		int32_t L_3 = ChannelGroup_FMOD5_ChannelGroup_Get3DOcclusion_mDA0EB7BC32405ED617688DD30AADB0649014300A((intptr_t)L_0, (float*)L_1, (float*)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_get3DOcclusion_m006501ABD9B0824FEF19844E0B8B6651355F9EE8_AdjustorThunk (RuntimeObject * __this, float* ___directocclusion0, float* ___reverbocclusion1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_get3DOcclusion_m006501ABD9B0824FEF19844E0B8B6651355F9EE8(_thisAdjusted, ___directocclusion0, ___reverbocclusion1, method);
}
// FMOD.RESULT FMOD.ChannelGroup::set3DSpread(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_set3DSpread_m601DA533954B0578EC5136E9E61ABAA2FC62A88C (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float ___angle0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_Set3DSpread(this.handle, angle);
		intptr_t L_0 = __this->get_handle_0();
		float L_1 = ___angle0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_Set3DSpread_m2C0F4CAE19E332306224CDEE99819F822778142B((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_set3DSpread_m601DA533954B0578EC5136E9E61ABAA2FC62A88C_AdjustorThunk (RuntimeObject * __this, float ___angle0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_set3DSpread_m601DA533954B0578EC5136E9E61ABAA2FC62A88C(_thisAdjusted, ___angle0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::get3DSpread(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_get3DSpread_mAF7DD38BB630A91137E265BA8C12EF84F2F78FFB (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float* ___angle0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_Get3DSpread(this.handle, out angle);
		intptr_t L_0 = __this->get_handle_0();
		float* L_1 = ___angle0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_Get3DSpread_mEF714D52412D82365E834C5617EC1CFDC0E4296C((intptr_t)L_0, (float*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_get3DSpread_mAF7DD38BB630A91137E265BA8C12EF84F2F78FFB_AdjustorThunk (RuntimeObject * __this, float* ___angle0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_get3DSpread_mAF7DD38BB630A91137E265BA8C12EF84F2F78FFB(_thisAdjusted, ___angle0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::set3DLevel(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_set3DLevel_mB5859D350A75841CD06CFBC1342B4E709528DD40 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float ___level0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_Set3DLevel(this.handle, level);
		intptr_t L_0 = __this->get_handle_0();
		float L_1 = ___level0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_Set3DLevel_mDA03F76A361D37512B5472D0F69599083D8C6916((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_set3DLevel_mB5859D350A75841CD06CFBC1342B4E709528DD40_AdjustorThunk (RuntimeObject * __this, float ___level0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_set3DLevel_mB5859D350A75841CD06CFBC1342B4E709528DD40(_thisAdjusted, ___level0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::get3DLevel(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_get3DLevel_mC8BE953AA31FBC76E6081CC041E1385E585E2495 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float* ___level0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_Get3DLevel(this.handle, out level);
		intptr_t L_0 = __this->get_handle_0();
		float* L_1 = ___level0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_Get3DLevel_m75DFAC6149D9ACB2E6E9B585E9035F296291A3D3((intptr_t)L_0, (float*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_get3DLevel_mC8BE953AA31FBC76E6081CC041E1385E585E2495_AdjustorThunk (RuntimeObject * __this, float* ___level0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_get3DLevel_mC8BE953AA31FBC76E6081CC041E1385E585E2495(_thisAdjusted, ___level0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::set3DDopplerLevel(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_set3DDopplerLevel_mF5121855D3AD55E03A82085A51AAA898958CE9CF (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float ___level0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_Set3DDopplerLevel(this.handle, level);
		intptr_t L_0 = __this->get_handle_0();
		float L_1 = ___level0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_Set3DDopplerLevel_mBB73A94C00BBD975B62BD04F034EAEE0F314841F((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_set3DDopplerLevel_mF5121855D3AD55E03A82085A51AAA898958CE9CF_AdjustorThunk (RuntimeObject * __this, float ___level0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_set3DDopplerLevel_mF5121855D3AD55E03A82085A51AAA898958CE9CF(_thisAdjusted, ___level0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::get3DDopplerLevel(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_get3DDopplerLevel_mEA2D6805AA1428A120C113E6B2B2647961FECEDC (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, float* ___level0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_Get3DDopplerLevel(this.handle, out level);
		intptr_t L_0 = __this->get_handle_0();
		float* L_1 = ___level0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_Get3DDopplerLevel_m7831338308326A326A338C977FDB51F333C1DFA4((intptr_t)L_0, (float*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_get3DDopplerLevel_mEA2D6805AA1428A120C113E6B2B2647961FECEDC_AdjustorThunk (RuntimeObject * __this, float* ___level0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_get3DDopplerLevel_mEA2D6805AA1428A120C113E6B2B2647961FECEDC(_thisAdjusted, ___level0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::set3DDistanceFilter(System.Boolean,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_set3DDistanceFilter_m3C2323C5D250F29C2FD7E84D45707A5543D8C23D (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, bool ___custom0, float ___customLevel1, float ___centerFreq2, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_Set3DDistanceFilter(this.handle, custom, customLevel, centerFreq);
		intptr_t L_0 = __this->get_handle_0();
		bool L_1 = ___custom0;
		float L_2 = ___customLevel1;
		float L_3 = ___centerFreq2;
		int32_t L_4 = ChannelGroup_FMOD5_ChannelGroup_Set3DDistanceFilter_mCF1F2D582910914C9D81C58468337234851BACAD((intptr_t)L_0, L_1, L_2, L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_set3DDistanceFilter_m3C2323C5D250F29C2FD7E84D45707A5543D8C23D_AdjustorThunk (RuntimeObject * __this, bool ___custom0, float ___customLevel1, float ___centerFreq2, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_set3DDistanceFilter_m3C2323C5D250F29C2FD7E84D45707A5543D8C23D(_thisAdjusted, ___custom0, ___customLevel1, ___centerFreq2, method);
}
// FMOD.RESULT FMOD.ChannelGroup::get3DDistanceFilter(System.Boolean&,System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_get3DDistanceFilter_mF5837D2C68AC971A4979B209023BF258D3542E69 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, bool* ___custom0, float* ___customLevel1, float* ___centerFreq2, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_Get3DDistanceFilter(this.handle, out custom, out customLevel, out centerFreq);
		intptr_t L_0 = __this->get_handle_0();
		bool* L_1 = ___custom0;
		float* L_2 = ___customLevel1;
		float* L_3 = ___centerFreq2;
		int32_t L_4 = ChannelGroup_FMOD5_ChannelGroup_Get3DDistanceFilter_m3A306B1DFC8BECFE222481CCEA7385D6F1006B62((intptr_t)L_0, (bool*)L_1, (float*)L_2, (float*)L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_get3DDistanceFilter_mF5837D2C68AC971A4979B209023BF258D3542E69_AdjustorThunk (RuntimeObject * __this, bool* ___custom0, float* ___customLevel1, float* ___centerFreq2, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_get3DDistanceFilter_mF5837D2C68AC971A4979B209023BF258D3542E69(_thisAdjusted, ___custom0, ___customLevel1, ___centerFreq2, method);
}
// FMOD.RESULT FMOD.ChannelGroup::setUserData(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_setUserData_mF8167FD9A5C6616CB492B5F52ED25D3333DB4DE2 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, intptr_t ___userdata0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_SetUserData(this.handle, userdata);
		intptr_t L_0 = __this->get_handle_0();
		intptr_t L_1 = ___userdata0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_SetUserData_mDD7C4D786A2D926206B8BAF3183591CB4EA9562E((intptr_t)L_0, (intptr_t)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_setUserData_mF8167FD9A5C6616CB492B5F52ED25D3333DB4DE2_AdjustorThunk (RuntimeObject * __this, intptr_t ___userdata0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_setUserData_mF8167FD9A5C6616CB492B5F52ED25D3333DB4DE2(_thisAdjusted, ___userdata0, method);
}
// FMOD.RESULT FMOD.ChannelGroup::getUserData(System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_getUserData_m91200AB27B70E3738CE12B7A46656F93759689E5 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, intptr_t* ___userdata0, const RuntimeMethod* method)
{
	{
		// return FMOD5_ChannelGroup_GetUserData(this.handle, out userdata);
		intptr_t L_0 = __this->get_handle_0();
		intptr_t* L_1 = ___userdata0;
		int32_t L_2 = ChannelGroup_FMOD5_ChannelGroup_GetUserData_mF8EA0F8F939690CA6D8CFC635C5958C7E8B2AC9E((intptr_t)L_0, (intptr_t*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t ChannelGroup_getUserData_m91200AB27B70E3738CE12B7A46656F93759689E5_AdjustorThunk (RuntimeObject * __this, intptr_t* ___userdata0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_getUserData_m91200AB27B70E3738CE12B7A46656F93759689E5(_thisAdjusted, ___userdata0, method);
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_Release(intptr_t);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Release(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Release_mCF7AE9552AADFB0BAD400F91F6B7711C58ADDB5D (intptr_t ___channelgroup0, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_Release", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_Release)(___channelgroup0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_AddGroup(intptr_t, intptr_t, int32_t, intptr_t);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_AddGroup(System.IntPtr,System.IntPtr,System.Boolean,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_AddGroup_m1AEAAE2E9459894F8BD98DABE85E7F3AAC427FDC (intptr_t ___channelgroup0, intptr_t ___group1, bool ___propagatedspclock2, intptr_t ___zero3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + 4 + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_AddGroup", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_AddGroup)(___channelgroup0, ___group1, static_cast<int32_t>(___propagatedspclock2), ___zero3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___group1, static_cast<int32_t>(___propagatedspclock2), ___zero3);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_AddGroup(System.IntPtr,System.IntPtr,System.Boolean,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_AddGroup_mFF9828E1578F297238D8EFB0E97ED6B77AB14F8A (intptr_t ___channelgroup0, intptr_t ___group1, bool ___propagatedspclock2, intptr_t* ___connection3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t, int32_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + 4 + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_AddGroup", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_AddGroup)(___channelgroup0, ___group1, static_cast<int32_t>(___propagatedspclock2), ___connection3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___group1, static_cast<int32_t>(___propagatedspclock2), ___connection3);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_GetNumGroups(intptr_t, int32_t*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetNumGroups(System.IntPtr,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetNumGroups_mE17AF280FCCB51DD0A0D76467004627C1D5E82D3 (intptr_t ___channelgroup0, int32_t* ___numgroups1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_GetNumGroups", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_GetNumGroups)(___channelgroup0, ___numgroups1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___numgroups1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_GetGroup(intptr_t, int32_t, intptr_t*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetGroup(System.IntPtr,System.Int32,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetGroup_mEBC3C58A4B5081F2599D9D1A2A998B26F7AD54AD (intptr_t ___channelgroup0, int32_t ___index1, intptr_t* ___group2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_GetGroup", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_GetGroup)(___channelgroup0, ___index1, ___group2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___index1, ___group2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_GetParentGroup(intptr_t, intptr_t*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetParentGroup(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetParentGroup_m8C563FBD98F9353C24A8B13DCF2958401E067E09 (intptr_t ___channelgroup0, intptr_t* ___group1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_GetParentGroup", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_GetParentGroup)(___channelgroup0, ___group1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___group1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_GetName(intptr_t, intptr_t, int32_t);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetName(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetName_m0253A55C677F233432F12BE9C5F8E11E8739892C (intptr_t ___channelgroup0, intptr_t ___name1, int32_t ___namelen2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_GetName", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_GetName)(___channelgroup0, ___name1, ___namelen2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___name1, ___namelen2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_GetNumChannels(intptr_t, int32_t*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetNumChannels(System.IntPtr,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetNumChannels_mC942911FB4218B0004E91DBFDB37A66B58CAAE10 (intptr_t ___channelgroup0, int32_t* ___numchannels1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_GetNumChannels", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_GetNumChannels)(___channelgroup0, ___numchannels1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___numchannels1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_GetChannel(intptr_t, int32_t, intptr_t*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetChannel(System.IntPtr,System.Int32,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetChannel_mF2648AB86AD5EFD7925A0ED999630D195D408816 (intptr_t ___channelgroup0, int32_t ___index1, intptr_t* ___channel2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_GetChannel", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_GetChannel)(___channelgroup0, ___index1, ___channel2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___index1, ___channel2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_GetSystemObject(intptr_t, intptr_t*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetSystemObject(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetSystemObject_m38BE230B59DA645955B18DE24A3DC88ABF1A22B7 (intptr_t ___channelgroup0, intptr_t* ___system1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_GetSystemObject", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_GetSystemObject)(___channelgroup0, ___system1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___system1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_Stop(intptr_t);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Stop(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Stop_m0F989A2322E65BBEDF27EFEDBAE868BCE7F5B0F2 (intptr_t ___channelgroup0, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_Stop", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_Stop)(___channelgroup0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_SetPaused(intptr_t, int32_t);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetPaused(System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetPaused_mBE639C22AB5041CE3A7E0B6FE0D56439150EB78B (intptr_t ___channelgroup0, bool ___paused1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + 4;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_SetPaused", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_SetPaused)(___channelgroup0, static_cast<int32_t>(___paused1));
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, static_cast<int32_t>(___paused1));
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_GetPaused(intptr_t, int32_t*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetPaused(System.IntPtr,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetPaused_mD70E168FE815DF1DF9CD5BEDF16EB1D8E143FBF0 (intptr_t ___channelgroup0, bool* ___paused1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_GetPaused", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___paused1' to native representation
	int32_t ____paused1_empty = 0;
	int32_t* ____paused1_marshaled = &____paused1_empty;

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_GetPaused)(___channelgroup0, ____paused1_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ____paused1_marshaled);
	#endif

	// Marshaling of parameter '___paused1' back from native representation
	bool _____paused1_marshaled_unmarshaled_dereferenced = false;
	_____paused1_marshaled_unmarshaled_dereferenced = static_cast<bool>(*____paused1_marshaled);
	*___paused1 = _____paused1_marshaled_unmarshaled_dereferenced;

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_SetVolume(intptr_t, float);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetVolume(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetVolume_m807734AACF95B3B8C3680EE2631DEAF718056A99 (intptr_t ___channelgroup0, float ___volume1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_SetVolume", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_SetVolume)(___channelgroup0, ___volume1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___volume1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_GetVolume(intptr_t, float*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetVolume(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetVolume_mEF9C0BCAC316C02D30CC084956FE681C1C6547E4 (intptr_t ___channelgroup0, float* ___volume1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_GetVolume", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_GetVolume)(___channelgroup0, ___volume1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___volume1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_SetVolumeRamp(intptr_t, int32_t);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetVolumeRamp(System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetVolumeRamp_mA22F044E892707687F17D0954BC7AD84FE7756E3 (intptr_t ___channelgroup0, bool ___ramp1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + 4;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_SetVolumeRamp", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_SetVolumeRamp)(___channelgroup0, static_cast<int32_t>(___ramp1));
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, static_cast<int32_t>(___ramp1));
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_GetVolumeRamp(intptr_t, int32_t*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetVolumeRamp(System.IntPtr,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetVolumeRamp_m43A95009E60FF18AB4878084AB71EAD3F0EE7E2E (intptr_t ___channelgroup0, bool* ___ramp1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_GetVolumeRamp", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___ramp1' to native representation
	int32_t ____ramp1_empty = 0;
	int32_t* ____ramp1_marshaled = &____ramp1_empty;

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_GetVolumeRamp)(___channelgroup0, ____ramp1_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ____ramp1_marshaled);
	#endif

	// Marshaling of parameter '___ramp1' back from native representation
	bool _____ramp1_marshaled_unmarshaled_dereferenced = false;
	_____ramp1_marshaled_unmarshaled_dereferenced = static_cast<bool>(*____ramp1_marshaled);
	*___ramp1 = _____ramp1_marshaled_unmarshaled_dereferenced;

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_GetAudibility(intptr_t, float*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetAudibility(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetAudibility_mD1D78619DD2B29609D5E68DE5A1ED5F8525C9CDE (intptr_t ___channelgroup0, float* ___audibility1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_GetAudibility", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_GetAudibility)(___channelgroup0, ___audibility1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___audibility1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_SetPitch(intptr_t, float);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetPitch(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetPitch_m98E67DBF83E55357687C7EE41B281C75DFECB847 (intptr_t ___channelgroup0, float ___pitch1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_SetPitch", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_SetPitch)(___channelgroup0, ___pitch1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___pitch1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_GetPitch(intptr_t, float*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetPitch(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetPitch_m9417E16234D88BE6267AA0E8E82FF4A3F6B934B9 (intptr_t ___channelgroup0, float* ___pitch1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_GetPitch", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_GetPitch)(___channelgroup0, ___pitch1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___pitch1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_SetMute(intptr_t, int32_t);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetMute(System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetMute_m0147EC514B4C9428804295D19C16ADB61F8FC5F8 (intptr_t ___channelgroup0, bool ___mute1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + 4;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_SetMute", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_SetMute)(___channelgroup0, static_cast<int32_t>(___mute1));
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, static_cast<int32_t>(___mute1));
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_GetMute(intptr_t, int32_t*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetMute(System.IntPtr,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetMute_mEF147FD210889FFC3D16F7A5A4D71824C91AF9BD (intptr_t ___channelgroup0, bool* ___mute1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_GetMute", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___mute1' to native representation
	int32_t ____mute1_empty = 0;
	int32_t* ____mute1_marshaled = &____mute1_empty;

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_GetMute)(___channelgroup0, ____mute1_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ____mute1_marshaled);
	#endif

	// Marshaling of parameter '___mute1' back from native representation
	bool _____mute1_marshaled_unmarshaled_dereferenced = false;
	_____mute1_marshaled_unmarshaled_dereferenced = static_cast<bool>(*____mute1_marshaled);
	*___mute1 = _____mute1_marshaled_unmarshaled_dereferenced;

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_SetReverbProperties(intptr_t, int32_t, float);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetReverbProperties(System.IntPtr,System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetReverbProperties_m760B424E4C52928F32BA30F4FE906E5219B64635 (intptr_t ___channelgroup0, int32_t ___instance1, float ___wet2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_SetReverbProperties", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_SetReverbProperties)(___channelgroup0, ___instance1, ___wet2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___instance1, ___wet2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_GetReverbProperties(intptr_t, int32_t, float*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetReverbProperties(System.IntPtr,System.Int32,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetReverbProperties_m0887C37F5BBCC41A60E312CF2A20BBB111634F80 (intptr_t ___channelgroup0, int32_t ___instance1, float* ___wet2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t, float*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_GetReverbProperties", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_GetReverbProperties)(___channelgroup0, ___instance1, ___wet2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___instance1, ___wet2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_SetLowPassGain(intptr_t, float);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetLowPassGain(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetLowPassGain_m02BD432F4C31A0AE5E61599FBAEA7EBD2D8666E6 (intptr_t ___channelgroup0, float ___gain1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_SetLowPassGain", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_SetLowPassGain)(___channelgroup0, ___gain1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___gain1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_GetLowPassGain(intptr_t, float*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetLowPassGain(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetLowPassGain_mDC0CDE3A6A056372C40F00AB03ED74B00C7784E8 (intptr_t ___channelgroup0, float* ___gain1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_GetLowPassGain", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_GetLowPassGain)(___channelgroup0, ___gain1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___gain1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_SetMode(intptr_t, uint32_t);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetMode(System.IntPtr,FMOD.MODE)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetMode_m34FA3364D10D0EB736FF83109300BF3E1C406F22 (intptr_t ___channelgroup0, uint32_t ___mode1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, uint32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_SetMode", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_SetMode)(___channelgroup0, ___mode1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___mode1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_GetMode(intptr_t, uint32_t*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetMode(System.IntPtr,FMOD.MODE&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetMode_m94249A271BC8D9560E4B8DC005F9E48F1EC06923 (intptr_t ___channelgroup0, uint32_t* ___mode1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, uint32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_GetMode", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_GetMode)(___channelgroup0, ___mode1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___mode1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_SetCallback(intptr_t, Il2CppMethodPointer);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetCallback(System.IntPtr,FMOD.CHANNELCONTROL_CALLBACK)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetCallback_m5F8FFD6E9584EF32B42189A87F0739FE7E05D95D (intptr_t ___channelgroup0, CHANNELCONTROL_CALLBACK_t95D7949ECD13791F21B2CC1501D3F741AB1C9CF5 * ___callback1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_SetCallback", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___callback1' to native representation
	Il2CppMethodPointer ____callback1_marshaled = NULL;
	____callback1_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___callback1));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_SetCallback)(___channelgroup0, ____callback1_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ____callback1_marshaled);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_IsPlaying(intptr_t, int32_t*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_IsPlaying(System.IntPtr,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_IsPlaying_mEC677F7159FB2B4BB6D095E6ADD4CAF2D7D6990F (intptr_t ___channelgroup0, bool* ___isplaying1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_IsPlaying", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___isplaying1' to native representation
	int32_t ____isplaying1_empty = 0;
	int32_t* ____isplaying1_marshaled = &____isplaying1_empty;

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_IsPlaying)(___channelgroup0, ____isplaying1_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ____isplaying1_marshaled);
	#endif

	// Marshaling of parameter '___isplaying1' back from native representation
	bool _____isplaying1_marshaled_unmarshaled_dereferenced = false;
	_____isplaying1_marshaled_unmarshaled_dereferenced = static_cast<bool>(*____isplaying1_marshaled);
	*___isplaying1 = _____isplaying1_marshaled_unmarshaled_dereferenced;

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_SetPan(intptr_t, float);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetPan(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetPan_m7709AC32CEF6D8038E7AA694A37D04F612660449 (intptr_t ___channelgroup0, float ___pan1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_SetPan", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_SetPan)(___channelgroup0, ___pan1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___pan1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_SetMixLevelsOutput(intptr_t, float, float, float, float, float, float, float, float);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetMixLevelsOutput(System.IntPtr,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetMixLevelsOutput_mB39E3792DA1F8E82CC20D48E555C28A4D36D8759 (intptr_t ___channelgroup0, float ___frontleft1, float ___frontright2, float ___center3, float ___lfe4, float ___surroundleft5, float ___surroundright6, float ___backleft7, float ___backright8, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float, float, float, float, float, float, float, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float) + sizeof(float) + sizeof(float) + sizeof(float) + sizeof(float) + sizeof(float) + sizeof(float) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_SetMixLevelsOutput", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_SetMixLevelsOutput)(___channelgroup0, ___frontleft1, ___frontright2, ___center3, ___lfe4, ___surroundleft5, ___surroundright6, ___backleft7, ___backright8);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___frontleft1, ___frontright2, ___center3, ___lfe4, ___surroundleft5, ___surroundright6, ___backleft7, ___backright8);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_SetMixLevelsInput(intptr_t, float*, int32_t);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetMixLevelsInput(System.IntPtr,System.Single[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetMixLevelsInput_m1A3291A1578DC03E13D077EF603B156C035DA914 (intptr_t ___channelgroup0, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___levels1, int32_t ___numlevels2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_SetMixLevelsInput", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___levels1' to native representation
	float* ____levels1_marshaled = NULL;
	if (___levels1 != NULL)
	{
		____levels1_marshaled = reinterpret_cast<float*>((___levels1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_SetMixLevelsInput)(___channelgroup0, ____levels1_marshaled, ___numlevels2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ____levels1_marshaled, ___numlevels2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_SetMixMatrix(intptr_t, float*, int32_t, int32_t, int32_t);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetMixMatrix(System.IntPtr,System.Single[],System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetMixMatrix_m43CF6332FC8F8964CE0CD4F3BD220CEE30020073 (intptr_t ___channelgroup0, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix1, int32_t ___outchannels2, int32_t ___inchannels3, int32_t ___inchannel_hop4, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_SetMixMatrix", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___matrix1' to native representation
	float* ____matrix1_marshaled = NULL;
	if (___matrix1 != NULL)
	{
		____matrix1_marshaled = reinterpret_cast<float*>((___matrix1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_SetMixMatrix)(___channelgroup0, ____matrix1_marshaled, ___outchannels2, ___inchannels3, ___inchannel_hop4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ____matrix1_marshaled, ___outchannels2, ___inchannels3, ___inchannel_hop4);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_GetMixMatrix(intptr_t, float*, int32_t*, int32_t*, int32_t);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetMixMatrix(System.IntPtr,System.Single[],System.Int32&,System.Int32&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetMixMatrix_mC974B5D5F28AA65362C5371CF48A2736A0D8DF25 (intptr_t ___channelgroup0, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix1, int32_t* ___outchannels2, int32_t* ___inchannels3, int32_t ___inchannel_hop4, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*, int32_t*, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t*) + sizeof(int32_t*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_GetMixMatrix", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___matrix1' to native representation
	float* ____matrix1_marshaled = NULL;
	if (___matrix1 != NULL)
	{
		____matrix1_marshaled = reinterpret_cast<float*>((___matrix1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_GetMixMatrix)(___channelgroup0, ____matrix1_marshaled, ___outchannels2, ___inchannels3, ___inchannel_hop4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ____matrix1_marshaled, ___outchannels2, ___inchannels3, ___inchannel_hop4);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_GetDSPClock(intptr_t, uint64_t*, uint64_t*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetDSPClock(System.IntPtr,System.UInt64&,System.UInt64&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetDSPClock_mAFD667C022D846D91821C9B0CC51C56D15958253 (intptr_t ___channelgroup0, uint64_t* ___dspclock1, uint64_t* ___parentclock2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, uint64_t*, uint64_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint64_t*) + sizeof(uint64_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_GetDSPClock", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_GetDSPClock)(___channelgroup0, ___dspclock1, ___parentclock2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___dspclock1, ___parentclock2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_SetDelay(intptr_t, uint64_t, uint64_t, int32_t);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetDelay(System.IntPtr,System.UInt64,System.UInt64,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetDelay_m22361606893E41831736E545EB89CCC40643EF4F (intptr_t ___channelgroup0, uint64_t ___dspclock_start1, uint64_t ___dspclock_end2, bool ___stopchannels3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, uint64_t, uint64_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint64_t) + sizeof(uint64_t) + 4;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_SetDelay", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_SetDelay)(___channelgroup0, ___dspclock_start1, ___dspclock_end2, static_cast<int32_t>(___stopchannels3));
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___dspclock_start1, ___dspclock_end2, static_cast<int32_t>(___stopchannels3));
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_GetDelay(intptr_t, uint64_t*, uint64_t*, intptr_t);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetDelay(System.IntPtr,System.UInt64&,System.UInt64&,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetDelay_m790CCF3CA70CDA18DA5A7777017069A5B6736707 (intptr_t ___channelgroup0, uint64_t* ___dspclock_start1, uint64_t* ___dspclock_end2, intptr_t ___zero3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, uint64_t*, uint64_t*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint64_t*) + sizeof(uint64_t*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_GetDelay", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_GetDelay)(___channelgroup0, ___dspclock_start1, ___dspclock_end2, ___zero3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___dspclock_start1, ___dspclock_end2, ___zero3);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetDelay(System.IntPtr,System.UInt64&,System.UInt64&,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetDelay_m8E11B5F6380818473ED224CA76CFA6725A084AA3 (intptr_t ___channelgroup0, uint64_t* ___dspclock_start1, uint64_t* ___dspclock_end2, bool* ___stopchannels3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, uint64_t*, uint64_t*, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint64_t*) + sizeof(uint64_t*) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_GetDelay", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___stopchannels3' to native representation
	int32_t ____stopchannels3_empty = 0;
	int32_t* ____stopchannels3_marshaled = &____stopchannels3_empty;

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_GetDelay)(___channelgroup0, ___dspclock_start1, ___dspclock_end2, ____stopchannels3_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___dspclock_start1, ___dspclock_end2, ____stopchannels3_marshaled);
	#endif

	// Marshaling of parameter '___stopchannels3' back from native representation
	bool _____stopchannels3_marshaled_unmarshaled_dereferenced = false;
	_____stopchannels3_marshaled_unmarshaled_dereferenced = static_cast<bool>(*____stopchannels3_marshaled);
	*___stopchannels3 = _____stopchannels3_marshaled_unmarshaled_dereferenced;

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_AddFadePoint(intptr_t, uint64_t, float);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_AddFadePoint(System.IntPtr,System.UInt64,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_AddFadePoint_mF64C02A4E035972F94811E69D29F041B26E27F63 (intptr_t ___channelgroup0, uint64_t ___dspclock1, float ___volume2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, uint64_t, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint64_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_AddFadePoint", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_AddFadePoint)(___channelgroup0, ___dspclock1, ___volume2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___dspclock1, ___volume2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_SetFadePointRamp(intptr_t, uint64_t, float);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetFadePointRamp(System.IntPtr,System.UInt64,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetFadePointRamp_m3755C55B0105A5909C7933B5B508C612A72040F7 (intptr_t ___channelgroup0, uint64_t ___dspclock1, float ___volume2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, uint64_t, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint64_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_SetFadePointRamp", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_SetFadePointRamp)(___channelgroup0, ___dspclock1, ___volume2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___dspclock1, ___volume2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_RemoveFadePoints(intptr_t, uint64_t, uint64_t);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_RemoveFadePoints(System.IntPtr,System.UInt64,System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_RemoveFadePoints_mB32A350562A1C1DAF8875C322BF2270247C87629 (intptr_t ___channelgroup0, uint64_t ___dspclock_start1, uint64_t ___dspclock_end2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, uint64_t, uint64_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint64_t) + sizeof(uint64_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_RemoveFadePoints", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_RemoveFadePoints)(___channelgroup0, ___dspclock_start1, ___dspclock_end2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___dspclock_start1, ___dspclock_end2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_GetFadePoints(intptr_t, uint32_t*, uint64_t*, float*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetFadePoints(System.IntPtr,System.UInt32&,System.UInt64[],System.Single[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetFadePoints_m251D589DCCB47B5A27B2E1B133B291DD950EFAFC (intptr_t ___channelgroup0, uint32_t* ___numpoints1, UInt64U5BU5D_tA808FE881491284FF25AFDF5C4BC92A826031EF4* ___point_dspclock2, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___point_volume3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, uint32_t*, uint64_t*, float*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint32_t*) + sizeof(void*) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_GetFadePoints", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___point_dspclock2' to native representation
	uint64_t* ____point_dspclock2_marshaled = NULL;
	if (___point_dspclock2 != NULL)
	{
		____point_dspclock2_marshaled = reinterpret_cast<uint64_t*>((___point_dspclock2)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___point_volume3' to native representation
	float* ____point_volume3_marshaled = NULL;
	if (___point_volume3 != NULL)
	{
		____point_volume3_marshaled = reinterpret_cast<float*>((___point_volume3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_GetFadePoints)(___channelgroup0, ___numpoints1, ____point_dspclock2_marshaled, ____point_volume3_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___numpoints1, ____point_dspclock2_marshaled, ____point_volume3_marshaled);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_GetDSP(intptr_t, int32_t, intptr_t*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetDSP(System.IntPtr,System.Int32,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetDSP_mCCAC7014A2AB297B97F7A1BAEB0157AE208F9A76 (intptr_t ___channelgroup0, int32_t ___index1, intptr_t* ___dsp2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_GetDSP", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_GetDSP)(___channelgroup0, ___index1, ___dsp2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___index1, ___dsp2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_AddDSP(intptr_t, int32_t, intptr_t);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_AddDSP(System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_AddDSP_m3BBD7F50976FC8CE402A75BA4326CD068CE8450D (intptr_t ___channelgroup0, int32_t ___index1, intptr_t ___dsp2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_AddDSP", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_AddDSP)(___channelgroup0, ___index1, ___dsp2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___index1, ___dsp2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_RemoveDSP(intptr_t, intptr_t);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_RemoveDSP(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_RemoveDSP_m61C8630351AB22FC3637435BFAEA58D111271AC9 (intptr_t ___channelgroup0, intptr_t ___dsp1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_RemoveDSP", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_RemoveDSP)(___channelgroup0, ___dsp1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___dsp1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_GetNumDSPs(intptr_t, int32_t*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetNumDSPs(System.IntPtr,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetNumDSPs_mC2D2A0654C038B7A8E5E0491A89E328EDDCB84C8 (intptr_t ___channelgroup0, int32_t* ___numdsps1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_GetNumDSPs", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_GetNumDSPs)(___channelgroup0, ___numdsps1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___numdsps1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_SetDSPIndex(intptr_t, intptr_t, int32_t);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetDSPIndex(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetDSPIndex_mA5A046FA5378239227C2F0EF60F4581D50B4EDB9 (intptr_t ___channelgroup0, intptr_t ___dsp1, int32_t ___index2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_SetDSPIndex", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_SetDSPIndex)(___channelgroup0, ___dsp1, ___index2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___dsp1, ___index2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_GetDSPIndex(intptr_t, intptr_t, int32_t*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetDSPIndex(System.IntPtr,System.IntPtr,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetDSPIndex_m333E81DC2D2B5C042C4AEDFCF78413BEA2D698AD (intptr_t ___channelgroup0, intptr_t ___dsp1, int32_t* ___index2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_GetDSPIndex", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_GetDSPIndex)(___channelgroup0, ___dsp1, ___index2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___dsp1, ___index2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_Set3DAttributes(intptr_t, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Set3DAttributes(System.IntPtr,FMOD.VECTOR&,FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Set3DAttributes_m38EAF6CD17CF86D1E9F01EB613759F34D2D7ABAE (intptr_t ___channelgroup0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___pos1, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___vel2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *) + sizeof(VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_Set3DAttributes", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_Set3DAttributes)(___channelgroup0, ___pos1, ___vel2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___pos1, ___vel2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_Get3DAttributes(intptr_t, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Get3DAttributes(System.IntPtr,FMOD.VECTOR&,FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Get3DAttributes_mF5AF2EE98B1B2977D2D5E2D74677410894372469 (intptr_t ___channelgroup0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___pos1, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___vel2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *) + sizeof(VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_Get3DAttributes", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_Get3DAttributes)(___channelgroup0, ___pos1, ___vel2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___pos1, ___vel2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_Set3DMinMaxDistance(intptr_t, float, float);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Set3DMinMaxDistance(System.IntPtr,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Set3DMinMaxDistance_m8E3E723200CA45153811C264427EF69BC2E89979 (intptr_t ___channelgroup0, float ___mindistance1, float ___maxdistance2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_Set3DMinMaxDistance", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_Set3DMinMaxDistance)(___channelgroup0, ___mindistance1, ___maxdistance2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___mindistance1, ___maxdistance2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_Get3DMinMaxDistance(intptr_t, float*, float*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Get3DMinMaxDistance(System.IntPtr,System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Get3DMinMaxDistance_m1A532300CA8AC76FF60812C10294E0AB5ECB8FEB (intptr_t ___channelgroup0, float* ___mindistance1, float* ___maxdistance2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*, float*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float*) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_Get3DMinMaxDistance", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_Get3DMinMaxDistance)(___channelgroup0, ___mindistance1, ___maxdistance2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___mindistance1, ___maxdistance2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_Set3DConeSettings(intptr_t, float, float, float);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Set3DConeSettings(System.IntPtr,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Set3DConeSettings_m2BB5FE21547DC09ADAA97A060B3B8B1F5B96498B (intptr_t ___channelgroup0, float ___insideconeangle1, float ___outsideconeangle2, float ___outsidevolume3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float, float, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float) + sizeof(float) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_Set3DConeSettings", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_Set3DConeSettings)(___channelgroup0, ___insideconeangle1, ___outsideconeangle2, ___outsidevolume3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___insideconeangle1, ___outsideconeangle2, ___outsidevolume3);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_Get3DConeSettings(intptr_t, float*, float*, float*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Get3DConeSettings(System.IntPtr,System.Single&,System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Get3DConeSettings_m5C2D03C1FD98D8F48077309E88570C9DFB96EDD8 (intptr_t ___channelgroup0, float* ___insideconeangle1, float* ___outsideconeangle2, float* ___outsidevolume3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*, float*, float*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float*) + sizeof(float*) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_Get3DConeSettings", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_Get3DConeSettings)(___channelgroup0, ___insideconeangle1, ___outsideconeangle2, ___outsidevolume3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___insideconeangle1, ___outsideconeangle2, ___outsidevolume3);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_Set3DConeOrientation(intptr_t, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Set3DConeOrientation(System.IntPtr,FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Set3DConeOrientation_mA4FC9EA2F87185AB3BB5D5615FF830258E3378E2 (intptr_t ___channelgroup0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___orientation1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_Set3DConeOrientation", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_Set3DConeOrientation)(___channelgroup0, ___orientation1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___orientation1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_Get3DConeOrientation(intptr_t, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Get3DConeOrientation(System.IntPtr,FMOD.VECTOR&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Get3DConeOrientation_m12C15825F07BF4946F1460DF2B4AD70BF508D415 (intptr_t ___channelgroup0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___orientation1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_Get3DConeOrientation", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_Get3DConeOrientation)(___channelgroup0, ___orientation1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___orientation1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_Set3DCustomRolloff(intptr_t, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *, int32_t);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Set3DCustomRolloff(System.IntPtr,FMOD.VECTOR&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Set3DCustomRolloff_m8BA3CF2552F9ABB7F12890A7AF4257789BCF9701 (intptr_t ___channelgroup0, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D * ___points1, int32_t ___numpoints2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(VECTOR_tC61A4261E5AD35810CD240508C20DFB5949AF06D *) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_Set3DCustomRolloff", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_Set3DCustomRolloff)(___channelgroup0, ___points1, ___numpoints2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___points1, ___numpoints2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_Get3DCustomRolloff(intptr_t, intptr_t*, int32_t*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Get3DCustomRolloff(System.IntPtr,System.IntPtr&,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Get3DCustomRolloff_m56DFC27A13AEB44A5976D00DE06F35EE67EFF1FE (intptr_t ___channelgroup0, intptr_t* ___points1, int32_t* ___numpoints2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t*, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_Get3DCustomRolloff", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_Get3DCustomRolloff)(___channelgroup0, ___points1, ___numpoints2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___points1, ___numpoints2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_Set3DOcclusion(intptr_t, float, float);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Set3DOcclusion(System.IntPtr,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Set3DOcclusion_mC8E6CCE0014CEAAD310FFF891A8D75FE22370171 (intptr_t ___channelgroup0, float ___directocclusion1, float ___reverbocclusion2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_Set3DOcclusion", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_Set3DOcclusion)(___channelgroup0, ___directocclusion1, ___reverbocclusion2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___directocclusion1, ___reverbocclusion2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_Get3DOcclusion(intptr_t, float*, float*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Get3DOcclusion(System.IntPtr,System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Get3DOcclusion_mDA0EB7BC32405ED617688DD30AADB0649014300A (intptr_t ___channelgroup0, float* ___directocclusion1, float* ___reverbocclusion2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*, float*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float*) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_Get3DOcclusion", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_Get3DOcclusion)(___channelgroup0, ___directocclusion1, ___reverbocclusion2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___directocclusion1, ___reverbocclusion2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_Set3DSpread(intptr_t, float);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Set3DSpread(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Set3DSpread_m2C0F4CAE19E332306224CDEE99819F822778142B (intptr_t ___channelgroup0, float ___angle1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_Set3DSpread", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_Set3DSpread)(___channelgroup0, ___angle1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___angle1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_Get3DSpread(intptr_t, float*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Get3DSpread(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Get3DSpread_mEF714D52412D82365E834C5617EC1CFDC0E4296C (intptr_t ___channelgroup0, float* ___angle1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_Get3DSpread", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_Get3DSpread)(___channelgroup0, ___angle1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___angle1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_Set3DLevel(intptr_t, float);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Set3DLevel(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Set3DLevel_mDA03F76A361D37512B5472D0F69599083D8C6916 (intptr_t ___channelgroup0, float ___level1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_Set3DLevel", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_Set3DLevel)(___channelgroup0, ___level1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___level1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_Get3DLevel(intptr_t, float*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Get3DLevel(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Get3DLevel_m75DFAC6149D9ACB2E6E9B585E9035F296291A3D3 (intptr_t ___channelgroup0, float* ___level1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_Get3DLevel", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_Get3DLevel)(___channelgroup0, ___level1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___level1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_Set3DDopplerLevel(intptr_t, float);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Set3DDopplerLevel(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Set3DDopplerLevel_mBB73A94C00BBD975B62BD04F034EAEE0F314841F (intptr_t ___channelgroup0, float ___level1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_Set3DDopplerLevel", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_Set3DDopplerLevel)(___channelgroup0, ___level1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___level1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_Get3DDopplerLevel(intptr_t, float*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Get3DDopplerLevel(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Get3DDopplerLevel_m7831338308326A326A338C977FDB51F333C1DFA4 (intptr_t ___channelgroup0, float* ___level1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_Get3DDopplerLevel", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_Get3DDopplerLevel)(___channelgroup0, ___level1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___level1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_Set3DDistanceFilter(intptr_t, int32_t, float, float);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Set3DDistanceFilter(System.IntPtr,System.Boolean,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Set3DDistanceFilter_mCF1F2D582910914C9D81C58468337234851BACAD (intptr_t ___channelgroup0, bool ___custom1, float ___customLevel2, float ___centerFreq3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t, float, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + 4 + sizeof(float) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_Set3DDistanceFilter", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_Set3DDistanceFilter)(___channelgroup0, static_cast<int32_t>(___custom1), ___customLevel2, ___centerFreq3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, static_cast<int32_t>(___custom1), ___customLevel2, ___centerFreq3);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_Get3DDistanceFilter(intptr_t, int32_t*, float*, float*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_Get3DDistanceFilter(System.IntPtr,System.Boolean&,System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_Get3DDistanceFilter_m3A306B1DFC8BECFE222481CCEA7385D6F1006B62 (intptr_t ___channelgroup0, bool* ___custom1, float* ___customLevel2, float* ___centerFreq3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t*, float*, float*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t*) + sizeof(float*) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_Get3DDistanceFilter", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___custom1' to native representation
	int32_t ____custom1_empty = 0;
	int32_t* ____custom1_marshaled = &____custom1_empty;

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_Get3DDistanceFilter)(___channelgroup0, ____custom1_marshaled, ___customLevel2, ___centerFreq3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ____custom1_marshaled, ___customLevel2, ___centerFreq3);
	#endif

	// Marshaling of parameter '___custom1' back from native representation
	bool _____custom1_marshaled_unmarshaled_dereferenced = false;
	_____custom1_marshaled_unmarshaled_dereferenced = static_cast<bool>(*____custom1_marshaled);
	*___custom1 = _____custom1_marshaled_unmarshaled_dereferenced;

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_SetUserData(intptr_t, intptr_t);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_SetUserData(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_SetUserData_mDD7C4D786A2D926206B8BAF3183591CB4EA9562E (intptr_t ___channelgroup0, intptr_t ___userdata1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_SetUserData", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_SetUserData)(___channelgroup0, ___userdata1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___userdata1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_ChannelGroup_GetUserData(intptr_t, intptr_t*);
#endif
// FMOD.RESULT FMOD.ChannelGroup::FMOD5_ChannelGroup_GetUserData(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ChannelGroup_FMOD5_ChannelGroup_GetUserData_mF8EA0F8F939690CA6D8CFC635C5958C7E8B2AC9E (intptr_t ___channelgroup0, intptr_t* ___userdata1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_ChannelGroup_GetUserData", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_ChannelGroup_GetUserData)(___channelgroup0, ___userdata1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___channelgroup0, ___userdata1);
	#endif

	return returnValue;
}
// System.Boolean FMOD.ChannelGroup::hasHandle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool ChannelGroup_hasHandle_m00CF2E79B1782BD22AD93F7F79BA79636908470A (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ChannelGroup_hasHandle_m00CF2E79B1782BD22AD93F7F79BA79636908470A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public bool hasHandle()     { return this.handle != IntPtr.Zero; }
		intptr_t L_0 = __this->get_handle_0();
		bool L_1 = IntPtr_op_Inequality_mB4886A806009EA825EFCC60CD2A7F6EB8E273A61((intptr_t)L_0, (intptr_t)(0), /*hidden argument*/NULL);
		return L_1;
	}
}
IL2CPP_EXTERN_C  bool ChannelGroup_hasHandle_m00CF2E79B1782BD22AD93F7F79BA79636908470A_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	return ChannelGroup_hasHandle_m00CF2E79B1782BD22AD93F7F79BA79636908470A(_thisAdjusted, method);
}
// System.Void FMOD.ChannelGroup::clearHandle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChannelGroup_clearHandle_m3C24644E33F4627073F4A50BF9B0C83A7B049904 (ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ChannelGroup_clearHandle_m3C24644E33F4627073F4A50BF9B0C83A7B049904_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public void clearHandle()   { this.handle = IntPtr.Zero; }
		__this->set_handle_0((intptr_t)(0));
		// public void clearHandle()   { this.handle = IntPtr.Zero; }
		return;
	}
}
IL2CPP_EXTERN_C  void ChannelGroup_clearHandle_m3C24644E33F4627073F4A50BF9B0C83A7B049904_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 * _thisAdjusted = reinterpret_cast<ChannelGroup_t6584B2015633D3F5308BA0367B07504DC4CCF069 *>(__this + _offset);
	ChannelGroup_clearHandle_m3C24644E33F4627073F4A50BF9B0C83A7B049904(_thisAdjusted, method);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DEBUG_CALLBACK_t6A7351E61776A499C1A1BE9A923E71A21416E783 (DEBUG_CALLBACK_t6A7351E61776A499C1A1BE9A923E71A21416E783 * __this, uint32_t ___flags0, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  ___file1, int32_t ___line2, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  ___func3, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  ___message4, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , int32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 );
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___flags0, ___file1, ___line2, ___func3, ___message4);

	return returnValue;
}
// System.Void FMOD.DEBUG_CALLBACK::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DEBUG_CALLBACK__ctor_m48578ED49F314A57DC3CCAEC206F00AAA4EB0945 (DEBUG_CALLBACK_t6A7351E61776A499C1A1BE9A923E71A21416E783 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DEBUG_CALLBACK::Invoke(FMOD.DEBUG_FLAGS,FMOD.StringWrapper,System.Int32,FMOD.StringWrapper,FMOD.StringWrapper)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DEBUG_CALLBACK_Invoke_m77755299490A3CF3AAD398B2F659ECC2B9C02BD4 (DEBUG_CALLBACK_t6A7351E61776A499C1A1BE9A923E71A21416E783 * __this, uint32_t ___flags0, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  ___file1, int32_t ___line2, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  ___func3, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  ___message4, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 5)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , int32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___flags0, ___file1, ___line2, ___func3, ___message4, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , int32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___flags0, ___file1, ___line2, ___func3, ___message4, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker5< int32_t, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , int32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  >::Invoke(targetMethod, targetThis, ___flags0, ___file1, ___line2, ___func3, ___message4);
					else
						result = GenericVirtFuncInvoker5< int32_t, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , int32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  >::Invoke(targetMethod, targetThis, ___flags0, ___file1, ___line2, ___func3, ___message4);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker5< int32_t, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , int32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___flags0, ___file1, ___line2, ___func3, ___message4);
					else
						result = VirtFuncInvoker5< int32_t, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , int32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___flags0, ___file1, ___line2, ___func3, ___message4);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , int32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___flags0) - 1), ___file1, ___line2, ___func3, ___message4, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , int32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(&___flags0) - 1), ___file1, ___line2, ___func3, ___message4, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , int32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___flags0, ___file1, ___line2, ___func3, ___message4, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DEBUG_CALLBACK::BeginInvoke(FMOD.DEBUG_FLAGS,FMOD.StringWrapper,System.Int32,FMOD.StringWrapper,FMOD.StringWrapper,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DEBUG_CALLBACK_BeginInvoke_m2F24A746033771950BBAAA296C522A3CC9751EA1 (DEBUG_CALLBACK_t6A7351E61776A499C1A1BE9A923E71A21416E783 * __this, uint32_t ___flags0, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  ___file1, int32_t ___line2, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  ___func3, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  ___message4, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback5, RuntimeObject * ___object6, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DEBUG_CALLBACK_BeginInvoke_m2F24A746033771950BBAAA296C522A3CC9751EA1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[6] = {0};
	__d_args[0] = Box(DEBUG_FLAGS_t064690B82E3CFF643A403FD4A2D0322FE1B0AD56_il2cpp_TypeInfo_var, &___flags0);
	__d_args[1] = Box(StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9_il2cpp_TypeInfo_var, &___file1);
	__d_args[2] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___line2);
	__d_args[3] = Box(StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9_il2cpp_TypeInfo_var, &___func3);
	__d_args[4] = Box(StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9_il2cpp_TypeInfo_var, &___message4);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback5, (RuntimeObject*)___object6);
}
// FMOD.RESULT FMOD.DEBUG_CALLBACK::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DEBUG_CALLBACK_EndInvoke_mC312A6C29EEC28772249C69B31FF3A70652F9668 (DEBUG_CALLBACK_t6A7351E61776A499C1A1BE9A923E71A21416E783 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// FMOD.RESULT FMOD.DSP::release()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_release_mC26706FC8899552FD9BDE4FEE58CA83D16107338 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_Release(this.handle);
		intptr_t L_0 = __this->get_handle_0();
		int32_t L_1 = DSP_FMOD5_DSP_Release_mF380927297215BCAF202FE1D0AEA4D1362CD1886((intptr_t)L_0, /*hidden argument*/NULL);
		return L_1;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_release_mC26706FC8899552FD9BDE4FEE58CA83D16107338_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_release_mC26706FC8899552FD9BDE4FEE58CA83D16107338(_thisAdjusted, method);
}
// FMOD.RESULT FMOD.DSP::getSystemObject(FMOD.System&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getSystemObject_mAB3512F3ACD7508463E2D501EB86DFD2853589B2 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, System_t1E8F97CEB4B863C4A09A4EC514B0C27FBA8D08B7 * ___system0, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_GetSystemObject(this.handle, out system.handle);
		intptr_t L_0 = __this->get_handle_0();
		System_t1E8F97CEB4B863C4A09A4EC514B0C27FBA8D08B7 * L_1 = ___system0;
		intptr_t* L_2 = L_1->get_address_of_handle_0();
		int32_t L_3 = DSP_FMOD5_DSP_GetSystemObject_mE14609B8F822A8691EC6AAAEDA085B1669602807((intptr_t)L_0, (intptr_t*)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_getSystemObject_mAB3512F3ACD7508463E2D501EB86DFD2853589B2_AdjustorThunk (RuntimeObject * __this, System_t1E8F97CEB4B863C4A09A4EC514B0C27FBA8D08B7 * ___system0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_getSystemObject_mAB3512F3ACD7508463E2D501EB86DFD2853589B2(_thisAdjusted, ___system0, method);
}
// FMOD.RESULT FMOD.DSP::addInput(FMOD.DSP)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_addInput_m1235C517F88AAE47B6F4A7851D88E26DD54D509C (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___input0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_addInput_m1235C517F88AAE47B6F4A7851D88E26DD54D509C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return FMOD5_DSP_AddInput(this.handle, input.handle, IntPtr.Zero, DSPCONNECTION_TYPE.STANDARD);
		intptr_t L_0 = __this->get_handle_0();
		DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  L_1 = ___input0;
		intptr_t L_2 = L_1.get_handle_0();
		int32_t L_3 = DSP_FMOD5_DSP_AddInput_m30143D3F008EDBC623AD02BC726EB764941824F2((intptr_t)L_0, (intptr_t)L_2, (intptr_t)(0), 0, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_addInput_m1235C517F88AAE47B6F4A7851D88E26DD54D509C_AdjustorThunk (RuntimeObject * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___input0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_addInput_m1235C517F88AAE47B6F4A7851D88E26DD54D509C(_thisAdjusted, ___input0, method);
}
// FMOD.RESULT FMOD.DSP::addInput(FMOD.DSP,FMOD.DSPConnection&,FMOD.DSPCONNECTION_TYPE)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_addInput_mEA9A20658298C41669AD8AFB72274C071BC4C3FF (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___input0, DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * ___connection1, int32_t ___type2, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_AddInput(this.handle, input.handle, out connection.handle, type);
		intptr_t L_0 = __this->get_handle_0();
		DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  L_1 = ___input0;
		intptr_t L_2 = L_1.get_handle_0();
		DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * L_3 = ___connection1;
		intptr_t* L_4 = L_3->get_address_of_handle_0();
		int32_t L_5 = ___type2;
		int32_t L_6 = DSP_FMOD5_DSP_AddInput_m43D4C160D730463D60821736687C08A825C0F730((intptr_t)L_0, (intptr_t)L_2, (intptr_t*)L_4, L_5, /*hidden argument*/NULL);
		return L_6;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_addInput_mEA9A20658298C41669AD8AFB72274C071BC4C3FF_AdjustorThunk (RuntimeObject * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___input0, DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * ___connection1, int32_t ___type2, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_addInput_mEA9A20658298C41669AD8AFB72274C071BC4C3FF(_thisAdjusted, ___input0, ___connection1, ___type2, method);
}
// FMOD.RESULT FMOD.DSP::disconnectFrom(FMOD.DSP,FMOD.DSPConnection)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_disconnectFrom_mA0857B2FE22EE17ECC0448DB09EFD7761A995BE8 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___target0, DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0  ___connection1, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_DisconnectFrom(this.handle, target.handle, connection.handle);
		intptr_t L_0 = __this->get_handle_0();
		DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  L_1 = ___target0;
		intptr_t L_2 = L_1.get_handle_0();
		DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0  L_3 = ___connection1;
		intptr_t L_4 = L_3.get_handle_0();
		int32_t L_5 = DSP_FMOD5_DSP_DisconnectFrom_mE196E151C4DC8383116411277100E06CD800536C((intptr_t)L_0, (intptr_t)L_2, (intptr_t)L_4, /*hidden argument*/NULL);
		return L_5;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_disconnectFrom_mA0857B2FE22EE17ECC0448DB09EFD7761A995BE8_AdjustorThunk (RuntimeObject * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0  ___target0, DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0  ___connection1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_disconnectFrom_mA0857B2FE22EE17ECC0448DB09EFD7761A995BE8(_thisAdjusted, ___target0, ___connection1, method);
}
// FMOD.RESULT FMOD.DSP::disconnectAll(System.Boolean,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_disconnectAll_m0600BAD827BA54E4F9C1CE7CBDBCF5BC196FDC45 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, bool ___inputs0, bool ___outputs1, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_DisconnectAll(this.handle, inputs, outputs);
		intptr_t L_0 = __this->get_handle_0();
		bool L_1 = ___inputs0;
		bool L_2 = ___outputs1;
		int32_t L_3 = DSP_FMOD5_DSP_DisconnectAll_m6916B03D81942BEC728C378E94C075B99C636CF6((intptr_t)L_0, L_1, L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_disconnectAll_m0600BAD827BA54E4F9C1CE7CBDBCF5BC196FDC45_AdjustorThunk (RuntimeObject * __this, bool ___inputs0, bool ___outputs1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_disconnectAll_m0600BAD827BA54E4F9C1CE7CBDBCF5BC196FDC45(_thisAdjusted, ___inputs0, ___outputs1, method);
}
// FMOD.RESULT FMOD.DSP::getNumInputs(System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getNumInputs_m17EB7E800DB0899F51E001D072001DB0B8A2DE62 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t* ___numinputs0, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_GetNumInputs(this.handle, out numinputs);
		intptr_t L_0 = __this->get_handle_0();
		int32_t* L_1 = ___numinputs0;
		int32_t L_2 = DSP_FMOD5_DSP_GetNumInputs_m6037C9BB683E29B2287EDAD9AA22DC5661249CD1((intptr_t)L_0, (int32_t*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_getNumInputs_m17EB7E800DB0899F51E001D072001DB0B8A2DE62_AdjustorThunk (RuntimeObject * __this, int32_t* ___numinputs0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_getNumInputs_m17EB7E800DB0899F51E001D072001DB0B8A2DE62(_thisAdjusted, ___numinputs0, method);
}
// FMOD.RESULT FMOD.DSP::getNumOutputs(System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getNumOutputs_m6005B3DF76ED411B0738BF9A5D3FC2C3D48FAE91 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t* ___numoutputs0, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_GetNumOutputs(this.handle, out numoutputs);
		intptr_t L_0 = __this->get_handle_0();
		int32_t* L_1 = ___numoutputs0;
		int32_t L_2 = DSP_FMOD5_DSP_GetNumOutputs_m3E413BECA8EBB6DFF689C651B835785CB675502E((intptr_t)L_0, (int32_t*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_getNumOutputs_m6005B3DF76ED411B0738BF9A5D3FC2C3D48FAE91_AdjustorThunk (RuntimeObject * __this, int32_t* ___numoutputs0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_getNumOutputs_m6005B3DF76ED411B0738BF9A5D3FC2C3D48FAE91(_thisAdjusted, ___numoutputs0, method);
}
// FMOD.RESULT FMOD.DSP::getInput(System.Int32,FMOD.DSP&,FMOD.DSPConnection&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getInput_mAFC8972172F73552AE7603A67D4D1BA8D758AEF5 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t ___index0, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * ___input1, DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * ___inputconnection2, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_GetInput(this.handle, index, out input.handle, out inputconnection.handle);
		intptr_t L_0 = __this->get_handle_0();
		int32_t L_1 = ___index0;
		DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * L_2 = ___input1;
		intptr_t* L_3 = L_2->get_address_of_handle_0();
		DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * L_4 = ___inputconnection2;
		intptr_t* L_5 = L_4->get_address_of_handle_0();
		int32_t L_6 = DSP_FMOD5_DSP_GetInput_m7D05B21AD10A5B9D4A4E5E5B56325B2E7C180FDB((intptr_t)L_0, L_1, (intptr_t*)L_3, (intptr_t*)L_5, /*hidden argument*/NULL);
		return L_6;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_getInput_mAFC8972172F73552AE7603A67D4D1BA8D758AEF5_AdjustorThunk (RuntimeObject * __this, int32_t ___index0, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * ___input1, DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * ___inputconnection2, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_getInput_mAFC8972172F73552AE7603A67D4D1BA8D758AEF5(_thisAdjusted, ___index0, ___input1, ___inputconnection2, method);
}
// FMOD.RESULT FMOD.DSP::getOutput(System.Int32,FMOD.DSP&,FMOD.DSPConnection&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getOutput_mA9C567019244838D0305029B1BA0B28400634D67 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t ___index0, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * ___output1, DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * ___outputconnection2, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_GetOutput(this.handle, index, out output.handle, out outputconnection.handle);
		intptr_t L_0 = __this->get_handle_0();
		int32_t L_1 = ___index0;
		DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * L_2 = ___output1;
		intptr_t* L_3 = L_2->get_address_of_handle_0();
		DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * L_4 = ___outputconnection2;
		intptr_t* L_5 = L_4->get_address_of_handle_0();
		int32_t L_6 = DSP_FMOD5_DSP_GetOutput_m5CEA995BC5DC655A1323E03156925EB68C14B9B8((intptr_t)L_0, L_1, (intptr_t*)L_3, (intptr_t*)L_5, /*hidden argument*/NULL);
		return L_6;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_getOutput_mA9C567019244838D0305029B1BA0B28400634D67_AdjustorThunk (RuntimeObject * __this, int32_t ___index0, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * ___output1, DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * ___outputconnection2, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_getOutput_mA9C567019244838D0305029B1BA0B28400634D67(_thisAdjusted, ___index0, ___output1, ___outputconnection2, method);
}
// FMOD.RESULT FMOD.DSP::setActive(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_setActive_mE684F83E35859C50C51BEEF4360D6D69A0CC4515 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, bool ___active0, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_SetActive(this.handle, active);
		intptr_t L_0 = __this->get_handle_0();
		bool L_1 = ___active0;
		int32_t L_2 = DSP_FMOD5_DSP_SetActive_m915909B630467196E7B4CF120BDBB16A949D8E28((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_setActive_mE684F83E35859C50C51BEEF4360D6D69A0CC4515_AdjustorThunk (RuntimeObject * __this, bool ___active0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_setActive_mE684F83E35859C50C51BEEF4360D6D69A0CC4515(_thisAdjusted, ___active0, method);
}
// FMOD.RESULT FMOD.DSP::getActive(System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getActive_m6706DB12BDF420AFF54E6A51515E2BE646D0A049 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, bool* ___active0, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_GetActive(this.handle, out active);
		intptr_t L_0 = __this->get_handle_0();
		bool* L_1 = ___active0;
		int32_t L_2 = DSP_FMOD5_DSP_GetActive_m4A3DDEA7078472C3DA2631E72114A8A7EC9972F9((intptr_t)L_0, (bool*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_getActive_m6706DB12BDF420AFF54E6A51515E2BE646D0A049_AdjustorThunk (RuntimeObject * __this, bool* ___active0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_getActive_m6706DB12BDF420AFF54E6A51515E2BE646D0A049(_thisAdjusted, ___active0, method);
}
// FMOD.RESULT FMOD.DSP::setBypass(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_setBypass_mF01332AEF182EE656B9833FF9298EA6C7BC063E8 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, bool ___bypass0, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_SetBypass(this.handle, bypass);
		intptr_t L_0 = __this->get_handle_0();
		bool L_1 = ___bypass0;
		int32_t L_2 = DSP_FMOD5_DSP_SetBypass_mE249DC5B09D7F7C00770E59EA6867A314F7DBEE8((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_setBypass_mF01332AEF182EE656B9833FF9298EA6C7BC063E8_AdjustorThunk (RuntimeObject * __this, bool ___bypass0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_setBypass_mF01332AEF182EE656B9833FF9298EA6C7BC063E8(_thisAdjusted, ___bypass0, method);
}
// FMOD.RESULT FMOD.DSP::getBypass(System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getBypass_m8476D9731D1A20AEE3C09C6C5EDEC325CE5B540F (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, bool* ___bypass0, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_GetBypass(this.handle, out bypass);
		intptr_t L_0 = __this->get_handle_0();
		bool* L_1 = ___bypass0;
		int32_t L_2 = DSP_FMOD5_DSP_GetBypass_m88C435546D01389753D9C98781682F70FC4FE7D9((intptr_t)L_0, (bool*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_getBypass_m8476D9731D1A20AEE3C09C6C5EDEC325CE5B540F_AdjustorThunk (RuntimeObject * __this, bool* ___bypass0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_getBypass_m8476D9731D1A20AEE3C09C6C5EDEC325CE5B540F(_thisAdjusted, ___bypass0, method);
}
// FMOD.RESULT FMOD.DSP::setWetDryMix(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_setWetDryMix_m6235FE15671423749CEDBA698E5F06206DD0B151 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, float ___prewet0, float ___postwet1, float ___dry2, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_SetWetDryMix(this.handle, prewet, postwet, dry);
		intptr_t L_0 = __this->get_handle_0();
		float L_1 = ___prewet0;
		float L_2 = ___postwet1;
		float L_3 = ___dry2;
		int32_t L_4 = DSP_FMOD5_DSP_SetWetDryMix_mF72E6B89B3BF8776DB24774A3C9FF5D9DCBDD962((intptr_t)L_0, L_1, L_2, L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_setWetDryMix_m6235FE15671423749CEDBA698E5F06206DD0B151_AdjustorThunk (RuntimeObject * __this, float ___prewet0, float ___postwet1, float ___dry2, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_setWetDryMix_m6235FE15671423749CEDBA698E5F06206DD0B151(_thisAdjusted, ___prewet0, ___postwet1, ___dry2, method);
}
// FMOD.RESULT FMOD.DSP::getWetDryMix(System.Single&,System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getWetDryMix_m90BAAF7E559A88DEA84583C21E8945362863627D (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, float* ___prewet0, float* ___postwet1, float* ___dry2, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_GetWetDryMix(this.handle, out prewet, out postwet, out dry);
		intptr_t L_0 = __this->get_handle_0();
		float* L_1 = ___prewet0;
		float* L_2 = ___postwet1;
		float* L_3 = ___dry2;
		int32_t L_4 = DSP_FMOD5_DSP_GetWetDryMix_mB8CDF4A44DFEFCE5CD83AA1C1DCB7E534C7BEF03((intptr_t)L_0, (float*)L_1, (float*)L_2, (float*)L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_getWetDryMix_m90BAAF7E559A88DEA84583C21E8945362863627D_AdjustorThunk (RuntimeObject * __this, float* ___prewet0, float* ___postwet1, float* ___dry2, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_getWetDryMix_m90BAAF7E559A88DEA84583C21E8945362863627D(_thisAdjusted, ___prewet0, ___postwet1, ___dry2, method);
}
// FMOD.RESULT FMOD.DSP::setChannelFormat(FMOD.CHANNELMASK,System.Int32,FMOD.SPEAKERMODE)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_setChannelFormat_mB4AEF7CC21FB784C6A3704CF3BBD7610E158574A (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, uint32_t ___channelmask0, int32_t ___numchannels1, int32_t ___source_speakermode2, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_SetChannelFormat(this.handle, channelmask, numchannels, source_speakermode);
		intptr_t L_0 = __this->get_handle_0();
		uint32_t L_1 = ___channelmask0;
		int32_t L_2 = ___numchannels1;
		int32_t L_3 = ___source_speakermode2;
		int32_t L_4 = DSP_FMOD5_DSP_SetChannelFormat_m814AAF407F7D3B54B2D0F33A276E16AF826F08B6((intptr_t)L_0, L_1, L_2, L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_setChannelFormat_mB4AEF7CC21FB784C6A3704CF3BBD7610E158574A_AdjustorThunk (RuntimeObject * __this, uint32_t ___channelmask0, int32_t ___numchannels1, int32_t ___source_speakermode2, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_setChannelFormat_mB4AEF7CC21FB784C6A3704CF3BBD7610E158574A(_thisAdjusted, ___channelmask0, ___numchannels1, ___source_speakermode2, method);
}
// FMOD.RESULT FMOD.DSP::getChannelFormat(FMOD.CHANNELMASK&,System.Int32&,FMOD.SPEAKERMODE&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getChannelFormat_m1737C81056144DDAE0A9EE790FC479916CF86342 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, uint32_t* ___channelmask0, int32_t* ___numchannels1, int32_t* ___source_speakermode2, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_GetChannelFormat(this.handle, out channelmask, out numchannels, out source_speakermode);
		intptr_t L_0 = __this->get_handle_0();
		uint32_t* L_1 = ___channelmask0;
		int32_t* L_2 = ___numchannels1;
		int32_t* L_3 = ___source_speakermode2;
		int32_t L_4 = DSP_FMOD5_DSP_GetChannelFormat_m0E5F85B7C7EFABB11816A8FB3FA04F125DA396AE((intptr_t)L_0, (uint32_t*)L_1, (int32_t*)L_2, (int32_t*)L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_getChannelFormat_m1737C81056144DDAE0A9EE790FC479916CF86342_AdjustorThunk (RuntimeObject * __this, uint32_t* ___channelmask0, int32_t* ___numchannels1, int32_t* ___source_speakermode2, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_getChannelFormat_m1737C81056144DDAE0A9EE790FC479916CF86342(_thisAdjusted, ___channelmask0, ___numchannels1, ___source_speakermode2, method);
}
// FMOD.RESULT FMOD.DSP::getOutputChannelFormat(FMOD.CHANNELMASK,System.Int32,FMOD.SPEAKERMODE,FMOD.CHANNELMASK&,System.Int32&,FMOD.SPEAKERMODE&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getOutputChannelFormat_m4D0AD74BAD90083268F098FF0CE41C7F039AF21A (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, uint32_t ___inmask0, int32_t ___inchannels1, int32_t ___inspeakermode2, uint32_t* ___outmask3, int32_t* ___outchannels4, int32_t* ___outspeakermode5, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_GetOutputChannelFormat(this.handle, inmask, inchannels, inspeakermode, out outmask, out outchannels, out outspeakermode);
		intptr_t L_0 = __this->get_handle_0();
		uint32_t L_1 = ___inmask0;
		int32_t L_2 = ___inchannels1;
		int32_t L_3 = ___inspeakermode2;
		uint32_t* L_4 = ___outmask3;
		int32_t* L_5 = ___outchannels4;
		int32_t* L_6 = ___outspeakermode5;
		int32_t L_7 = DSP_FMOD5_DSP_GetOutputChannelFormat_mF21D4F5D6649586EE14BA82AD96B9887FE54DB68((intptr_t)L_0, L_1, L_2, L_3, (uint32_t*)L_4, (int32_t*)L_5, (int32_t*)L_6, /*hidden argument*/NULL);
		return L_7;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_getOutputChannelFormat_m4D0AD74BAD90083268F098FF0CE41C7F039AF21A_AdjustorThunk (RuntimeObject * __this, uint32_t ___inmask0, int32_t ___inchannels1, int32_t ___inspeakermode2, uint32_t* ___outmask3, int32_t* ___outchannels4, int32_t* ___outspeakermode5, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_getOutputChannelFormat_m4D0AD74BAD90083268F098FF0CE41C7F039AF21A(_thisAdjusted, ___inmask0, ___inchannels1, ___inspeakermode2, ___outmask3, ___outchannels4, ___outspeakermode5, method);
}
// FMOD.RESULT FMOD.DSP::reset()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_reset_mD4D11665122F405501176DE7F3C39BDD73FE404D (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_Reset(this.handle);
		intptr_t L_0 = __this->get_handle_0();
		int32_t L_1 = DSP_FMOD5_DSP_Reset_m62E908B773DB32D5CCD84249391F2937AE44BA8A((intptr_t)L_0, /*hidden argument*/NULL);
		return L_1;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_reset_mD4D11665122F405501176DE7F3C39BDD73FE404D_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_reset_mD4D11665122F405501176DE7F3C39BDD73FE404D(_thisAdjusted, method);
}
// FMOD.RESULT FMOD.DSP::setParameterFloat(System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_setParameterFloat_m9D0E87DA92CC31AC03FEBE32B31AAF1FA6EFEB89 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t ___index0, float ___value1, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_SetParameterFloat(this.handle, index, value);
		intptr_t L_0 = __this->get_handle_0();
		int32_t L_1 = ___index0;
		float L_2 = ___value1;
		int32_t L_3 = DSP_FMOD5_DSP_SetParameterFloat_m4D0DA2B3131EFB1297A90CAD955DD9AD18EBDC62((intptr_t)L_0, L_1, L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_setParameterFloat_m9D0E87DA92CC31AC03FEBE32B31AAF1FA6EFEB89_AdjustorThunk (RuntimeObject * __this, int32_t ___index0, float ___value1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_setParameterFloat_m9D0E87DA92CC31AC03FEBE32B31AAF1FA6EFEB89(_thisAdjusted, ___index0, ___value1, method);
}
// FMOD.RESULT FMOD.DSP::setParameterInt(System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_setParameterInt_m530D5AFBA5EF8F3C41D07B7A553C0D29D48D2D0E (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t ___index0, int32_t ___value1, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_SetParameterInt(this.handle, index, value);
		intptr_t L_0 = __this->get_handle_0();
		int32_t L_1 = ___index0;
		int32_t L_2 = ___value1;
		int32_t L_3 = DSP_FMOD5_DSP_SetParameterInt_m7AA5F852BE211B947334D04C88DB1DF58757B19C((intptr_t)L_0, L_1, L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_setParameterInt_m530D5AFBA5EF8F3C41D07B7A553C0D29D48D2D0E_AdjustorThunk (RuntimeObject * __this, int32_t ___index0, int32_t ___value1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_setParameterInt_m530D5AFBA5EF8F3C41D07B7A553C0D29D48D2D0E(_thisAdjusted, ___index0, ___value1, method);
}
// FMOD.RESULT FMOD.DSP::setParameterBool(System.Int32,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_setParameterBool_mECADEC2F1BDC969505AE84A0476FD4D43C90CC95 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t ___index0, bool ___value1, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_SetParameterBool(this.handle, index, value);
		intptr_t L_0 = __this->get_handle_0();
		int32_t L_1 = ___index0;
		bool L_2 = ___value1;
		int32_t L_3 = DSP_FMOD5_DSP_SetParameterBool_m3ECE376D7EBEED0BC335D3D4C78D49232037032E((intptr_t)L_0, L_1, L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_setParameterBool_mECADEC2F1BDC969505AE84A0476FD4D43C90CC95_AdjustorThunk (RuntimeObject * __this, int32_t ___index0, bool ___value1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_setParameterBool_mECADEC2F1BDC969505AE84A0476FD4D43C90CC95(_thisAdjusted, ___index0, ___value1, method);
}
// FMOD.RESULT FMOD.DSP::setParameterData(System.Int32,System.Byte[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_setParameterData_m2ABDC24CA116256E4EAD46675812E55A3C1A376C (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t ___index0, ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* ___data1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_setParameterData_m2ABDC24CA116256E4EAD46675812E55A3C1A376C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return FMOD5_DSP_SetParameterData(this.handle, index, Marshal.UnsafeAddrOfPinnedArrayElement(data, 0), (uint)data.Length);
		intptr_t L_0 = __this->get_handle_0();
		int32_t L_1 = ___index0;
		ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* L_2 = ___data1;
		IL2CPP_RUNTIME_CLASS_INIT(Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var);
		intptr_t L_3 = Marshal_UnsafeAddrOfPinnedArrayElement_TisByte_tF87C579059BD4633E6840EBBBEEF899C6E33EF07_m0F1B760143B0C170B0274CA8B82FE6C3F74D7962(L_2, 0, /*hidden argument*/Marshal_UnsafeAddrOfPinnedArrayElement_TisByte_tF87C579059BD4633E6840EBBBEEF899C6E33EF07_m0F1B760143B0C170B0274CA8B82FE6C3F74D7962_RuntimeMethod_var);
		ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* L_4 = ___data1;
		NullCheck(L_4);
		int32_t L_5 = DSP_FMOD5_DSP_SetParameterData_mE6FC992345EE96F96DDC0B6EE7E27FF0B63A9F6F((intptr_t)L_0, L_1, (intptr_t)L_3, (((int32_t)((int32_t)(((RuntimeArray*)L_4)->max_length)))), /*hidden argument*/NULL);
		return L_5;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_setParameterData_m2ABDC24CA116256E4EAD46675812E55A3C1A376C_AdjustorThunk (RuntimeObject * __this, int32_t ___index0, ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* ___data1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_setParameterData_m2ABDC24CA116256E4EAD46675812E55A3C1A376C(_thisAdjusted, ___index0, ___data1, method);
}
// FMOD.RESULT FMOD.DSP::getParameterFloat(System.Int32,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getParameterFloat_m0F47E864FA9E66C02B869531F6766B6B9A134902 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t ___index0, float* ___value1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_getParameterFloat_m0F47E864FA9E66C02B869531F6766B6B9A134902_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return FMOD5_DSP_GetParameterFloat(this.handle, index, out value, IntPtr.Zero, 0);
		intptr_t L_0 = __this->get_handle_0();
		int32_t L_1 = ___index0;
		float* L_2 = ___value1;
		int32_t L_3 = DSP_FMOD5_DSP_GetParameterFloat_m8E943D26014468E67E93FF05B687ED4591C5A4AB((intptr_t)L_0, L_1, (float*)L_2, (intptr_t)(0), 0, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_getParameterFloat_m0F47E864FA9E66C02B869531F6766B6B9A134902_AdjustorThunk (RuntimeObject * __this, int32_t ___index0, float* ___value1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_getParameterFloat_m0F47E864FA9E66C02B869531F6766B6B9A134902(_thisAdjusted, ___index0, ___value1, method);
}
// FMOD.RESULT FMOD.DSP::getParameterInt(System.Int32,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getParameterInt_mEFE0D395D967F2A9C9E1F6982E61CC12437CC41A (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t ___index0, int32_t* ___value1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_getParameterInt_mEFE0D395D967F2A9C9E1F6982E61CC12437CC41A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return FMOD5_DSP_GetParameterInt(this.handle, index, out value, IntPtr.Zero, 0);
		intptr_t L_0 = __this->get_handle_0();
		int32_t L_1 = ___index0;
		int32_t* L_2 = ___value1;
		int32_t L_3 = DSP_FMOD5_DSP_GetParameterInt_mB8DE66385A79F4CAAE81CB9D4AFAFD71BA8E09C9((intptr_t)L_0, L_1, (int32_t*)L_2, (intptr_t)(0), 0, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_getParameterInt_mEFE0D395D967F2A9C9E1F6982E61CC12437CC41A_AdjustorThunk (RuntimeObject * __this, int32_t ___index0, int32_t* ___value1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_getParameterInt_mEFE0D395D967F2A9C9E1F6982E61CC12437CC41A(_thisAdjusted, ___index0, ___value1, method);
}
// FMOD.RESULT FMOD.DSP::getParameterBool(System.Int32,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getParameterBool_mC2E00FAE1822A4405D180DE4D20A3556E177C8C1 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t ___index0, bool* ___value1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_getParameterBool_mC2E00FAE1822A4405D180DE4D20A3556E177C8C1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return FMOD5_DSP_GetParameterBool(this.handle, index, out value, IntPtr.Zero, 0);
		intptr_t L_0 = __this->get_handle_0();
		int32_t L_1 = ___index0;
		bool* L_2 = ___value1;
		int32_t L_3 = DSP_FMOD5_DSP_GetParameterBool_m039E29840D8E1C7017AA796C9644B16CCD7FB04C((intptr_t)L_0, L_1, (bool*)L_2, (intptr_t)(0), 0, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_getParameterBool_mC2E00FAE1822A4405D180DE4D20A3556E177C8C1_AdjustorThunk (RuntimeObject * __this, int32_t ___index0, bool* ___value1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_getParameterBool_mC2E00FAE1822A4405D180DE4D20A3556E177C8C1(_thisAdjusted, ___index0, ___value1, method);
}
// FMOD.RESULT FMOD.DSP::getParameterData(System.Int32,System.IntPtr&,System.UInt32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getParameterData_m317D997B9F2401DEB58AD919CFEA4F310FEBDAB2 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t ___index0, intptr_t* ___data1, uint32_t* ___length2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_getParameterData_m317D997B9F2401DEB58AD919CFEA4F310FEBDAB2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return FMOD5_DSP_GetParameterData(this.handle, index, out data, out length, IntPtr.Zero, 0);
		intptr_t L_0 = __this->get_handle_0();
		int32_t L_1 = ___index0;
		intptr_t* L_2 = ___data1;
		uint32_t* L_3 = ___length2;
		int32_t L_4 = DSP_FMOD5_DSP_GetParameterData_mA1E652788F483EF3D4D41CE1D4B0FE86BC0B8C8F((intptr_t)L_0, L_1, (intptr_t*)L_2, (uint32_t*)L_3, (intptr_t)(0), 0, /*hidden argument*/NULL);
		return L_4;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_getParameterData_m317D997B9F2401DEB58AD919CFEA4F310FEBDAB2_AdjustorThunk (RuntimeObject * __this, int32_t ___index0, intptr_t* ___data1, uint32_t* ___length2, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_getParameterData_m317D997B9F2401DEB58AD919CFEA4F310FEBDAB2(_thisAdjusted, ___index0, ___data1, ___length2, method);
}
// FMOD.RESULT FMOD.DSP::getNumParameters(System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getNumParameters_mD14929BD95E9DA05DB43CA8EF19B744F33D95687 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t* ___numparams0, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_GetNumParameters(this.handle, out numparams);
		intptr_t L_0 = __this->get_handle_0();
		int32_t* L_1 = ___numparams0;
		int32_t L_2 = DSP_FMOD5_DSP_GetNumParameters_mADD10DCF2DAD8A9B140E5E2DE3A90A327B40C0A0((intptr_t)L_0, (int32_t*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_getNumParameters_mD14929BD95E9DA05DB43CA8EF19B744F33D95687_AdjustorThunk (RuntimeObject * __this, int32_t* ___numparams0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_getNumParameters_mD14929BD95E9DA05DB43CA8EF19B744F33D95687(_thisAdjusted, ___numparams0, method);
}
// FMOD.RESULT FMOD.DSP::getParameterInfo(System.Int32,FMOD.DSP_PARAMETER_DESC&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getParameterInfo_m3691F7765AC1E3CEA0DC3D71E976CD89C25DFF97 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t ___index0, DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06 * ___desc1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_getParameterInfo_m3691F7765AC1E3CEA0DC3D71E976CD89C25DFF97_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	intptr_t V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		// RESULT result = FMOD5_DSP_GetParameterInfo(this.handle, index, out descPtr);
		intptr_t L_0 = __this->get_handle_0();
		int32_t L_1 = ___index0;
		int32_t L_2 = DSP_FMOD5_DSP_GetParameterInfo_mA89BE77ECC20197AE8AEEA3022896C6B575BDE5F((intptr_t)L_0, L_1, (intptr_t*)(&V_0), /*hidden argument*/NULL);
		// desc = Marshal.PtrToStructure<DSP_PARAMETER_DESC>(descPtr);
		DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06 * L_3 = ___desc1;
		intptr_t L_4 = V_0;
		IL2CPP_RUNTIME_CLASS_INIT(Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var);
		DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06  L_5 = Marshal_PtrToStructure_TisDSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06_m999834B093023B040AB51001C89E09D979EE1378((intptr_t)L_4, /*hidden argument*/Marshal_PtrToStructure_TisDSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06_m999834B093023B040AB51001C89E09D979EE1378_RuntimeMethod_var);
		*(DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06 *)L_3 = L_5;
		Il2CppCodeGenWriteBarrier((void**)&(((DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06 *)L_3)->___name_1), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06 *)L_3)->___label_2), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06 *)L_3)->___description_3), (void*)NULL);
		#endif
		// return result;
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_getParameterInfo_m3691F7765AC1E3CEA0DC3D71E976CD89C25DFF97_AdjustorThunk (RuntimeObject * __this, int32_t ___index0, DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06 * ___desc1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_getParameterInfo_m3691F7765AC1E3CEA0DC3D71E976CD89C25DFF97(_thisAdjusted, ___index0, ___desc1, method);
}
// FMOD.RESULT FMOD.DSP::getDataParameterIndex(System.Int32,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getDataParameterIndex_m7BD84E7C81164772EAD8A88F0C57404190D31335 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t ___datatype0, int32_t* ___index1, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_GetDataParameterIndex(this.handle, datatype, out index);
		intptr_t L_0 = __this->get_handle_0();
		int32_t L_1 = ___datatype0;
		int32_t* L_2 = ___index1;
		int32_t L_3 = DSP_FMOD5_DSP_GetDataParameterIndex_m0DA86256EF59C3D918EA64107CEE4905CC4268C8((intptr_t)L_0, L_1, (int32_t*)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_getDataParameterIndex_m7BD84E7C81164772EAD8A88F0C57404190D31335_AdjustorThunk (RuntimeObject * __this, int32_t ___datatype0, int32_t* ___index1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_getDataParameterIndex_m7BD84E7C81164772EAD8A88F0C57404190D31335(_thisAdjusted, ___datatype0, ___index1, method);
}
// FMOD.RESULT FMOD.DSP::showConfigDialog(System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_showConfigDialog_m8EB6F73F72ED2F0C9E92440A9AA93DC5FC74BF2D (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, intptr_t ___hwnd0, bool ___show1, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_ShowConfigDialog(this.handle, hwnd, show);
		intptr_t L_0 = __this->get_handle_0();
		intptr_t L_1 = ___hwnd0;
		bool L_2 = ___show1;
		int32_t L_3 = DSP_FMOD5_DSP_ShowConfigDialog_mEE6BD5505EE745E95C9CBB843044863DCD160763((intptr_t)L_0, (intptr_t)L_1, L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_showConfigDialog_m8EB6F73F72ED2F0C9E92440A9AA93DC5FC74BF2D_AdjustorThunk (RuntimeObject * __this, intptr_t ___hwnd0, bool ___show1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_showConfigDialog_m8EB6F73F72ED2F0C9E92440A9AA93DC5FC74BF2D(_thisAdjusted, ___hwnd0, ___show1, method);
}
// FMOD.RESULT FMOD.DSP::getInfo(System.String&,System.UInt32&,System.Int32&,System.Int32&,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getInfo_m53B878536F6955F09E3DABF1BE0A859506E9F14B (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, String_t** ___name0, uint32_t* ___version1, int32_t* ___channels2, int32_t* ___configwidth3, int32_t* ___configheight4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_getInfo_m53B878536F6955F09E3DABF1BE0A859506E9F14B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	intptr_t V_0;
	memset((&V_0), 0, sizeof(V_0));
	int32_t V_1 = 0;
	ThreadSafeEncoding_t9C88ACD17730C478FB2685CA11D1ABC64C1A1771 * V_2 = NULL;
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		// IntPtr nameMem = Marshal.AllocHGlobal(32);
		IL2CPP_RUNTIME_CLASS_INIT(Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var);
		intptr_t L_0 = Marshal_AllocHGlobal_m3BFCB876D7469108C8676D6DD90D943806C13A58(((int32_t)32), /*hidden argument*/NULL);
		V_0 = (intptr_t)L_0;
		// RESULT result = FMOD5_DSP_GetInfo(this.handle, nameMem, out version, out channels, out configwidth, out configheight);
		intptr_t L_1 = __this->get_handle_0();
		intptr_t L_2 = V_0;
		uint32_t* L_3 = ___version1;
		int32_t* L_4 = ___channels2;
		int32_t* L_5 = ___configwidth3;
		int32_t* L_6 = ___configheight4;
		int32_t L_7 = DSP_FMOD5_DSP_GetInfo_mE37CF5E7D9414C0C665F4F3C4FA9A5F32FEBFD8D((intptr_t)L_1, (intptr_t)L_2, (uint32_t*)L_3, (int32_t*)L_4, (int32_t*)L_5, (int32_t*)L_6, /*hidden argument*/NULL);
		V_1 = L_7;
		// using (StringHelper.ThreadSafeEncoding encoder = StringHelper.GetFreeHelper())
		IL2CPP_RUNTIME_CLASS_INIT(StringHelper_tCA6285337EBB683D188638581D30D196C340F0FC_il2cpp_TypeInfo_var);
		ThreadSafeEncoding_t9C88ACD17730C478FB2685CA11D1ABC64C1A1771 * L_8 = StringHelper_GetFreeHelper_mF20CD435503694A169A0FBC7EDAD73E3BCE4E257(/*hidden argument*/NULL);
		V_2 = L_8;
	}

IL_0021:
	try
	{ // begin try (depth: 1)
		// name = encoder.stringFromNative(nameMem);
		String_t** L_9 = ___name0;
		ThreadSafeEncoding_t9C88ACD17730C478FB2685CA11D1ABC64C1A1771 * L_10 = V_2;
		intptr_t L_11 = V_0;
		NullCheck(L_10);
		String_t* L_12 = ThreadSafeEncoding_stringFromNative_m5D2DB516A8AF5CE6BC34A3DF0A402E4A6F2CD3A0(L_10, (intptr_t)L_11, /*hidden argument*/NULL);
		*((RuntimeObject **)L_9) = (RuntimeObject *)L_12;
		Il2CppCodeGenWriteBarrier((void**)(RuntimeObject **)L_9, (void*)(RuntimeObject *)L_12);
		// }
		IL2CPP_LEAVE(0x36, FINALLY_002c);
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_002c;
	}

FINALLY_002c:
	{ // begin finally (depth: 1)
		{
			ThreadSafeEncoding_t9C88ACD17730C478FB2685CA11D1ABC64C1A1771 * L_13 = V_2;
			if (!L_13)
			{
				goto IL_0035;
			}
		}

IL_002f:
		{
			ThreadSafeEncoding_t9C88ACD17730C478FB2685CA11D1ABC64C1A1771 * L_14 = V_2;
			NullCheck(L_14);
			InterfaceActionInvoker0::Invoke(0 /* System.Void System.IDisposable::Dispose() */, IDisposable_t7218B22548186B208D65EA5B7870503810A2D15A_il2cpp_TypeInfo_var, L_14);
		}

IL_0035:
		{
			IL2CPP_END_FINALLY(44)
		}
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(44)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x36, IL_0036)
	}

IL_0036:
	{
		// Marshal.FreeHGlobal(nameMem);
		intptr_t L_15 = V_0;
		IL2CPP_RUNTIME_CLASS_INIT(Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var);
		Marshal_FreeHGlobal_mF098DF00F5341FDE4747A6F2004D5A0C9B03ED85((intptr_t)L_15, /*hidden argument*/NULL);
		// return result;
		int32_t L_16 = V_1;
		return L_16;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_getInfo_m53B878536F6955F09E3DABF1BE0A859506E9F14B_AdjustorThunk (RuntimeObject * __this, String_t** ___name0, uint32_t* ___version1, int32_t* ___channels2, int32_t* ___configwidth3, int32_t* ___configheight4, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_getInfo_m53B878536F6955F09E3DABF1BE0A859506E9F14B(_thisAdjusted, ___name0, ___version1, ___channels2, ___configwidth3, ___configheight4, method);
}
// FMOD.RESULT FMOD.DSP::getInfo(System.UInt32&,System.Int32&,System.Int32&,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getInfo_m610C2DFF511AE47B571676D398136D93E7E6BA00 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, uint32_t* ___version0, int32_t* ___channels1, int32_t* ___configwidth2, int32_t* ___configheight3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_getInfo_m610C2DFF511AE47B571676D398136D93E7E6BA00_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return FMOD5_DSP_GetInfo(this.handle, IntPtr.Zero, out version, out channels, out configwidth, out configheight); ;
		intptr_t L_0 = __this->get_handle_0();
		uint32_t* L_1 = ___version0;
		int32_t* L_2 = ___channels1;
		int32_t* L_3 = ___configwidth2;
		int32_t* L_4 = ___configheight3;
		int32_t L_5 = DSP_FMOD5_DSP_GetInfo_mE37CF5E7D9414C0C665F4F3C4FA9A5F32FEBFD8D((intptr_t)L_0, (intptr_t)(0), (uint32_t*)L_1, (int32_t*)L_2, (int32_t*)L_3, (int32_t*)L_4, /*hidden argument*/NULL);
		return L_5;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_getInfo_m610C2DFF511AE47B571676D398136D93E7E6BA00_AdjustorThunk (RuntimeObject * __this, uint32_t* ___version0, int32_t* ___channels1, int32_t* ___configwidth2, int32_t* ___configheight3, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_getInfo_m610C2DFF511AE47B571676D398136D93E7E6BA00(_thisAdjusted, ___version0, ___channels1, ___configwidth2, ___configheight3, method);
}
// FMOD.RESULT FMOD.DSP::getType(FMOD.DSP_TYPE&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getType_m0839C4F285386870A5F3ABA7FCBB183AFBDA101C (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, int32_t* ___type0, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_GetType(this.handle, out type);
		intptr_t L_0 = __this->get_handle_0();
		int32_t* L_1 = ___type0;
		int32_t L_2 = DSP_FMOD5_DSP_GetType_m1C3185A6A9DB19929D9D87EFDC9FAA3A1B329141((intptr_t)L_0, (int32_t*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_getType_m0839C4F285386870A5F3ABA7FCBB183AFBDA101C_AdjustorThunk (RuntimeObject * __this, int32_t* ___type0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_getType_m0839C4F285386870A5F3ABA7FCBB183AFBDA101C(_thisAdjusted, ___type0, method);
}
// FMOD.RESULT FMOD.DSP::getIdle(System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getIdle_m9F4C5EF6742CD80CFBABD5C95357C0690F407636 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, bool* ___idle0, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_GetIdle(this.handle, out idle);
		intptr_t L_0 = __this->get_handle_0();
		bool* L_1 = ___idle0;
		int32_t L_2 = DSP_FMOD5_DSP_GetIdle_mF1AA204C6B79C1A66EF2AC5E8974233D6F0725D3((intptr_t)L_0, (bool*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_getIdle_m9F4C5EF6742CD80CFBABD5C95357C0690F407636_AdjustorThunk (RuntimeObject * __this, bool* ___idle0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_getIdle_m9F4C5EF6742CD80CFBABD5C95357C0690F407636(_thisAdjusted, ___idle0, method);
}
// FMOD.RESULT FMOD.DSP::setUserData(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_setUserData_mCFBDA50D011FB0AC8F03E447FDD8BB64CC4066CA (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, intptr_t ___userdata0, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_SetUserData(this.handle, userdata);
		intptr_t L_0 = __this->get_handle_0();
		intptr_t L_1 = ___userdata0;
		int32_t L_2 = DSP_FMOD5_DSP_SetUserData_mF18EA0042E1FC3358793BCB4BCC595BC42A64A65((intptr_t)L_0, (intptr_t)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_setUserData_mCFBDA50D011FB0AC8F03E447FDD8BB64CC4066CA_AdjustorThunk (RuntimeObject * __this, intptr_t ___userdata0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_setUserData_mCFBDA50D011FB0AC8F03E447FDD8BB64CC4066CA(_thisAdjusted, ___userdata0, method);
}
// FMOD.RESULT FMOD.DSP::getUserData(System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getUserData_m71CCCEBA5A2E5A1FF179CED42D8DCBF941A9380F (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, intptr_t* ___userdata0, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_GetUserData(this.handle, out userdata);
		intptr_t L_0 = __this->get_handle_0();
		intptr_t* L_1 = ___userdata0;
		int32_t L_2 = DSP_FMOD5_DSP_GetUserData_m16DBE4332F0FB870D8B9B60B08D261AC746B3630((intptr_t)L_0, (intptr_t*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_getUserData_m71CCCEBA5A2E5A1FF179CED42D8DCBF941A9380F_AdjustorThunk (RuntimeObject * __this, intptr_t* ___userdata0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_getUserData_m71CCCEBA5A2E5A1FF179CED42D8DCBF941A9380F(_thisAdjusted, ___userdata0, method);
}
// FMOD.RESULT FMOD.DSP::setMeteringEnabled(System.Boolean,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_setMeteringEnabled_m87A7070223503235E484A9DBD83FF0C535068B66 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, bool ___inputEnabled0, bool ___outputEnabled1, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_SetMeteringEnabled(this.handle, inputEnabled, outputEnabled);
		intptr_t L_0 = __this->get_handle_0();
		bool L_1 = ___inputEnabled0;
		bool L_2 = ___outputEnabled1;
		int32_t L_3 = DSP_FMOD5_DSP_SetMeteringEnabled_m908326F53614C8EB9383B4163E59C67C1F4CB216((intptr_t)L_0, L_1, L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_setMeteringEnabled_m87A7070223503235E484A9DBD83FF0C535068B66_AdjustorThunk (RuntimeObject * __this, bool ___inputEnabled0, bool ___outputEnabled1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_setMeteringEnabled_m87A7070223503235E484A9DBD83FF0C535068B66(_thisAdjusted, ___inputEnabled0, ___outputEnabled1, method);
}
// FMOD.RESULT FMOD.DSP::getMeteringEnabled(System.Boolean&,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getMeteringEnabled_mECA5E69AB8907015B8C796FD9DF24AA4730CE615 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, bool* ___inputEnabled0, bool* ___outputEnabled1, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_GetMeteringEnabled(this.handle, out inputEnabled, out outputEnabled);
		intptr_t L_0 = __this->get_handle_0();
		bool* L_1 = ___inputEnabled0;
		bool* L_2 = ___outputEnabled1;
		int32_t L_3 = DSP_FMOD5_DSP_GetMeteringEnabled_m97BA20CB98F0A57313717985BCC7AE11AA1CC0C4((intptr_t)L_0, (bool*)L_1, (bool*)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_getMeteringEnabled_mECA5E69AB8907015B8C796FD9DF24AA4730CE615_AdjustorThunk (RuntimeObject * __this, bool* ___inputEnabled0, bool* ___outputEnabled1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_getMeteringEnabled_mECA5E69AB8907015B8C796FD9DF24AA4730CE615(_thisAdjusted, ___inputEnabled0, ___outputEnabled1, method);
}
// FMOD.RESULT FMOD.DSP::getMeteringInfo(System.IntPtr,FMOD.DSP_METERING_INFO&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getMeteringInfo_m1449AFCA34CAE4E6A991A9E29FC42157C1C8DF4E (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, intptr_t ___zero0, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2 * ___outputInfo1, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_GetMeteringInfo(this.handle, zero, out outputInfo);
		intptr_t L_0 = __this->get_handle_0();
		intptr_t L_1 = ___zero0;
		DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2 * L_2 = ___outputInfo1;
		int32_t L_3 = DSP_FMOD5_DSP_GetMeteringInfo_mB23FC2AF6CE1EE8FBE05B8819282F3506862C645((intptr_t)L_0, (intptr_t)L_1, (DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2 *)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_getMeteringInfo_m1449AFCA34CAE4E6A991A9E29FC42157C1C8DF4E_AdjustorThunk (RuntimeObject * __this, intptr_t ___zero0, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2 * ___outputInfo1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_getMeteringInfo_m1449AFCA34CAE4E6A991A9E29FC42157C1C8DF4E(_thisAdjusted, ___zero0, ___outputInfo1, method);
}
// FMOD.RESULT FMOD.DSP::getMeteringInfo(FMOD.DSP_METERING_INFO&,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getMeteringInfo_m786E8EB4C64F7D6A91D2E04144AFA42B27F12639 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2 * ___inputInfo0, intptr_t ___zero1, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_GetMeteringInfo(this.handle, out inputInfo, zero);
		intptr_t L_0 = __this->get_handle_0();
		DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2 * L_1 = ___inputInfo0;
		intptr_t L_2 = ___zero1;
		int32_t L_3 = DSP_FMOD5_DSP_GetMeteringInfo_m6CFF8C8845DF04759A605D3DC10D8387A5E60DBB((intptr_t)L_0, (DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2 *)L_1, (intptr_t)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_getMeteringInfo_m786E8EB4C64F7D6A91D2E04144AFA42B27F12639_AdjustorThunk (RuntimeObject * __this, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2 * ___inputInfo0, intptr_t ___zero1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_getMeteringInfo_m786E8EB4C64F7D6A91D2E04144AFA42B27F12639(_thisAdjusted, ___inputInfo0, ___zero1, method);
}
// FMOD.RESULT FMOD.DSP::getMeteringInfo(FMOD.DSP_METERING_INFO&,FMOD.DSP_METERING_INFO&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getMeteringInfo_m646AEC600771956C53C71738D99EF48438ED21FA (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2 * ___inputInfo0, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2 * ___outputInfo1, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_GetMeteringInfo(this.handle, out inputInfo, out outputInfo);
		intptr_t L_0 = __this->get_handle_0();
		DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2 * L_1 = ___inputInfo0;
		DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2 * L_2 = ___outputInfo1;
		int32_t L_3 = DSP_FMOD5_DSP_GetMeteringInfo_mDABF623A8D39DC6D2E546706890BA3445991CEC7((intptr_t)L_0, (DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2 *)L_1, (DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2 *)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_getMeteringInfo_m646AEC600771956C53C71738D99EF48438ED21FA_AdjustorThunk (RuntimeObject * __this, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2 * ___inputInfo0, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2 * ___outputInfo1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_getMeteringInfo_m646AEC600771956C53C71738D99EF48438ED21FA(_thisAdjusted, ___inputInfo0, ___outputInfo1, method);
}
// FMOD.RESULT FMOD.DSP::getCPUUsage(System.UInt32&,System.UInt32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_getCPUUsage_m89E9B75C4CDD491E56482DE474F027455B814943 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, uint32_t* ___exclusive0, uint32_t* ___inclusive1, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSP_GetCPUUsage(this.handle, out exclusive, out inclusive);
		intptr_t L_0 = __this->get_handle_0();
		uint32_t* L_1 = ___exclusive0;
		uint32_t* L_2 = ___inclusive1;
		int32_t L_3 = DSP_FMOD5_DSP_GetCPUUsage_m5FCE4C319610B80DEF0EA9E366052405B307D52B((intptr_t)L_0, (uint32_t*)L_1, (uint32_t*)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t DSP_getCPUUsage_m89E9B75C4CDD491E56482DE474F027455B814943_AdjustorThunk (RuntimeObject * __this, uint32_t* ___exclusive0, uint32_t* ___inclusive1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_getCPUUsage_m89E9B75C4CDD491E56482DE474F027455B814943(_thisAdjusted, ___exclusive0, ___inclusive1, method);
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_Release(intptr_t);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_Release(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_Release_mF380927297215BCAF202FE1D0AEA4D1362CD1886 (intptr_t ___dsp0, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_Release", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_Release)(___dsp0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_GetSystemObject(intptr_t, intptr_t*);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetSystemObject(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetSystemObject_mE14609B8F822A8691EC6AAAEDA085B1669602807 (intptr_t ___dsp0, intptr_t* ___system1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_GetSystemObject", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_GetSystemObject)(___dsp0, ___system1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___system1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_AddInput(intptr_t, intptr_t, intptr_t, int32_t);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_AddInput(System.IntPtr,System.IntPtr,System.IntPtr,FMOD.DSPCONNECTION_TYPE)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_AddInput_m30143D3F008EDBC623AD02BC726EB764941824F2 (intptr_t ___dsp0, intptr_t ___input1, intptr_t ___zero2, int32_t ___type3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_AddInput", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_AddInput)(___dsp0, ___input1, ___zero2, ___type3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___input1, ___zero2, ___type3);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_AddInput(System.IntPtr,System.IntPtr,System.IntPtr&,FMOD.DSPCONNECTION_TYPE)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_AddInput_m43D4C160D730463D60821736687C08A825C0F730 (intptr_t ___dsp0, intptr_t ___input1, intptr_t* ___connection2, int32_t ___type3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t, intptr_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_AddInput", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_AddInput)(___dsp0, ___input1, ___connection2, ___type3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___input1, ___connection2, ___type3);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_DisconnectFrom(intptr_t, intptr_t, intptr_t);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_DisconnectFrom(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_DisconnectFrom_mE196E151C4DC8383116411277100E06CD800536C (intptr_t ___dsp0, intptr_t ___target1, intptr_t ___connection2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_DisconnectFrom", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_DisconnectFrom)(___dsp0, ___target1, ___connection2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___target1, ___connection2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_DisconnectAll(intptr_t, int32_t, int32_t);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_DisconnectAll(System.IntPtr,System.Boolean,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_DisconnectAll_m6916B03D81942BEC728C378E94C075B99C636CF6 (intptr_t ___dsp0, bool ___inputs1, bool ___outputs2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + 4 + 4;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_DisconnectAll", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_DisconnectAll)(___dsp0, static_cast<int32_t>(___inputs1), static_cast<int32_t>(___outputs2));
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, static_cast<int32_t>(___inputs1), static_cast<int32_t>(___outputs2));
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_GetNumInputs(intptr_t, int32_t*);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetNumInputs(System.IntPtr,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetNumInputs_m6037C9BB683E29B2287EDAD9AA22DC5661249CD1 (intptr_t ___dsp0, int32_t* ___numinputs1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_GetNumInputs", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_GetNumInputs)(___dsp0, ___numinputs1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___numinputs1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_GetNumOutputs(intptr_t, int32_t*);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetNumOutputs(System.IntPtr,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetNumOutputs_m3E413BECA8EBB6DFF689C651B835785CB675502E (intptr_t ___dsp0, int32_t* ___numoutputs1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_GetNumOutputs", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_GetNumOutputs)(___dsp0, ___numoutputs1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___numoutputs1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_GetInput(intptr_t, int32_t, intptr_t*, intptr_t*);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetInput(System.IntPtr,System.Int32,System.IntPtr&,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetInput_m7D05B21AD10A5B9D4A4E5E5B56325B2E7C180FDB (intptr_t ___dsp0, int32_t ___index1, intptr_t* ___input2, intptr_t* ___inputconnection3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t, intptr_t*, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t*) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_GetInput", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_GetInput)(___dsp0, ___index1, ___input2, ___inputconnection3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___index1, ___input2, ___inputconnection3);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_GetOutput(intptr_t, int32_t, intptr_t*, intptr_t*);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetOutput(System.IntPtr,System.Int32,System.IntPtr&,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetOutput_m5CEA995BC5DC655A1323E03156925EB68C14B9B8 (intptr_t ___dsp0, int32_t ___index1, intptr_t* ___output2, intptr_t* ___outputconnection3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t, intptr_t*, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t*) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_GetOutput", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_GetOutput)(___dsp0, ___index1, ___output2, ___outputconnection3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___index1, ___output2, ___outputconnection3);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_SetActive(intptr_t, int32_t);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_SetActive(System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_SetActive_m915909B630467196E7B4CF120BDBB16A949D8E28 (intptr_t ___dsp0, bool ___active1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + 4;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_SetActive", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_SetActive)(___dsp0, static_cast<int32_t>(___active1));
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, static_cast<int32_t>(___active1));
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_GetActive(intptr_t, int32_t*);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetActive(System.IntPtr,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetActive_m4A3DDEA7078472C3DA2631E72114A8A7EC9972F9 (intptr_t ___dsp0, bool* ___active1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_GetActive", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___active1' to native representation
	int32_t ____active1_empty = 0;
	int32_t* ____active1_marshaled = &____active1_empty;

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_GetActive)(___dsp0, ____active1_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ____active1_marshaled);
	#endif

	// Marshaling of parameter '___active1' back from native representation
	bool _____active1_marshaled_unmarshaled_dereferenced = false;
	_____active1_marshaled_unmarshaled_dereferenced = static_cast<bool>(*____active1_marshaled);
	*___active1 = _____active1_marshaled_unmarshaled_dereferenced;

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_SetBypass(intptr_t, int32_t);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_SetBypass(System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_SetBypass_mE249DC5B09D7F7C00770E59EA6867A314F7DBEE8 (intptr_t ___dsp0, bool ___bypass1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + 4;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_SetBypass", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_SetBypass)(___dsp0, static_cast<int32_t>(___bypass1));
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, static_cast<int32_t>(___bypass1));
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_GetBypass(intptr_t, int32_t*);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetBypass(System.IntPtr,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetBypass_m88C435546D01389753D9C98781682F70FC4FE7D9 (intptr_t ___dsp0, bool* ___bypass1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_GetBypass", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___bypass1' to native representation
	int32_t ____bypass1_empty = 0;
	int32_t* ____bypass1_marshaled = &____bypass1_empty;

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_GetBypass)(___dsp0, ____bypass1_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ____bypass1_marshaled);
	#endif

	// Marshaling of parameter '___bypass1' back from native representation
	bool _____bypass1_marshaled_unmarshaled_dereferenced = false;
	_____bypass1_marshaled_unmarshaled_dereferenced = static_cast<bool>(*____bypass1_marshaled);
	*___bypass1 = _____bypass1_marshaled_unmarshaled_dereferenced;

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_SetWetDryMix(intptr_t, float, float, float);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_SetWetDryMix(System.IntPtr,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_SetWetDryMix_mF72E6B89B3BF8776DB24774A3C9FF5D9DCBDD962 (intptr_t ___dsp0, float ___prewet1, float ___postwet2, float ___dry3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float, float, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float) + sizeof(float) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_SetWetDryMix", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_SetWetDryMix)(___dsp0, ___prewet1, ___postwet2, ___dry3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___prewet1, ___postwet2, ___dry3);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_GetWetDryMix(intptr_t, float*, float*, float*);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetWetDryMix(System.IntPtr,System.Single&,System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetWetDryMix_mB8CDF4A44DFEFCE5CD83AA1C1DCB7E534C7BEF03 (intptr_t ___dsp0, float* ___prewet1, float* ___postwet2, float* ___dry3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*, float*, float*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float*) + sizeof(float*) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_GetWetDryMix", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_GetWetDryMix)(___dsp0, ___prewet1, ___postwet2, ___dry3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___prewet1, ___postwet2, ___dry3);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_SetChannelFormat(intptr_t, uint32_t, int32_t, int32_t);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_SetChannelFormat(System.IntPtr,FMOD.CHANNELMASK,System.Int32,FMOD.SPEAKERMODE)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_SetChannelFormat_m814AAF407F7D3B54B2D0F33A276E16AF826F08B6 (intptr_t ___dsp0, uint32_t ___channelmask1, int32_t ___numchannels2, int32_t ___source_speakermode3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, uint32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_SetChannelFormat", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_SetChannelFormat)(___dsp0, ___channelmask1, ___numchannels2, ___source_speakermode3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___channelmask1, ___numchannels2, ___source_speakermode3);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_GetChannelFormat(intptr_t, uint32_t*, int32_t*, int32_t*);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetChannelFormat(System.IntPtr,FMOD.CHANNELMASK&,System.Int32&,FMOD.SPEAKERMODE&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetChannelFormat_m0E5F85B7C7EFABB11816A8FB3FA04F125DA396AE (intptr_t ___dsp0, uint32_t* ___channelmask1, int32_t* ___numchannels2, int32_t* ___source_speakermode3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, uint32_t*, int32_t*, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint32_t*) + sizeof(int32_t*) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_GetChannelFormat", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_GetChannelFormat)(___dsp0, ___channelmask1, ___numchannels2, ___source_speakermode3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___channelmask1, ___numchannels2, ___source_speakermode3);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_GetOutputChannelFormat(intptr_t, uint32_t, int32_t, int32_t, uint32_t*, int32_t*, int32_t*);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetOutputChannelFormat(System.IntPtr,FMOD.CHANNELMASK,System.Int32,FMOD.SPEAKERMODE,FMOD.CHANNELMASK&,System.Int32&,FMOD.SPEAKERMODE&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetOutputChannelFormat_mF21D4F5D6649586EE14BA82AD96B9887FE54DB68 (intptr_t ___dsp0, uint32_t ___inmask1, int32_t ___inchannels2, int32_t ___inspeakermode3, uint32_t* ___outmask4, int32_t* ___outchannels5, int32_t* ___outspeakermode6, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, uint32_t, int32_t, int32_t, uint32_t*, int32_t*, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(uint32_t*) + sizeof(int32_t*) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_GetOutputChannelFormat", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_GetOutputChannelFormat)(___dsp0, ___inmask1, ___inchannels2, ___inspeakermode3, ___outmask4, ___outchannels5, ___outspeakermode6);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___inmask1, ___inchannels2, ___inspeakermode3, ___outmask4, ___outchannels5, ___outspeakermode6);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_Reset(intptr_t);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_Reset(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_Reset_m62E908B773DB32D5CCD84249391F2937AE44BA8A (intptr_t ___dsp0, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_Reset", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_Reset)(___dsp0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_SetParameterFloat(intptr_t, int32_t, float);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_SetParameterFloat(System.IntPtr,System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_SetParameterFloat_m4D0DA2B3131EFB1297A90CAD955DD9AD18EBDC62 (intptr_t ___dsp0, int32_t ___index1, float ___value2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_SetParameterFloat", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_SetParameterFloat)(___dsp0, ___index1, ___value2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___index1, ___value2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_SetParameterInt(intptr_t, int32_t, int32_t);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_SetParameterInt(System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_SetParameterInt_m7AA5F852BE211B947334D04C88DB1DF58757B19C (intptr_t ___dsp0, int32_t ___index1, int32_t ___value2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_SetParameterInt", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_SetParameterInt)(___dsp0, ___index1, ___value2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___index1, ___value2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_SetParameterBool(intptr_t, int32_t, int32_t);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_SetParameterBool(System.IntPtr,System.Int32,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_SetParameterBool_m3ECE376D7EBEED0BC335D3D4C78D49232037032E (intptr_t ___dsp0, int32_t ___index1, bool ___value2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + 4;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_SetParameterBool", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_SetParameterBool)(___dsp0, ___index1, static_cast<int32_t>(___value2));
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___index1, static_cast<int32_t>(___value2));
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_SetParameterData(intptr_t, int32_t, intptr_t, uint32_t);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_SetParameterData(System.IntPtr,System.Int32,System.IntPtr,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_SetParameterData_mE6FC992345EE96F96DDC0B6EE7E27FF0B63A9F6F (intptr_t ___dsp0, int32_t ___index1, intptr_t ___data2, uint32_t ___length3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t, intptr_t, uint32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(uint32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_SetParameterData", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_SetParameterData)(___dsp0, ___index1, ___data2, ___length3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___index1, ___data2, ___length3);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_GetParameterFloat(intptr_t, int32_t, float*, intptr_t, int32_t);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetParameterFloat(System.IntPtr,System.Int32,System.Single&,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetParameterFloat_m8E943D26014468E67E93FF05B687ED4591C5A4AB (intptr_t ___dsp0, int32_t ___index1, float* ___value2, intptr_t ___valuestr3, int32_t ___valuestrlen4, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t, float*, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(float*) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_GetParameterFloat", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_GetParameterFloat)(___dsp0, ___index1, ___value2, ___valuestr3, ___valuestrlen4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___index1, ___value2, ___valuestr3, ___valuestrlen4);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_GetParameterInt(intptr_t, int32_t, int32_t*, intptr_t, int32_t);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetParameterInt(System.IntPtr,System.Int32,System.Int32&,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetParameterInt_mB8DE66385A79F4CAAE81CB9D4AFAFD71BA8E09C9 (intptr_t ___dsp0, int32_t ___index1, int32_t* ___value2, intptr_t ___valuestr3, int32_t ___valuestrlen4, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t, int32_t*, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t*) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_GetParameterInt", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_GetParameterInt)(___dsp0, ___index1, ___value2, ___valuestr3, ___valuestrlen4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___index1, ___value2, ___valuestr3, ___valuestrlen4);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_GetParameterBool(intptr_t, int32_t, int32_t*, intptr_t, int32_t);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetParameterBool(System.IntPtr,System.Int32,System.Boolean&,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetParameterBool_m039E29840D8E1C7017AA796C9644B16CCD7FB04C (intptr_t ___dsp0, int32_t ___index1, bool* ___value2, intptr_t ___valuestr3, int32_t ___valuestrlen4, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t, int32_t*, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t*) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_GetParameterBool", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___value2' to native representation
	int32_t ____value2_empty = 0;
	int32_t* ____value2_marshaled = &____value2_empty;

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_GetParameterBool)(___dsp0, ___index1, ____value2_marshaled, ___valuestr3, ___valuestrlen4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___index1, ____value2_marshaled, ___valuestr3, ___valuestrlen4);
	#endif

	// Marshaling of parameter '___value2' back from native representation
	bool _____value2_marshaled_unmarshaled_dereferenced = false;
	_____value2_marshaled_unmarshaled_dereferenced = static_cast<bool>(*____value2_marshaled);
	*___value2 = _____value2_marshaled_unmarshaled_dereferenced;

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_GetParameterData(intptr_t, int32_t, intptr_t*, uint32_t*, intptr_t, int32_t);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetParameterData(System.IntPtr,System.Int32,System.IntPtr&,System.UInt32&,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetParameterData_mA1E652788F483EF3D4D41CE1D4B0FE86BC0B8C8F (intptr_t ___dsp0, int32_t ___index1, intptr_t* ___data2, uint32_t* ___length3, intptr_t ___valuestr4, int32_t ___valuestrlen5, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t, intptr_t*, uint32_t*, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t*) + sizeof(uint32_t*) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_GetParameterData", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_GetParameterData)(___dsp0, ___index1, ___data2, ___length3, ___valuestr4, ___valuestrlen5);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___index1, ___data2, ___length3, ___valuestr4, ___valuestrlen5);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_GetNumParameters(intptr_t, int32_t*);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetNumParameters(System.IntPtr,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetNumParameters_mADD10DCF2DAD8A9B140E5E2DE3A90A327B40C0A0 (intptr_t ___dsp0, int32_t* ___numparams1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_GetNumParameters", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_GetNumParameters)(___dsp0, ___numparams1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___numparams1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_GetParameterInfo(intptr_t, int32_t, intptr_t*);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetParameterInfo(System.IntPtr,System.Int32,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetParameterInfo_mA89BE77ECC20197AE8AEEA3022896C6B575BDE5F (intptr_t ___dsp0, int32_t ___index1, intptr_t* ___desc2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_GetParameterInfo", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_GetParameterInfo)(___dsp0, ___index1, ___desc2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___index1, ___desc2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_GetDataParameterIndex(intptr_t, int32_t, int32_t*);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetDataParameterIndex(System.IntPtr,System.Int32,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetDataParameterIndex_m0DA86256EF59C3D918EA64107CEE4905CC4268C8 (intptr_t ___dsp0, int32_t ___datatype1, int32_t* ___index2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_GetDataParameterIndex", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_GetDataParameterIndex)(___dsp0, ___datatype1, ___index2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___datatype1, ___index2);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_ShowConfigDialog(intptr_t, intptr_t, int32_t);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_ShowConfigDialog(System.IntPtr,System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_ShowConfigDialog_mEE6BD5505EE745E95C9CBB843044863DCD160763 (intptr_t ___dsp0, intptr_t ___hwnd1, bool ___show2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + 4;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_ShowConfigDialog", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_ShowConfigDialog)(___dsp0, ___hwnd1, static_cast<int32_t>(___show2));
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___hwnd1, static_cast<int32_t>(___show2));
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_GetInfo(intptr_t, intptr_t, uint32_t*, int32_t*, int32_t*, int32_t*);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetInfo(System.IntPtr,System.IntPtr,System.UInt32&,System.Int32&,System.Int32&,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetInfo_mE37CF5E7D9414C0C665F4F3C4FA9A5F32FEBFD8D (intptr_t ___dsp0, intptr_t ___name1, uint32_t* ___version2, int32_t* ___channels3, int32_t* ___configwidth4, int32_t* ___configheight5, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t, uint32_t*, int32_t*, int32_t*, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(uint32_t*) + sizeof(int32_t*) + sizeof(int32_t*) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_GetInfo", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_GetInfo)(___dsp0, ___name1, ___version2, ___channels3, ___configwidth4, ___configheight5);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___name1, ___version2, ___channels3, ___configwidth4, ___configheight5);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_GetType(intptr_t, int32_t*);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetType(System.IntPtr,FMOD.DSP_TYPE&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetType_m1C3185A6A9DB19929D9D87EFDC9FAA3A1B329141 (intptr_t ___dsp0, int32_t* ___type1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_GetType", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_GetType)(___dsp0, ___type1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___type1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_GetIdle(intptr_t, int32_t*);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetIdle(System.IntPtr,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetIdle_mF1AA204C6B79C1A66EF2AC5E8974233D6F0725D3 (intptr_t ___dsp0, bool* ___idle1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_GetIdle", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___idle1' to native representation
	int32_t ____idle1_empty = 0;
	int32_t* ____idle1_marshaled = &____idle1_empty;

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_GetIdle)(___dsp0, ____idle1_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ____idle1_marshaled);
	#endif

	// Marshaling of parameter '___idle1' back from native representation
	bool _____idle1_marshaled_unmarshaled_dereferenced = false;
	_____idle1_marshaled_unmarshaled_dereferenced = static_cast<bool>(*____idle1_marshaled);
	*___idle1 = _____idle1_marshaled_unmarshaled_dereferenced;

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_SetUserData(intptr_t, intptr_t);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_SetUserData(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_SetUserData_mF18EA0042E1FC3358793BCB4BCC595BC42A64A65 (intptr_t ___dsp0, intptr_t ___userdata1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_SetUserData", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_SetUserData)(___dsp0, ___userdata1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___userdata1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_GetUserData(intptr_t, intptr_t*);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetUserData(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetUserData_m16DBE4332F0FB870D8B9B60B08D261AC746B3630 (intptr_t ___dsp0, intptr_t* ___userdata1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_GetUserData", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_GetUserData)(___dsp0, ___userdata1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___userdata1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_SetMeteringEnabled(intptr_t, int32_t, int32_t);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_SetMeteringEnabled(System.IntPtr,System.Boolean,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_SetMeteringEnabled_m908326F53614C8EB9383B4163E59C67C1F4CB216 (intptr_t ___dsp0, bool ___inputEnabled1, bool ___outputEnabled2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + 4 + 4;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_SetMeteringEnabled", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_SetMeteringEnabled)(___dsp0, static_cast<int32_t>(___inputEnabled1), static_cast<int32_t>(___outputEnabled2));
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, static_cast<int32_t>(___inputEnabled1), static_cast<int32_t>(___outputEnabled2));
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_GetMeteringEnabled(intptr_t, int32_t*, int32_t*);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetMeteringEnabled(System.IntPtr,System.Boolean&,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetMeteringEnabled_m97BA20CB98F0A57313717985BCC7AE11AA1CC0C4 (intptr_t ___dsp0, bool* ___inputEnabled1, bool* ___outputEnabled2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t*, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t*) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_GetMeteringEnabled", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___inputEnabled1' to native representation
	int32_t ____inputEnabled1_empty = 0;
	int32_t* ____inputEnabled1_marshaled = &____inputEnabled1_empty;

	// Marshaling of parameter '___outputEnabled2' to native representation
	int32_t ____outputEnabled2_empty = 0;
	int32_t* ____outputEnabled2_marshaled = &____outputEnabled2_empty;

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_GetMeteringEnabled)(___dsp0, ____inputEnabled1_marshaled, ____outputEnabled2_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ____inputEnabled1_marshaled, ____outputEnabled2_marshaled);
	#endif

	// Marshaling of parameter '___inputEnabled1' back from native representation
	bool _____inputEnabled1_marshaled_unmarshaled_dereferenced = false;
	_____inputEnabled1_marshaled_unmarshaled_dereferenced = static_cast<bool>(*____inputEnabled1_marshaled);
	*___inputEnabled1 = _____inputEnabled1_marshaled_unmarshaled_dereferenced;

	// Marshaling of parameter '___outputEnabled2' back from native representation
	bool _____outputEnabled2_marshaled_unmarshaled_dereferenced = false;
	_____outputEnabled2_marshaled_unmarshaled_dereferenced = static_cast<bool>(*____outputEnabled2_marshaled);
	*___outputEnabled2 = _____outputEnabled2_marshaled_unmarshaled_dereferenced;

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_GetMeteringInfo(intptr_t, intptr_t, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_pinvoke*);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetMeteringInfo(System.IntPtr,System.IntPtr,FMOD.DSP_METERING_INFO&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetMeteringInfo_mB23FC2AF6CE1EE8FBE05B8819282F3506862C645 (intptr_t ___dsp0, intptr_t ___zero1, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2 * ___outputInfo2, const RuntimeMethod* method)
{


	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_pinvoke*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_pinvoke*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_GetMeteringInfo", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___outputInfo2' to native representation
	DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_pinvoke ____outputInfo2_empty = {};
	DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_pinvoke* ____outputInfo2_marshaled = &____outputInfo2_empty;

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_GetMeteringInfo)(___dsp0, ___zero1, ____outputInfo2_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___zero1, ____outputInfo2_marshaled);
	#endif

	// Marshaling of parameter '___outputInfo2' back from native representation
	DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2  _____outputInfo2_marshaled_unmarshaled_dereferenced;
	memset((&_____outputInfo2_marshaled_unmarshaled_dereferenced), 0, sizeof(_____outputInfo2_marshaled_unmarshaled_dereferenced));
	DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshal_pinvoke_back(*____outputInfo2_marshaled, _____outputInfo2_marshaled_unmarshaled_dereferenced);
	*___outputInfo2 = _____outputInfo2_marshaled_unmarshaled_dereferenced;
	Il2CppCodeGenWriteBarrier((void**)&((___outputInfo2)->___peaklevel_1), (void*)NULL);
	#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
	Il2CppCodeGenWriteBarrier((void**)&((___outputInfo2)->___rmslevel_2), (void*)NULL);
	#endif

	// Marshaling cleanup of parameter '___outputInfo2' native representation
	DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshal_pinvoke_cleanup(*____outputInfo2_marshaled);

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetMeteringInfo(System.IntPtr,FMOD.DSP_METERING_INFO&,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetMeteringInfo_m6CFF8C8845DF04759A605D3DC10D8387A5E60DBB (intptr_t ___dsp0, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2 * ___inputInfo1, intptr_t ___zero2, const RuntimeMethod* method)
{


	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_pinvoke*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_pinvoke*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_GetMeteringInfo", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___inputInfo1' to native representation
	DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_pinvoke ____inputInfo1_empty = {};
	DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_pinvoke* ____inputInfo1_marshaled = &____inputInfo1_empty;

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_GetMeteringInfo)(___dsp0, ____inputInfo1_marshaled, ___zero2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ____inputInfo1_marshaled, ___zero2);
	#endif

	// Marshaling of parameter '___inputInfo1' back from native representation
	DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2  _____inputInfo1_marshaled_unmarshaled_dereferenced;
	memset((&_____inputInfo1_marshaled_unmarshaled_dereferenced), 0, sizeof(_____inputInfo1_marshaled_unmarshaled_dereferenced));
	DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshal_pinvoke_back(*____inputInfo1_marshaled, _____inputInfo1_marshaled_unmarshaled_dereferenced);
	*___inputInfo1 = _____inputInfo1_marshaled_unmarshaled_dereferenced;
	Il2CppCodeGenWriteBarrier((void**)&((___inputInfo1)->___peaklevel_1), (void*)NULL);
	#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
	Il2CppCodeGenWriteBarrier((void**)&((___inputInfo1)->___rmslevel_2), (void*)NULL);
	#endif

	// Marshaling cleanup of parameter '___inputInfo1' native representation
	DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshal_pinvoke_cleanup(*____inputInfo1_marshaled);

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetMeteringInfo(System.IntPtr,FMOD.DSP_METERING_INFO&,FMOD.DSP_METERING_INFO&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetMeteringInfo_mDABF623A8D39DC6D2E546706890BA3445991CEC7 (intptr_t ___dsp0, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2 * ___inputInfo1, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2 * ___outputInfo2, const RuntimeMethod* method)
{




	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_pinvoke*, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_pinvoke*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_pinvoke*) + sizeof(DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_pinvoke*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_GetMeteringInfo", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___inputInfo1' to native representation
	DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_pinvoke ____inputInfo1_empty = {};
	DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_pinvoke* ____inputInfo1_marshaled = &____inputInfo1_empty;

	// Marshaling of parameter '___outputInfo2' to native representation
	DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_pinvoke ____outputInfo2_empty = {};
	DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_pinvoke* ____outputInfo2_marshaled = &____outputInfo2_empty;

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_GetMeteringInfo)(___dsp0, ____inputInfo1_marshaled, ____outputInfo2_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ____inputInfo1_marshaled, ____outputInfo2_marshaled);
	#endif

	// Marshaling of parameter '___inputInfo1' back from native representation
	DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2  _____inputInfo1_marshaled_unmarshaled_dereferenced;
	memset((&_____inputInfo1_marshaled_unmarshaled_dereferenced), 0, sizeof(_____inputInfo1_marshaled_unmarshaled_dereferenced));
	DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshal_pinvoke_back(*____inputInfo1_marshaled, _____inputInfo1_marshaled_unmarshaled_dereferenced);
	*___inputInfo1 = _____inputInfo1_marshaled_unmarshaled_dereferenced;
	Il2CppCodeGenWriteBarrier((void**)&((___inputInfo1)->___peaklevel_1), (void*)NULL);
	#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
	Il2CppCodeGenWriteBarrier((void**)&((___inputInfo1)->___rmslevel_2), (void*)NULL);
	#endif

	// Marshaling cleanup of parameter '___inputInfo1' native representation
	DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshal_pinvoke_cleanup(*____inputInfo1_marshaled);

	// Marshaling of parameter '___outputInfo2' back from native representation
	DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2  _____outputInfo2_marshaled_unmarshaled_dereferenced;
	memset((&_____outputInfo2_marshaled_unmarshaled_dereferenced), 0, sizeof(_____outputInfo2_marshaled_unmarshaled_dereferenced));
	DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshal_pinvoke_back(*____outputInfo2_marshaled, _____outputInfo2_marshaled_unmarshaled_dereferenced);
	*___outputInfo2 = _____outputInfo2_marshaled_unmarshaled_dereferenced;
	Il2CppCodeGenWriteBarrier((void**)&((___outputInfo2)->___peaklevel_1), (void*)NULL);
	#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
	Il2CppCodeGenWriteBarrier((void**)&((___outputInfo2)->___rmslevel_2), (void*)NULL);
	#endif

	// Marshaling cleanup of parameter '___outputInfo2' native representation
	DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshal_pinvoke_cleanup(*____outputInfo2_marshaled);

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSP_GetCPUUsage(intptr_t, uint32_t*, uint32_t*);
#endif
// FMOD.RESULT FMOD.DSP::FMOD5_DSP_GetCPUUsage(System.IntPtr,System.UInt32&,System.UInt32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_FMOD5_DSP_GetCPUUsage_m5FCE4C319610B80DEF0EA9E366052405B307D52B (intptr_t ___dsp0, uint32_t* ___exclusive1, uint32_t* ___inclusive2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, uint32_t*, uint32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint32_t*) + sizeof(uint32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSP_GetCPUUsage", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSP_GetCPUUsage)(___dsp0, ___exclusive1, ___inclusive2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dsp0, ___exclusive1, ___inclusive2);
	#endif

	return returnValue;
}
// System.Boolean FMOD.DSP::hasHandle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool DSP_hasHandle_m868B7E09CABEDF221DF99B3E3E4CEEFBBAAB94F0 (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_hasHandle_m868B7E09CABEDF221DF99B3E3E4CEEFBBAAB94F0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public bool hasHandle()     { return this.handle != IntPtr.Zero; }
		intptr_t L_0 = __this->get_handle_0();
		bool L_1 = IntPtr_op_Inequality_mB4886A806009EA825EFCC60CD2A7F6EB8E273A61((intptr_t)L_0, (intptr_t)(0), /*hidden argument*/NULL);
		return L_1;
	}
}
IL2CPP_EXTERN_C  bool DSP_hasHandle_m868B7E09CABEDF221DF99B3E3E4CEEFBBAAB94F0_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	return DSP_hasHandle_m868B7E09CABEDF221DF99B3E3E4CEEFBBAAB94F0(_thisAdjusted, method);
}
// System.Void FMOD.DSP::clearHandle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_clearHandle_m0942228427F13F284BE689298BC0AA1A58C5E8DE (DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_clearHandle_m0942228427F13F284BE689298BC0AA1A58C5E8DE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public void clearHandle()   { this.handle = IntPtr.Zero; }
		__this->set_handle_0((intptr_t)(0));
		// public void clearHandle()   { this.handle = IntPtr.Zero; }
		return;
	}
}
IL2CPP_EXTERN_C  void DSP_clearHandle_m0942228427F13F284BE689298BC0AA1A58C5E8DE_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * _thisAdjusted = reinterpret_cast<DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 *>(__this + _offset);
	DSP_clearHandle_m0942228427F13F284BE689298BC0AA1A58C5E8DE(_thisAdjusted, method);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// FMOD.RESULT FMOD.DSPConnection::getInput(FMOD.DSP&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_getInput_mA3350ED7714CD3BE594747B359249F1F6405AD4E (DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * ___input0, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSPConnection_GetInput(this.handle, out input.handle);
		intptr_t L_0 = __this->get_handle_0();
		DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * L_1 = ___input0;
		intptr_t* L_2 = L_1->get_address_of_handle_0();
		int32_t L_3 = DSPConnection_FMOD5_DSPConnection_GetInput_m6EAE985F028B225ABA1235A78687FB4BD05C0ACC((intptr_t)L_0, (intptr_t*)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t DSPConnection_getInput_mA3350ED7714CD3BE594747B359249F1F6405AD4E_AdjustorThunk (RuntimeObject * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * ___input0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * _thisAdjusted = reinterpret_cast<DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 *>(__this + _offset);
	return DSPConnection_getInput_mA3350ED7714CD3BE594747B359249F1F6405AD4E(_thisAdjusted, ___input0, method);
}
// FMOD.RESULT FMOD.DSPConnection::getOutput(FMOD.DSP&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_getOutput_m296C4EE42F0CD4BE029350D5D85FB004075C9C9E (DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * ___output0, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSPConnection_GetOutput(this.handle, out output.handle);
		intptr_t L_0 = __this->get_handle_0();
		DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * L_1 = ___output0;
		intptr_t* L_2 = L_1->get_address_of_handle_0();
		int32_t L_3 = DSPConnection_FMOD5_DSPConnection_GetOutput_m7CA5C878915F5E844E9639AAF4E09288717A22BE((intptr_t)L_0, (intptr_t*)L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t DSPConnection_getOutput_m296C4EE42F0CD4BE029350D5D85FB004075C9C9E_AdjustorThunk (RuntimeObject * __this, DSP_tD56F9FB3D3EA964644C6F7542F56F7FC7E9BF0D0 * ___output0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * _thisAdjusted = reinterpret_cast<DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 *>(__this + _offset);
	return DSPConnection_getOutput_m296C4EE42F0CD4BE029350D5D85FB004075C9C9E(_thisAdjusted, ___output0, method);
}
// FMOD.RESULT FMOD.DSPConnection::setMix(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_setMix_m4ACFD76FA3C9882E53D8E7BD25086E83BBEF565D (DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * __this, float ___volume0, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSPConnection_SetMix(this.handle, volume);
		intptr_t L_0 = __this->get_handle_0();
		float L_1 = ___volume0;
		int32_t L_2 = DSPConnection_FMOD5_DSPConnection_SetMix_m63C2B61DD4D37BA80A1A786F201140DECACAC580((intptr_t)L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t DSPConnection_setMix_m4ACFD76FA3C9882E53D8E7BD25086E83BBEF565D_AdjustorThunk (RuntimeObject * __this, float ___volume0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * _thisAdjusted = reinterpret_cast<DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 *>(__this + _offset);
	return DSPConnection_setMix_m4ACFD76FA3C9882E53D8E7BD25086E83BBEF565D(_thisAdjusted, ___volume0, method);
}
// FMOD.RESULT FMOD.DSPConnection::getMix(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_getMix_m232A0F52EB0C900FEC89C96C117EAF7C3B2EDF1F (DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * __this, float* ___volume0, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSPConnection_GetMix(this.handle, out volume);
		intptr_t L_0 = __this->get_handle_0();
		float* L_1 = ___volume0;
		int32_t L_2 = DSPConnection_FMOD5_DSPConnection_GetMix_mB74345A347B3E1A0BB09EA8611484C5493465559((intptr_t)L_0, (float*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t DSPConnection_getMix_m232A0F52EB0C900FEC89C96C117EAF7C3B2EDF1F_AdjustorThunk (RuntimeObject * __this, float* ___volume0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * _thisAdjusted = reinterpret_cast<DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 *>(__this + _offset);
	return DSPConnection_getMix_m232A0F52EB0C900FEC89C96C117EAF7C3B2EDF1F(_thisAdjusted, ___volume0, method);
}
// FMOD.RESULT FMOD.DSPConnection::setMixMatrix(System.Single[],System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_setMixMatrix_m06ADF0750FB69801358B8FAE68D879489AA2EB3E (DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix0, int32_t ___outchannels1, int32_t ___inchannels2, int32_t ___inchannel_hop3, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSPConnection_SetMixMatrix(this.handle, matrix, outchannels, inchannels, inchannel_hop);
		intptr_t L_0 = __this->get_handle_0();
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_1 = ___matrix0;
		int32_t L_2 = ___outchannels1;
		int32_t L_3 = ___inchannels2;
		int32_t L_4 = ___inchannel_hop3;
		int32_t L_5 = DSPConnection_FMOD5_DSPConnection_SetMixMatrix_mBC60B8BAB921E813950729158D19A4A6835F6515((intptr_t)L_0, L_1, L_2, L_3, L_4, /*hidden argument*/NULL);
		return L_5;
	}
}
IL2CPP_EXTERN_C  int32_t DSPConnection_setMixMatrix_m06ADF0750FB69801358B8FAE68D879489AA2EB3E_AdjustorThunk (RuntimeObject * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix0, int32_t ___outchannels1, int32_t ___inchannels2, int32_t ___inchannel_hop3, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * _thisAdjusted = reinterpret_cast<DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 *>(__this + _offset);
	return DSPConnection_setMixMatrix_m06ADF0750FB69801358B8FAE68D879489AA2EB3E(_thisAdjusted, ___matrix0, ___outchannels1, ___inchannels2, ___inchannel_hop3, method);
}
// FMOD.RESULT FMOD.DSPConnection::getMixMatrix(System.Single[],System.Int32&,System.Int32&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_getMixMatrix_mFE1FE8A67FB043E16DE42C6BB068EAC93E9162B5 (DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix0, int32_t* ___outchannels1, int32_t* ___inchannels2, int32_t ___inchannel_hop3, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSPConnection_GetMixMatrix(this.handle, matrix, out outchannels, out inchannels, inchannel_hop);
		intptr_t L_0 = __this->get_handle_0();
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_1 = ___matrix0;
		int32_t* L_2 = ___outchannels1;
		int32_t* L_3 = ___inchannels2;
		int32_t L_4 = ___inchannel_hop3;
		int32_t L_5 = DSPConnection_FMOD5_DSPConnection_GetMixMatrix_mF1FB5F341DBBB89B77E126FE1720DDC80E267794((intptr_t)L_0, L_1, (int32_t*)L_2, (int32_t*)L_3, L_4, /*hidden argument*/NULL);
		return L_5;
	}
}
IL2CPP_EXTERN_C  int32_t DSPConnection_getMixMatrix_mFE1FE8A67FB043E16DE42C6BB068EAC93E9162B5_AdjustorThunk (RuntimeObject * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix0, int32_t* ___outchannels1, int32_t* ___inchannels2, int32_t ___inchannel_hop3, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * _thisAdjusted = reinterpret_cast<DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 *>(__this + _offset);
	return DSPConnection_getMixMatrix_mFE1FE8A67FB043E16DE42C6BB068EAC93E9162B5(_thisAdjusted, ___matrix0, ___outchannels1, ___inchannels2, ___inchannel_hop3, method);
}
// FMOD.RESULT FMOD.DSPConnection::getType(FMOD.DSPCONNECTION_TYPE&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_getType_m69E0A3D4BFE93D158BF85729BE0E110FEC1C0634 (DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * __this, int32_t* ___type0, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSPConnection_GetType(this.handle, out type);
		intptr_t L_0 = __this->get_handle_0();
		int32_t* L_1 = ___type0;
		int32_t L_2 = DSPConnection_FMOD5_DSPConnection_GetType_m45139DF446EC156D3AA8313B3AA8407AB08E82BF((intptr_t)L_0, (int32_t*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t DSPConnection_getType_m69E0A3D4BFE93D158BF85729BE0E110FEC1C0634_AdjustorThunk (RuntimeObject * __this, int32_t* ___type0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * _thisAdjusted = reinterpret_cast<DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 *>(__this + _offset);
	return DSPConnection_getType_m69E0A3D4BFE93D158BF85729BE0E110FEC1C0634(_thisAdjusted, ___type0, method);
}
// FMOD.RESULT FMOD.DSPConnection::setUserData(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_setUserData_m0E2FA5E474C5570CDB8EC222784E90732B522B23 (DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * __this, intptr_t ___userdata0, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSPConnection_SetUserData(this.handle, userdata);
		intptr_t L_0 = __this->get_handle_0();
		intptr_t L_1 = ___userdata0;
		int32_t L_2 = DSPConnection_FMOD5_DSPConnection_SetUserData_mA36608B94C0E5DDF9F444857459CF5A4B4C498F5((intptr_t)L_0, (intptr_t)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t DSPConnection_setUserData_m0E2FA5E474C5570CDB8EC222784E90732B522B23_AdjustorThunk (RuntimeObject * __this, intptr_t ___userdata0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * _thisAdjusted = reinterpret_cast<DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 *>(__this + _offset);
	return DSPConnection_setUserData_m0E2FA5E474C5570CDB8EC222784E90732B522B23(_thisAdjusted, ___userdata0, method);
}
// FMOD.RESULT FMOD.DSPConnection::getUserData(System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_getUserData_m2EBA1E8D620FD5C6D55DA3DFBBD26C19420D3D76 (DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * __this, intptr_t* ___userdata0, const RuntimeMethod* method)
{
	{
		// return FMOD5_DSPConnection_GetUserData(this.handle, out userdata);
		intptr_t L_0 = __this->get_handle_0();
		intptr_t* L_1 = ___userdata0;
		int32_t L_2 = DSPConnection_FMOD5_DSPConnection_GetUserData_m44997F1A4574F14C0B2F6DC2CC05FD28689919B0((intptr_t)L_0, (intptr_t*)L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
IL2CPP_EXTERN_C  int32_t DSPConnection_getUserData_m2EBA1E8D620FD5C6D55DA3DFBBD26C19420D3D76_AdjustorThunk (RuntimeObject * __this, intptr_t* ___userdata0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * _thisAdjusted = reinterpret_cast<DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 *>(__this + _offset);
	return DSPConnection_getUserData_m2EBA1E8D620FD5C6D55DA3DFBBD26C19420D3D76(_thisAdjusted, ___userdata0, method);
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSPConnection_GetInput(intptr_t, intptr_t*);
#endif
// FMOD.RESULT FMOD.DSPConnection::FMOD5_DSPConnection_GetInput(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_FMOD5_DSPConnection_GetInput_m6EAE985F028B225ABA1235A78687FB4BD05C0ACC (intptr_t ___dspconnection0, intptr_t* ___input1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSPConnection_GetInput", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSPConnection_GetInput)(___dspconnection0, ___input1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dspconnection0, ___input1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSPConnection_GetOutput(intptr_t, intptr_t*);
#endif
// FMOD.RESULT FMOD.DSPConnection::FMOD5_DSPConnection_GetOutput(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_FMOD5_DSPConnection_GetOutput_m7CA5C878915F5E844E9639AAF4E09288717A22BE (intptr_t ___dspconnection0, intptr_t* ___output1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSPConnection_GetOutput", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSPConnection_GetOutput)(___dspconnection0, ___output1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dspconnection0, ___output1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSPConnection_SetMix(intptr_t, float);
#endif
// FMOD.RESULT FMOD.DSPConnection::FMOD5_DSPConnection_SetMix(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_FMOD5_DSPConnection_SetMix_m63C2B61DD4D37BA80A1A786F201140DECACAC580 (intptr_t ___dspconnection0, float ___volume1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSPConnection_SetMix", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSPConnection_SetMix)(___dspconnection0, ___volume1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dspconnection0, ___volume1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSPConnection_GetMix(intptr_t, float*);
#endif
// FMOD.RESULT FMOD.DSPConnection::FMOD5_DSPConnection_GetMix(System.IntPtr,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_FMOD5_DSPConnection_GetMix_mB74345A347B3E1A0BB09EA8611484C5493465559 (intptr_t ___dspconnection0, float* ___volume1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSPConnection_GetMix", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSPConnection_GetMix)(___dspconnection0, ___volume1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dspconnection0, ___volume1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSPConnection_SetMixMatrix(intptr_t, float*, int32_t, int32_t, int32_t);
#endif
// FMOD.RESULT FMOD.DSPConnection::FMOD5_DSPConnection_SetMixMatrix(System.IntPtr,System.Single[],System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_FMOD5_DSPConnection_SetMixMatrix_mBC60B8BAB921E813950729158D19A4A6835F6515 (intptr_t ___dspconnection0, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix1, int32_t ___outchannels2, int32_t ___inchannels3, int32_t ___inchannel_hop4, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSPConnection_SetMixMatrix", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___matrix1' to native representation
	float* ____matrix1_marshaled = NULL;
	if (___matrix1 != NULL)
	{
		____matrix1_marshaled = reinterpret_cast<float*>((___matrix1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSPConnection_SetMixMatrix)(___dspconnection0, ____matrix1_marshaled, ___outchannels2, ___inchannels3, ___inchannel_hop4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dspconnection0, ____matrix1_marshaled, ___outchannels2, ___inchannels3, ___inchannel_hop4);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSPConnection_GetMixMatrix(intptr_t, float*, int32_t*, int32_t*, int32_t);
#endif
// FMOD.RESULT FMOD.DSPConnection::FMOD5_DSPConnection_GetMixMatrix(System.IntPtr,System.Single[],System.Int32&,System.Int32&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_FMOD5_DSPConnection_GetMixMatrix_mF1FB5F341DBBB89B77E126FE1720DDC80E267794 (intptr_t ___dspconnection0, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___matrix1, int32_t* ___outchannels2, int32_t* ___inchannels3, int32_t ___inchannel_hop4, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, float*, int32_t*, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t*) + sizeof(int32_t*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSPConnection_GetMixMatrix", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___matrix1' to native representation
	float* ____matrix1_marshaled = NULL;
	if (___matrix1 != NULL)
	{
		____matrix1_marshaled = reinterpret_cast<float*>((___matrix1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSPConnection_GetMixMatrix)(___dspconnection0, ____matrix1_marshaled, ___outchannels2, ___inchannels3, ___inchannel_hop4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dspconnection0, ____matrix1_marshaled, ___outchannels2, ___inchannels3, ___inchannel_hop4);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSPConnection_GetType(intptr_t, int32_t*);
#endif
// FMOD.RESULT FMOD.DSPConnection::FMOD5_DSPConnection_GetType(System.IntPtr,FMOD.DSPCONNECTION_TYPE&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_FMOD5_DSPConnection_GetType_m45139DF446EC156D3AA8313B3AA8407AB08E82BF (intptr_t ___dspconnection0, int32_t* ___type1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSPConnection_GetType", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSPConnection_GetType)(___dspconnection0, ___type1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dspconnection0, ___type1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSPConnection_SetUserData(intptr_t, intptr_t);
#endif
// FMOD.RESULT FMOD.DSPConnection::FMOD5_DSPConnection_SetUserData(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_FMOD5_DSPConnection_SetUserData_mA36608B94C0E5DDF9F444857459CF5A4B4C498F5 (intptr_t ___dspconnection0, intptr_t ___userdata1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSPConnection_SetUserData", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSPConnection_SetUserData)(___dspconnection0, ___userdata1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dspconnection0, ___userdata1);
	#endif

	return returnValue;
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_DSPConnection_GetUserData(intptr_t, intptr_t*);
#endif
// FMOD.RESULT FMOD.DSPConnection::FMOD5_DSPConnection_GetUserData(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSPConnection_FMOD5_DSPConnection_GetUserData_m44997F1A4574F14C0B2F6DC2CC05FD28689919B0 (intptr_t ___dspconnection0, intptr_t* ___userdata1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_DSPConnection_GetUserData", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_DSPConnection_GetUserData)(___dspconnection0, ___userdata1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___dspconnection0, ___userdata1);
	#endif

	return returnValue;
}
// System.Boolean FMOD.DSPConnection::hasHandle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool DSPConnection_hasHandle_m948CD8E4FC57BA00A23759F800ED31815DC3ADC2 (DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSPConnection_hasHandle_m948CD8E4FC57BA00A23759F800ED31815DC3ADC2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public bool hasHandle()     { return this.handle != IntPtr.Zero; }
		intptr_t L_0 = __this->get_handle_0();
		bool L_1 = IntPtr_op_Inequality_mB4886A806009EA825EFCC60CD2A7F6EB8E273A61((intptr_t)L_0, (intptr_t)(0), /*hidden argument*/NULL);
		return L_1;
	}
}
IL2CPP_EXTERN_C  bool DSPConnection_hasHandle_m948CD8E4FC57BA00A23759F800ED31815DC3ADC2_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * _thisAdjusted = reinterpret_cast<DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 *>(__this + _offset);
	return DSPConnection_hasHandle_m948CD8E4FC57BA00A23759F800ED31815DC3ADC2(_thisAdjusted, method);
}
// System.Void FMOD.DSPConnection::clearHandle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSPConnection_clearHandle_mB41639C441BCAFCEE499C99B8DC4887590E37D9F (DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSPConnection_clearHandle_mB41639C441BCAFCEE499C99B8DC4887590E37D9F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public void clearHandle()   { this.handle = IntPtr.Zero; }
		__this->set_handle_0((intptr_t)(0));
		// public void clearHandle()   { this.handle = IntPtr.Zero; }
		return;
	}
}
IL2CPP_EXTERN_C  void DSPConnection_clearHandle_mB41639C441BCAFCEE499C99B8DC4887590E37D9F_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 * _thisAdjusted = reinterpret_cast<DSPConnection_tDAB5C1D3BE595EAEA69997BC482E8BDFDB59CCF0 *>(__this + _offset);
	DSPConnection_clearHandle_mB41639C441BCAFCEE499C99B8DC4887590E37D9F(_thisAdjusted, method);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  intptr_t DelegatePInvokeWrapper_DSP_ALLOC_FUNC_t8CD6D271F70AFD7BFE9A856DAD1D444E72AA422D (DSP_ALLOC_FUNC_t8CD6D271F70AFD7BFE9A856DAD1D444E72AA422D * __this, uint32_t ___size0, uint32_t ___type1, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  ___sourcestr2, const RuntimeMethod* method)
{
	typedef intptr_t (DEFAULT_CALL *PInvokeFunc)(uint32_t, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 );
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	intptr_t returnValue = il2cppPInvokeFunc(___size0, ___type1, ___sourcestr2);

	return returnValue;
}
// System.Void FMOD.DSP_ALLOC_FUNC::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_ALLOC_FUNC__ctor_mD6A271DD17748AAA3615CDCE1092C7D93223E302 (DSP_ALLOC_FUNC_t8CD6D271F70AFD7BFE9A856DAD1D444E72AA422D * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.IntPtr FMOD.DSP_ALLOC_FUNC::Invoke(System.UInt32,FMOD.MEMORY_TYPE,FMOD.StringWrapper)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t DSP_ALLOC_FUNC_Invoke_m623354856DAF2E74AED560D2718986C3311071FA (DSP_ALLOC_FUNC_t8CD6D271F70AFD7BFE9A856DAD1D444E72AA422D * __this, uint32_t ___size0, uint32_t ___type1, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  ___sourcestr2, const RuntimeMethod* method)
{
	intptr_t result;
	memset((&result), 0, sizeof(result));
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef intptr_t (*FunctionPointerType) (uint32_t, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___size0, ___type1, ___sourcestr2, targetMethod);
			}
			else
			{
				// closed
				typedef intptr_t (*FunctionPointerType) (void*, uint32_t, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___size0, ___type1, ___sourcestr2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< intptr_t, uint32_t, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  >::Invoke(targetMethod, targetThis, ___size0, ___type1, ___sourcestr2);
					else
						result = GenericVirtFuncInvoker3< intptr_t, uint32_t, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  >::Invoke(targetMethod, targetThis, ___size0, ___type1, ___sourcestr2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< intptr_t, uint32_t, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___size0, ___type1, ___sourcestr2);
					else
						result = VirtFuncInvoker3< intptr_t, uint32_t, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___size0, ___type1, ___sourcestr2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef intptr_t (*FunctionPointerType) (RuntimeObject*, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___size0) - 1), ___type1, ___sourcestr2, targetMethod);
				}
				typedef intptr_t (*FunctionPointerType) (void*, uint32_t, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___size0, ___type1, ___sourcestr2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_ALLOC_FUNC::BeginInvoke(System.UInt32,FMOD.MEMORY_TYPE,FMOD.StringWrapper,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_ALLOC_FUNC_BeginInvoke_m6AF8F5A88BB75F5E2BD243CCCE874C0D3E9EC7A8 (DSP_ALLOC_FUNC_t8CD6D271F70AFD7BFE9A856DAD1D444E72AA422D * __this, uint32_t ___size0, uint32_t ___type1, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  ___sourcestr2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_ALLOC_FUNC_BeginInvoke_m6AF8F5A88BB75F5E2BD243CCCE874C0D3E9EC7A8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___size0);
	__d_args[1] = Box(MEMORY_TYPE_tD54CA7DAFC85A6084D80FE45AC3B645475B00AD1_il2cpp_TypeInfo_var, &___type1);
	__d_args[2] = Box(StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9_il2cpp_TypeInfo_var, &___sourcestr2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.IntPtr FMOD.DSP_ALLOC_FUNC::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t DSP_ALLOC_FUNC_EndInvoke_m7D225A8133474F034D3A4E0C001704AD8C6BE75E (DSP_ALLOC_FUNC_t8CD6D271F70AFD7BFE9A856DAD1D444E72AA422D * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(intptr_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: FMOD.DSP_BUFFER_ARRAY
IL2CPP_EXTERN_C void DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshal_pinvoke(const DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291& unmarshaled, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshaled_pinvoke& marshaled)
{
	marshaled.___numbuffers_0 = unmarshaled.get_numbuffers_0();
	marshaled.___buffernumchannels_1 = il2cpp_codegen_com_marshal_safe_array(IL2CPP_VT_I4, unmarshaled.get_buffernumchannels_1());
	if (unmarshaled.get_bufferchannelmask_2() != NULL)
	{
		il2cpp_array_size_t _unmarshaled_bufferchannelmask_Length = (unmarshaled.get_bufferchannelmask_2())->max_length;
		marshaled.___bufferchannelmask_2 = il2cpp_codegen_marshal_allocate_array<uint32_t>(_unmarshaled_bufferchannelmask_Length);
		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(_unmarshaled_bufferchannelmask_Length); i++)
		{
			(marshaled.___bufferchannelmask_2)[i] = (unmarshaled.get_bufferchannelmask_2())->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
		}
	}
	else
	{
		marshaled.___bufferchannelmask_2 = NULL;
	}
	marshaled.___buffers_3 = il2cpp_codegen_com_marshal_safe_array(IL2CPP_VT_INT, unmarshaled.get_buffers_3());
	marshaled.___speakermode_4 = unmarshaled.get_speakermode_4();
}
IL2CPP_EXTERN_C void DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshal_pinvoke_back(const DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshaled_pinvoke& marshaled, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_pinvoke_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t unmarshaled_numbuffers_temp_0 = 0;
	unmarshaled_numbuffers_temp_0 = marshaled.___numbuffers_0;
	unmarshaled.set_numbuffers_0(unmarshaled_numbuffers_temp_0);
	unmarshaled.set_buffernumchannels_1((Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83*)il2cpp_codegen_com_marshal_safe_array_result(IL2CPP_VT_I4, Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, marshaled.___buffernumchannels_1));
	if (marshaled.___bufferchannelmask_2 != NULL)
	{
		if (unmarshaled.get_bufferchannelmask_2() == NULL)
		{
			unmarshaled.set_bufferchannelmask_2(reinterpret_cast<CHANNELMASKU5BU5D_tD17766B4270FA0C460B27576B618990903A56A5B*>((CHANNELMASKU5BU5D_tD17766B4270FA0C460B27576B618990903A56A5B*)SZArrayNew(CHANNELMASKU5BU5D_tD17766B4270FA0C460B27576B618990903A56A5B_il2cpp_TypeInfo_var, 1)));
		}
		il2cpp_array_size_t _arrayLength = (unmarshaled.get_bufferchannelmask_2())->max_length;
		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(_arrayLength); i++)
		{
			(unmarshaled.get_bufferchannelmask_2())->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (marshaled.___bufferchannelmask_2)[i]);
		}
	}
	unmarshaled.set_buffers_3((IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD*)il2cpp_codegen_com_marshal_safe_array_result(IL2CPP_VT_INT, IntPtr_t_il2cpp_TypeInfo_var, marshaled.___buffers_3));
	int32_t unmarshaled_speakermode_temp_4 = 0;
	unmarshaled_speakermode_temp_4 = marshaled.___speakermode_4;
	unmarshaled.set_speakermode_4(unmarshaled_speakermode_temp_4);
}
// Conversion method for clean up from marshalling of: FMOD.DSP_BUFFER_ARRAY
IL2CPP_EXTERN_C void DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshal_pinvoke_cleanup(DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshaled_pinvoke& marshaled)
{
	il2cpp_codegen_com_destroy_safe_array(marshaled.___buffernumchannels_1);
	marshaled.___buffernumchannels_1 = NULL;
	if (marshaled.___bufferchannelmask_2 != NULL)
	{
		il2cpp_codegen_marshal_free(marshaled.___bufferchannelmask_2);
		marshaled.___bufferchannelmask_2 = NULL;
	}
	il2cpp_codegen_com_destroy_safe_array(marshaled.___buffers_3);
	marshaled.___buffers_3 = NULL;
}
// Conversion methods for marshalling of: FMOD.DSP_BUFFER_ARRAY
IL2CPP_EXTERN_C void DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshal_com(const DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291& unmarshaled, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshaled_com& marshaled)
{
	marshaled.___numbuffers_0 = unmarshaled.get_numbuffers_0();
	marshaled.___buffernumchannels_1 = il2cpp_codegen_com_marshal_safe_array(IL2CPP_VT_I4, unmarshaled.get_buffernumchannels_1());
	if (unmarshaled.get_bufferchannelmask_2() != NULL)
	{
		il2cpp_array_size_t _unmarshaled_bufferchannelmask_Length = (unmarshaled.get_bufferchannelmask_2())->max_length;
		marshaled.___bufferchannelmask_2 = il2cpp_codegen_marshal_allocate_array<uint32_t>(_unmarshaled_bufferchannelmask_Length);
		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(_unmarshaled_bufferchannelmask_Length); i++)
		{
			(marshaled.___bufferchannelmask_2)[i] = (unmarshaled.get_bufferchannelmask_2())->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
		}
	}
	else
	{
		marshaled.___bufferchannelmask_2 = NULL;
	}
	marshaled.___buffers_3 = il2cpp_codegen_com_marshal_safe_array(IL2CPP_VT_INT, unmarshaled.get_buffers_3());
	marshaled.___speakermode_4 = unmarshaled.get_speakermode_4();
}
IL2CPP_EXTERN_C void DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshal_com_back(const DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshaled_com& marshaled, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_com_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t unmarshaled_numbuffers_temp_0 = 0;
	unmarshaled_numbuffers_temp_0 = marshaled.___numbuffers_0;
	unmarshaled.set_numbuffers_0(unmarshaled_numbuffers_temp_0);
	unmarshaled.set_buffernumchannels_1((Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83*)il2cpp_codegen_com_marshal_safe_array_result(IL2CPP_VT_I4, Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, marshaled.___buffernumchannels_1));
	if (marshaled.___bufferchannelmask_2 != NULL)
	{
		if (unmarshaled.get_bufferchannelmask_2() == NULL)
		{
			unmarshaled.set_bufferchannelmask_2(reinterpret_cast<CHANNELMASKU5BU5D_tD17766B4270FA0C460B27576B618990903A56A5B*>((CHANNELMASKU5BU5D_tD17766B4270FA0C460B27576B618990903A56A5B*)SZArrayNew(CHANNELMASKU5BU5D_tD17766B4270FA0C460B27576B618990903A56A5B_il2cpp_TypeInfo_var, 1)));
		}
		il2cpp_array_size_t _arrayLength = (unmarshaled.get_bufferchannelmask_2())->max_length;
		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(_arrayLength); i++)
		{
			(unmarshaled.get_bufferchannelmask_2())->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (marshaled.___bufferchannelmask_2)[i]);
		}
	}
	unmarshaled.set_buffers_3((IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD*)il2cpp_codegen_com_marshal_safe_array_result(IL2CPP_VT_INT, IntPtr_t_il2cpp_TypeInfo_var, marshaled.___buffers_3));
	int32_t unmarshaled_speakermode_temp_4 = 0;
	unmarshaled_speakermode_temp_4 = marshaled.___speakermode_4;
	unmarshaled.set_speakermode_4(unmarshaled_speakermode_temp_4);
}
// Conversion method for clean up from marshalling of: FMOD.DSP_BUFFER_ARRAY
IL2CPP_EXTERN_C void DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshal_com_cleanup(DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshaled_com& marshaled)
{
	il2cpp_codegen_com_destroy_safe_array(marshaled.___buffernumchannels_1);
	marshaled.___buffernumchannels_1 = NULL;
	if (marshaled.___bufferchannelmask_2 != NULL)
	{
		il2cpp_codegen_marshal_free(marshaled.___bufferchannelmask_2);
		marshaled.___bufferchannelmask_2 = NULL;
	}
	il2cpp_codegen_com_destroy_safe_array(marshaled.___buffers_3);
	marshaled.___buffers_3 = NULL;
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_CREATECALLBACK_t6510E2AEECAAD7C3DCCE0E608DF42AF53BB2AFB4 (DSP_CREATECALLBACK_t6510E2AEECAAD7C3DCCE0E608DF42AF53BB2AFB4 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0);

	return returnValue;
}
// System.Void FMOD.DSP_CREATECALLBACK::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_CREATECALLBACK__ctor_m93808B168027C8885884368188F28ECB5B1D0108 (DSP_CREATECALLBACK_t6510E2AEECAAD7C3DCCE0E608DF42AF53BB2AFB4 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_CREATECALLBACK::Invoke(FMOD.DSP_STATE&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_CREATECALLBACK_Invoke_m52247CAE69292E5D366BA4AF79349E9EF40B0F71 (DSP_CREATECALLBACK_t6510E2AEECAAD7C3DCCE0E608DF42AF53BB2AFB4 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker1< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * >::Invoke(targetMethod, targetThis, ___dsp_state0);
					else
						result = GenericVirtFuncInvoker1< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * >::Invoke(targetMethod, targetThis, ___dsp_state0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker1< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0);
					else
						result = VirtFuncInvoker1< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_CREATECALLBACK::BeginInvoke(FMOD.DSP_STATE&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_CREATECALLBACK_BeginInvoke_mA60B1BA7AAD55FC2954259026CA113CD69CFFBC6 (DSP_CREATECALLBACK_t6510E2AEECAAD7C3DCCE0E608DF42AF53BB2AFB4 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_CREATECALLBACK_BeginInvoke_mA60B1BA7AAD55FC2954259026CA113CD69CFFBC6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// FMOD.RESULT FMOD.DSP_CREATECALLBACK::EndInvoke(FMOD.DSP_STATE&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_CREATECALLBACK_EndInvoke_m6A3C6EFA9D550BF3D32C8DF046758B97C214C40A (DSP_CREATECALLBACK_t6510E2AEECAAD7C3DCCE0E608DF42AF53BB2AFB4 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: FMOD.DSP_DESCRIPTION
IL2CPP_EXTERN_C void DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A_marshal_pinvoke(const DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A& unmarshaled, DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A_marshaled_pinvoke& marshaled)
{
	marshaled.___pluginsdkversion_0 = unmarshaled.get_pluginsdkversion_0();
	if (unmarshaled.get_name_1() != NULL)
	{
		if (32 > (unmarshaled.get_name_1())->max_length)
		{
			IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_argument_exception("", "Type could not be marshaled because the length of an embedded array instance does not match the declared length in the layout."), NULL);
		}

		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(32); i++)
		{
			(marshaled.___name_1)[i] = (unmarshaled.get_name_1())->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
		}
	}
	marshaled.___version_2 = unmarshaled.get_version_2();
	marshaled.___numinputbuffers_3 = unmarshaled.get_numinputbuffers_3();
	marshaled.___numoutputbuffers_4 = unmarshaled.get_numoutputbuffers_4();
	marshaled.___create_5 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_create_5()));
	marshaled.___release_6 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_release_6()));
	marshaled.___reset_7 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_reset_7()));
	marshaled.___read_8 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_read_8()));
	marshaled.___process_9 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_process_9()));
	marshaled.___setposition_10 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_setposition_10()));
	marshaled.___numparameters_11 = unmarshaled.get_numparameters_11();
	marshaled.___paramdesc_12 = unmarshaled.get_paramdesc_12();
	marshaled.___setparameterfloat_13 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_setparameterfloat_13()));
	marshaled.___setparameterint_14 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_setparameterint_14()));
	marshaled.___setparameterbool_15 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_setparameterbool_15()));
	marshaled.___setparameterdata_16 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_setparameterdata_16()));
	marshaled.___getparameterfloat_17 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_getparameterfloat_17()));
	marshaled.___getparameterint_18 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_getparameterint_18()));
	marshaled.___getparameterbool_19 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_getparameterbool_19()));
	marshaled.___getparameterdata_20 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_getparameterdata_20()));
	marshaled.___shouldiprocess_21 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_shouldiprocess_21()));
	marshaled.___userdata_22 = unmarshaled.get_userdata_22();
	marshaled.___sys_register_23 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_sys_register_23()));
	marshaled.___sys_deregister_24 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_sys_deregister_24()));
	marshaled.___sys_mix_25 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_sys_mix_25()));
}
IL2CPP_EXTERN_C void DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A_marshal_pinvoke_back(const DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A_marshaled_pinvoke& marshaled, DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A_pinvoke_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	uint32_t unmarshaled_pluginsdkversion_temp_0 = 0;
	unmarshaled_pluginsdkversion_temp_0 = marshaled.___pluginsdkversion_0;
	unmarshaled.set_pluginsdkversion_0(unmarshaled_pluginsdkversion_temp_0);
	unmarshaled.set_name_1(reinterpret_cast<ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821*>((ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821*)SZArrayNew(ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821_il2cpp_TypeInfo_var, 32)));
	for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(32); i++)
	{
		(unmarshaled.get_name_1())->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (marshaled.___name_1)[i]);
	}
	uint32_t unmarshaled_version_temp_2 = 0;
	unmarshaled_version_temp_2 = marshaled.___version_2;
	unmarshaled.set_version_2(unmarshaled_version_temp_2);
	int32_t unmarshaled_numinputbuffers_temp_3 = 0;
	unmarshaled_numinputbuffers_temp_3 = marshaled.___numinputbuffers_3;
	unmarshaled.set_numinputbuffers_3(unmarshaled_numinputbuffers_temp_3);
	int32_t unmarshaled_numoutputbuffers_temp_4 = 0;
	unmarshaled_numoutputbuffers_temp_4 = marshaled.___numoutputbuffers_4;
	unmarshaled.set_numoutputbuffers_4(unmarshaled_numoutputbuffers_temp_4);
	unmarshaled.set_create_5(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_CREATECALLBACK_t6510E2AEECAAD7C3DCCE0E608DF42AF53BB2AFB4>(marshaled.___create_5, DSP_CREATECALLBACK_t6510E2AEECAAD7C3DCCE0E608DF42AF53BB2AFB4_il2cpp_TypeInfo_var));
	unmarshaled.set_release_6(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_RELEASECALLBACK_t92C9D067D3CF7847DB0F73813A5833B6E4D0C6EE>(marshaled.___release_6, DSP_RELEASECALLBACK_t92C9D067D3CF7847DB0F73813A5833B6E4D0C6EE_il2cpp_TypeInfo_var));
	unmarshaled.set_reset_7(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_RESETCALLBACK_t8EA9624AAC1D240E70DB5855727C840681FB659C>(marshaled.___reset_7, DSP_RESETCALLBACK_t8EA9624AAC1D240E70DB5855727C840681FB659C_il2cpp_TypeInfo_var));
	unmarshaled.set_read_8(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_READCALLBACK_tA3F0E8A151B3385E3BFDB117670F3572746ECE6B>(marshaled.___read_8, DSP_READCALLBACK_tA3F0E8A151B3385E3BFDB117670F3572746ECE6B_il2cpp_TypeInfo_var));
	unmarshaled.set_process_9(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_PROCESS_CALLBACK_tDBD865DB753B70FC9D7366E33380253692DC88CB>(marshaled.___process_9, DSP_PROCESS_CALLBACK_tDBD865DB753B70FC9D7366E33380253692DC88CB_il2cpp_TypeInfo_var));
	unmarshaled.set_setposition_10(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_SETPOSITIONCALLBACK_t9A480C4F691C838E0267D2D8515075AC431CB2B7>(marshaled.___setposition_10, DSP_SETPOSITIONCALLBACK_t9A480C4F691C838E0267D2D8515075AC431CB2B7_il2cpp_TypeInfo_var));
	int32_t unmarshaled_numparameters_temp_11 = 0;
	unmarshaled_numparameters_temp_11 = marshaled.___numparameters_11;
	unmarshaled.set_numparameters_11(unmarshaled_numparameters_temp_11);
	intptr_t unmarshaled_paramdesc_temp_12;
	memset((&unmarshaled_paramdesc_temp_12), 0, sizeof(unmarshaled_paramdesc_temp_12));
	unmarshaled_paramdesc_temp_12 = marshaled.___paramdesc_12;
	unmarshaled.set_paramdesc_12(unmarshaled_paramdesc_temp_12);
	unmarshaled.set_setparameterfloat_13(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_SETPARAM_FLOAT_CALLBACK_t7EFE910C4496F3D95D1E3487B97D08AD011006C8>(marshaled.___setparameterfloat_13, DSP_SETPARAM_FLOAT_CALLBACK_t7EFE910C4496F3D95D1E3487B97D08AD011006C8_il2cpp_TypeInfo_var));
	unmarshaled.set_setparameterint_14(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_SETPARAM_INT_CALLBACK_t10AE9EEDA039984760035B14CD3E84A401F749E3>(marshaled.___setparameterint_14, DSP_SETPARAM_INT_CALLBACK_t10AE9EEDA039984760035B14CD3E84A401F749E3_il2cpp_TypeInfo_var));
	unmarshaled.set_setparameterbool_15(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_SETPARAM_BOOL_CALLBACK_tACA9458F120A18B395CB1EE2F9A3C8ACEC2C2349>(marshaled.___setparameterbool_15, DSP_SETPARAM_BOOL_CALLBACK_tACA9458F120A18B395CB1EE2F9A3C8ACEC2C2349_il2cpp_TypeInfo_var));
	unmarshaled.set_setparameterdata_16(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_SETPARAM_DATA_CALLBACK_tDB9125291A634749692E0D00301A136B5C3D34DE>(marshaled.___setparameterdata_16, DSP_SETPARAM_DATA_CALLBACK_tDB9125291A634749692E0D00301A136B5C3D34DE_il2cpp_TypeInfo_var));
	unmarshaled.set_getparameterfloat_17(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_GETPARAM_FLOAT_CALLBACK_t8401A9811354731A09C32E110B876C472C71A0A9>(marshaled.___getparameterfloat_17, DSP_GETPARAM_FLOAT_CALLBACK_t8401A9811354731A09C32E110B876C472C71A0A9_il2cpp_TypeInfo_var));
	unmarshaled.set_getparameterint_18(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_GETPARAM_INT_CALLBACK_t7AAF6AFAFD8D24554AA1490F81B3C4B370DF8EA6>(marshaled.___getparameterint_18, DSP_GETPARAM_INT_CALLBACK_t7AAF6AFAFD8D24554AA1490F81B3C4B370DF8EA6_il2cpp_TypeInfo_var));
	unmarshaled.set_getparameterbool_19(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_GETPARAM_BOOL_CALLBACK_tAD8EBD00416D502B580D2869800D43E2C3E52069>(marshaled.___getparameterbool_19, DSP_GETPARAM_BOOL_CALLBACK_tAD8EBD00416D502B580D2869800D43E2C3E52069_il2cpp_TypeInfo_var));
	unmarshaled.set_getparameterdata_20(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_GETPARAM_DATA_CALLBACK_t2E82033F2FF7DC3D377C9B9B60A1F453A286D372>(marshaled.___getparameterdata_20, DSP_GETPARAM_DATA_CALLBACK_t2E82033F2FF7DC3D377C9B9B60A1F453A286D372_il2cpp_TypeInfo_var));
	unmarshaled.set_shouldiprocess_21(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_SHOULDIPROCESS_CALLBACK_t5545B686955F4562B7A1F21C22438EC50D6CFF28>(marshaled.___shouldiprocess_21, DSP_SHOULDIPROCESS_CALLBACK_t5545B686955F4562B7A1F21C22438EC50D6CFF28_il2cpp_TypeInfo_var));
	intptr_t unmarshaled_userdata_temp_22;
	memset((&unmarshaled_userdata_temp_22), 0, sizeof(unmarshaled_userdata_temp_22));
	unmarshaled_userdata_temp_22 = marshaled.___userdata_22;
	unmarshaled.set_userdata_22(unmarshaled_userdata_temp_22);
	unmarshaled.set_sys_register_23(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_SYSTEM_REGISTER_CALLBACK_t9D6891252B2A9A8667CF1BE598C9BBC50450CCFA>(marshaled.___sys_register_23, DSP_SYSTEM_REGISTER_CALLBACK_t9D6891252B2A9A8667CF1BE598C9BBC50450CCFA_il2cpp_TypeInfo_var));
	unmarshaled.set_sys_deregister_24(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_SYSTEM_DEREGISTER_CALLBACK_tB1D240F0C4635096EEDB65641DC430EB03DD0699>(marshaled.___sys_deregister_24, DSP_SYSTEM_DEREGISTER_CALLBACK_tB1D240F0C4635096EEDB65641DC430EB03DD0699_il2cpp_TypeInfo_var));
	unmarshaled.set_sys_mix_25(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_SYSTEM_MIX_CALLBACK_t38470781C5A19912A1FFF609AEFB9FC7695C3836>(marshaled.___sys_mix_25, DSP_SYSTEM_MIX_CALLBACK_t38470781C5A19912A1FFF609AEFB9FC7695C3836_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: FMOD.DSP_DESCRIPTION
IL2CPP_EXTERN_C void DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A_marshal_pinvoke_cleanup(DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: FMOD.DSP_DESCRIPTION
IL2CPP_EXTERN_C void DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A_marshal_com(const DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A& unmarshaled, DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A_marshaled_com& marshaled)
{
	marshaled.___pluginsdkversion_0 = unmarshaled.get_pluginsdkversion_0();
	if (unmarshaled.get_name_1() != NULL)
	{
		if (32 > (unmarshaled.get_name_1())->max_length)
		{
			IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_argument_exception("", "Type could not be marshaled because the length of an embedded array instance does not match the declared length in the layout."), NULL);
		}

		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(32); i++)
		{
			(marshaled.___name_1)[i] = (unmarshaled.get_name_1())->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
		}
	}
	marshaled.___version_2 = unmarshaled.get_version_2();
	marshaled.___numinputbuffers_3 = unmarshaled.get_numinputbuffers_3();
	marshaled.___numoutputbuffers_4 = unmarshaled.get_numoutputbuffers_4();
	marshaled.___create_5 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_create_5()));
	marshaled.___release_6 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_release_6()));
	marshaled.___reset_7 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_reset_7()));
	marshaled.___read_8 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_read_8()));
	marshaled.___process_9 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_process_9()));
	marshaled.___setposition_10 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_setposition_10()));
	marshaled.___numparameters_11 = unmarshaled.get_numparameters_11();
	marshaled.___paramdesc_12 = unmarshaled.get_paramdesc_12();
	marshaled.___setparameterfloat_13 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_setparameterfloat_13()));
	marshaled.___setparameterint_14 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_setparameterint_14()));
	marshaled.___setparameterbool_15 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_setparameterbool_15()));
	marshaled.___setparameterdata_16 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_setparameterdata_16()));
	marshaled.___getparameterfloat_17 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_getparameterfloat_17()));
	marshaled.___getparameterint_18 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_getparameterint_18()));
	marshaled.___getparameterbool_19 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_getparameterbool_19()));
	marshaled.___getparameterdata_20 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_getparameterdata_20()));
	marshaled.___shouldiprocess_21 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_shouldiprocess_21()));
	marshaled.___userdata_22 = unmarshaled.get_userdata_22();
	marshaled.___sys_register_23 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_sys_register_23()));
	marshaled.___sys_deregister_24 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_sys_deregister_24()));
	marshaled.___sys_mix_25 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_sys_mix_25()));
}
IL2CPP_EXTERN_C void DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A_marshal_com_back(const DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A_marshaled_com& marshaled, DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A_com_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	uint32_t unmarshaled_pluginsdkversion_temp_0 = 0;
	unmarshaled_pluginsdkversion_temp_0 = marshaled.___pluginsdkversion_0;
	unmarshaled.set_pluginsdkversion_0(unmarshaled_pluginsdkversion_temp_0);
	unmarshaled.set_name_1(reinterpret_cast<ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821*>((ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821*)SZArrayNew(ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821_il2cpp_TypeInfo_var, 32)));
	for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(32); i++)
	{
		(unmarshaled.get_name_1())->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (marshaled.___name_1)[i]);
	}
	uint32_t unmarshaled_version_temp_2 = 0;
	unmarshaled_version_temp_2 = marshaled.___version_2;
	unmarshaled.set_version_2(unmarshaled_version_temp_2);
	int32_t unmarshaled_numinputbuffers_temp_3 = 0;
	unmarshaled_numinputbuffers_temp_3 = marshaled.___numinputbuffers_3;
	unmarshaled.set_numinputbuffers_3(unmarshaled_numinputbuffers_temp_3);
	int32_t unmarshaled_numoutputbuffers_temp_4 = 0;
	unmarshaled_numoutputbuffers_temp_4 = marshaled.___numoutputbuffers_4;
	unmarshaled.set_numoutputbuffers_4(unmarshaled_numoutputbuffers_temp_4);
	unmarshaled.set_create_5(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_CREATECALLBACK_t6510E2AEECAAD7C3DCCE0E608DF42AF53BB2AFB4>(marshaled.___create_5, DSP_CREATECALLBACK_t6510E2AEECAAD7C3DCCE0E608DF42AF53BB2AFB4_il2cpp_TypeInfo_var));
	unmarshaled.set_release_6(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_RELEASECALLBACK_t92C9D067D3CF7847DB0F73813A5833B6E4D0C6EE>(marshaled.___release_6, DSP_RELEASECALLBACK_t92C9D067D3CF7847DB0F73813A5833B6E4D0C6EE_il2cpp_TypeInfo_var));
	unmarshaled.set_reset_7(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_RESETCALLBACK_t8EA9624AAC1D240E70DB5855727C840681FB659C>(marshaled.___reset_7, DSP_RESETCALLBACK_t8EA9624AAC1D240E70DB5855727C840681FB659C_il2cpp_TypeInfo_var));
	unmarshaled.set_read_8(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_READCALLBACK_tA3F0E8A151B3385E3BFDB117670F3572746ECE6B>(marshaled.___read_8, DSP_READCALLBACK_tA3F0E8A151B3385E3BFDB117670F3572746ECE6B_il2cpp_TypeInfo_var));
	unmarshaled.set_process_9(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_PROCESS_CALLBACK_tDBD865DB753B70FC9D7366E33380253692DC88CB>(marshaled.___process_9, DSP_PROCESS_CALLBACK_tDBD865DB753B70FC9D7366E33380253692DC88CB_il2cpp_TypeInfo_var));
	unmarshaled.set_setposition_10(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_SETPOSITIONCALLBACK_t9A480C4F691C838E0267D2D8515075AC431CB2B7>(marshaled.___setposition_10, DSP_SETPOSITIONCALLBACK_t9A480C4F691C838E0267D2D8515075AC431CB2B7_il2cpp_TypeInfo_var));
	int32_t unmarshaled_numparameters_temp_11 = 0;
	unmarshaled_numparameters_temp_11 = marshaled.___numparameters_11;
	unmarshaled.set_numparameters_11(unmarshaled_numparameters_temp_11);
	intptr_t unmarshaled_paramdesc_temp_12;
	memset((&unmarshaled_paramdesc_temp_12), 0, sizeof(unmarshaled_paramdesc_temp_12));
	unmarshaled_paramdesc_temp_12 = marshaled.___paramdesc_12;
	unmarshaled.set_paramdesc_12(unmarshaled_paramdesc_temp_12);
	unmarshaled.set_setparameterfloat_13(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_SETPARAM_FLOAT_CALLBACK_t7EFE910C4496F3D95D1E3487B97D08AD011006C8>(marshaled.___setparameterfloat_13, DSP_SETPARAM_FLOAT_CALLBACK_t7EFE910C4496F3D95D1E3487B97D08AD011006C8_il2cpp_TypeInfo_var));
	unmarshaled.set_setparameterint_14(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_SETPARAM_INT_CALLBACK_t10AE9EEDA039984760035B14CD3E84A401F749E3>(marshaled.___setparameterint_14, DSP_SETPARAM_INT_CALLBACK_t10AE9EEDA039984760035B14CD3E84A401F749E3_il2cpp_TypeInfo_var));
	unmarshaled.set_setparameterbool_15(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_SETPARAM_BOOL_CALLBACK_tACA9458F120A18B395CB1EE2F9A3C8ACEC2C2349>(marshaled.___setparameterbool_15, DSP_SETPARAM_BOOL_CALLBACK_tACA9458F120A18B395CB1EE2F9A3C8ACEC2C2349_il2cpp_TypeInfo_var));
	unmarshaled.set_setparameterdata_16(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_SETPARAM_DATA_CALLBACK_tDB9125291A634749692E0D00301A136B5C3D34DE>(marshaled.___setparameterdata_16, DSP_SETPARAM_DATA_CALLBACK_tDB9125291A634749692E0D00301A136B5C3D34DE_il2cpp_TypeInfo_var));
	unmarshaled.set_getparameterfloat_17(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_GETPARAM_FLOAT_CALLBACK_t8401A9811354731A09C32E110B876C472C71A0A9>(marshaled.___getparameterfloat_17, DSP_GETPARAM_FLOAT_CALLBACK_t8401A9811354731A09C32E110B876C472C71A0A9_il2cpp_TypeInfo_var));
	unmarshaled.set_getparameterint_18(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_GETPARAM_INT_CALLBACK_t7AAF6AFAFD8D24554AA1490F81B3C4B370DF8EA6>(marshaled.___getparameterint_18, DSP_GETPARAM_INT_CALLBACK_t7AAF6AFAFD8D24554AA1490F81B3C4B370DF8EA6_il2cpp_TypeInfo_var));
	unmarshaled.set_getparameterbool_19(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_GETPARAM_BOOL_CALLBACK_tAD8EBD00416D502B580D2869800D43E2C3E52069>(marshaled.___getparameterbool_19, DSP_GETPARAM_BOOL_CALLBACK_tAD8EBD00416D502B580D2869800D43E2C3E52069_il2cpp_TypeInfo_var));
	unmarshaled.set_getparameterdata_20(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_GETPARAM_DATA_CALLBACK_t2E82033F2FF7DC3D377C9B9B60A1F453A286D372>(marshaled.___getparameterdata_20, DSP_GETPARAM_DATA_CALLBACK_t2E82033F2FF7DC3D377C9B9B60A1F453A286D372_il2cpp_TypeInfo_var));
	unmarshaled.set_shouldiprocess_21(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_SHOULDIPROCESS_CALLBACK_t5545B686955F4562B7A1F21C22438EC50D6CFF28>(marshaled.___shouldiprocess_21, DSP_SHOULDIPROCESS_CALLBACK_t5545B686955F4562B7A1F21C22438EC50D6CFF28_il2cpp_TypeInfo_var));
	intptr_t unmarshaled_userdata_temp_22;
	memset((&unmarshaled_userdata_temp_22), 0, sizeof(unmarshaled_userdata_temp_22));
	unmarshaled_userdata_temp_22 = marshaled.___userdata_22;
	unmarshaled.set_userdata_22(unmarshaled_userdata_temp_22);
	unmarshaled.set_sys_register_23(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_SYSTEM_REGISTER_CALLBACK_t9D6891252B2A9A8667CF1BE598C9BBC50450CCFA>(marshaled.___sys_register_23, DSP_SYSTEM_REGISTER_CALLBACK_t9D6891252B2A9A8667CF1BE598C9BBC50450CCFA_il2cpp_TypeInfo_var));
	unmarshaled.set_sys_deregister_24(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_SYSTEM_DEREGISTER_CALLBACK_tB1D240F0C4635096EEDB65641DC430EB03DD0699>(marshaled.___sys_deregister_24, DSP_SYSTEM_DEREGISTER_CALLBACK_tB1D240F0C4635096EEDB65641DC430EB03DD0699_il2cpp_TypeInfo_var));
	unmarshaled.set_sys_mix_25(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_SYSTEM_MIX_CALLBACK_t38470781C5A19912A1FFF609AEFB9FC7695C3836>(marshaled.___sys_mix_25, DSP_SYSTEM_MIX_CALLBACK_t38470781C5A19912A1FFF609AEFB9FC7695C3836_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: FMOD.DSP_DESCRIPTION
IL2CPP_EXTERN_C void DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A_marshal_com_cleanup(DSP_DESCRIPTION_t12AD3DC74D6BD5F51E503B956C4CB6E9A42A296A_marshaled_com& marshaled)
{
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_DFT_FFTREAL_FUNC_t73B4E8FC3D8FA9D701BC82CD1EBD979E3873D3E5 (DSP_DFT_FFTREAL_FUNC_t73B4E8FC3D8FA9D701BC82CD1EBD979E3873D3E5 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___size1, intptr_t ___signal2, intptr_t ___dft3, intptr_t ___window4, int32_t ___signalhop5, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t, intptr_t, intptr_t, int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0, ___size1, ___signal2, ___dft3, ___window4, ___signalhop5);

	return returnValue;
}
// System.Void FMOD.DSP_DFT_FFTREAL_FUNC::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_DFT_FFTREAL_FUNC__ctor_mAD7E9A6B9549C86C0E7D61F456FB770D13BEA3AE (DSP_DFT_FFTREAL_FUNC_t73B4E8FC3D8FA9D701BC82CD1EBD979E3873D3E5 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_DFT_FFTREAL_FUNC::Invoke(FMOD.DSP_STATE&,System.Int32,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_DFT_FFTREAL_FUNC_Invoke_mF8C44BFC954835619C481EF76245A3C22FE7ED15 (DSP_DFT_FFTREAL_FUNC_t73B4E8FC3D8FA9D701BC82CD1EBD979E3873D3E5 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___size1, intptr_t ___signal2, intptr_t ___dft3, intptr_t ___window4, int32_t ___signalhop5, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 6)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t, intptr_t, intptr_t, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, ___size1, ___signal2, ___dft3, ___window4, ___signalhop5, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t, intptr_t, intptr_t, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___size1, ___signal2, ___dft3, ___window4, ___signalhop5, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker6< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t, intptr_t, intptr_t, int32_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___size1, ___signal2, ___dft3, ___window4, ___signalhop5);
					else
						result = GenericVirtFuncInvoker6< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t, intptr_t, intptr_t, int32_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___size1, ___signal2, ___dft3, ___window4, ___signalhop5);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker6< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t, intptr_t, intptr_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0, ___size1, ___signal2, ___dft3, ___window4, ___signalhop5);
					else
						result = VirtFuncInvoker6< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t, intptr_t, intptr_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0, ___size1, ___signal2, ___dft3, ___window4, ___signalhop5);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, intptr_t, intptr_t, intptr_t, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___size1, ___signal2, ___dft3, ___window4, ___signalhop5, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, intptr_t, intptr_t, intptr_t, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___size1, ___signal2, ___dft3, ___window4, ___signalhop5, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t, intptr_t, intptr_t, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___size1, ___signal2, ___dft3, ___window4, ___signalhop5, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_DFT_FFTREAL_FUNC::BeginInvoke(FMOD.DSP_STATE&,System.Int32,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_DFT_FFTREAL_FUNC_BeginInvoke_mF085C280F93448B0BB04483DD8683999914F6372 (DSP_DFT_FFTREAL_FUNC_t73B4E8FC3D8FA9D701BC82CD1EBD979E3873D3E5 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___size1, intptr_t ___signal2, intptr_t ___dft3, intptr_t ___window4, int32_t ___signalhop5, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback6, RuntimeObject * ___object7, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_DFT_FFTREAL_FUNC_BeginInvoke_mF085C280F93448B0BB04483DD8683999914F6372_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[7] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	__d_args[1] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___size1);
	__d_args[2] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___signal2);
	__d_args[3] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___dft3);
	__d_args[4] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___window4);
	__d_args[5] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___signalhop5);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback6, (RuntimeObject*)___object7);
}
// FMOD.RESULT FMOD.DSP_DFT_FFTREAL_FUNC::EndInvoke(FMOD.DSP_STATE&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_DFT_FFTREAL_FUNC_EndInvoke_m6AFC8B8F57A1470B3A30C44716A85BC9AECA82E4 (DSP_DFT_FFTREAL_FUNC_t73B4E8FC3D8FA9D701BC82CD1EBD979E3873D3E5 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_DFT_IFFTREAL_FUNC_t536096AAC4FEBBF600001E6FAE00307F932D2494 (DSP_DFT_IFFTREAL_FUNC_t536096AAC4FEBBF600001E6FAE00307F932D2494 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___size1, intptr_t ___dft2, intptr_t ___signal3, intptr_t ___window4, int32_t ___signalhop5, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t, intptr_t, intptr_t, int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0, ___size1, ___dft2, ___signal3, ___window4, ___signalhop5);

	return returnValue;
}
// System.Void FMOD.DSP_DFT_IFFTREAL_FUNC::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_DFT_IFFTREAL_FUNC__ctor_mA9D60B8CF18002544382F1AA18C547C8F4D70F0E (DSP_DFT_IFFTREAL_FUNC_t536096AAC4FEBBF600001E6FAE00307F932D2494 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_DFT_IFFTREAL_FUNC::Invoke(FMOD.DSP_STATE&,System.Int32,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_DFT_IFFTREAL_FUNC_Invoke_mBF9417B97E67842EAB1033BBB0401D994E54F325 (DSP_DFT_IFFTREAL_FUNC_t536096AAC4FEBBF600001E6FAE00307F932D2494 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___size1, intptr_t ___dft2, intptr_t ___signal3, intptr_t ___window4, int32_t ___signalhop5, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 6)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t, intptr_t, intptr_t, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, ___size1, ___dft2, ___signal3, ___window4, ___signalhop5, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t, intptr_t, intptr_t, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___size1, ___dft2, ___signal3, ___window4, ___signalhop5, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker6< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t, intptr_t, intptr_t, int32_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___size1, ___dft2, ___signal3, ___window4, ___signalhop5);
					else
						result = GenericVirtFuncInvoker6< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t, intptr_t, intptr_t, int32_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___size1, ___dft2, ___signal3, ___window4, ___signalhop5);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker6< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t, intptr_t, intptr_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0, ___size1, ___dft2, ___signal3, ___window4, ___signalhop5);
					else
						result = VirtFuncInvoker6< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t, intptr_t, intptr_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0, ___size1, ___dft2, ___signal3, ___window4, ___signalhop5);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, intptr_t, intptr_t, intptr_t, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___size1, ___dft2, ___signal3, ___window4, ___signalhop5, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, intptr_t, intptr_t, intptr_t, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___size1, ___dft2, ___signal3, ___window4, ___signalhop5, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t, intptr_t, intptr_t, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___size1, ___dft2, ___signal3, ___window4, ___signalhop5, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_DFT_IFFTREAL_FUNC::BeginInvoke(FMOD.DSP_STATE&,System.Int32,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_DFT_IFFTREAL_FUNC_BeginInvoke_mB65F27B24305A465B784305FE34FAD87133B84F4 (DSP_DFT_IFFTREAL_FUNC_t536096AAC4FEBBF600001E6FAE00307F932D2494 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___size1, intptr_t ___dft2, intptr_t ___signal3, intptr_t ___window4, int32_t ___signalhop5, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback6, RuntimeObject * ___object7, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_DFT_IFFTREAL_FUNC_BeginInvoke_mB65F27B24305A465B784305FE34FAD87133B84F4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[7] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	__d_args[1] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___size1);
	__d_args[2] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___dft2);
	__d_args[3] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___signal3);
	__d_args[4] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___window4);
	__d_args[5] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___signalhop5);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback6, (RuntimeObject*)___object7);
}
// FMOD.RESULT FMOD.DSP_DFT_IFFTREAL_FUNC::EndInvoke(FMOD.DSP_STATE&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_DFT_IFFTREAL_FUNC_EndInvoke_m50788D71C70B6A6956A9DF5DCA06881A4139413A (DSP_DFT_IFFTREAL_FUNC_t536096AAC4FEBBF600001E6FAE00307F932D2494 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_DSP_FREE_FUNC_t0C9E6DE1DF61298098E07E792A9A1BF26AA681C2 (DSP_FREE_FUNC_t0C9E6DE1DF61298098E07E792A9A1BF26AA681C2 * __this, intptr_t ___ptr0, uint32_t ___type1, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  ___sourcestr2, const RuntimeMethod* method)
{
	typedef void (DEFAULT_CALL *PInvokeFunc)(intptr_t, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 );
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc(___ptr0, ___type1, ___sourcestr2);

}
// System.Void FMOD.DSP_FREE_FUNC::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_FREE_FUNC__ctor_m2602E40D0DBC80614E4AB8F2CF7FF1977EF65262 (DSP_FREE_FUNC_t0C9E6DE1DF61298098E07E792A9A1BF26AA681C2 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void FMOD.DSP_FREE_FUNC::Invoke(System.IntPtr,FMOD.MEMORY_TYPE,FMOD.StringWrapper)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_FREE_FUNC_Invoke_mBBEC4B7FFD00F9626ED4FF3BD40E534C03F8B300 (DSP_FREE_FUNC_t0C9E6DE1DF61298098E07E792A9A1BF26AA681C2 * __this, intptr_t ___ptr0, uint32_t ___type1, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  ___sourcestr2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (intptr_t, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___ptr0, ___type1, ___sourcestr2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, intptr_t, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___ptr0, ___type1, ___sourcestr2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< intptr_t, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  >::Invoke(targetMethod, targetThis, ___ptr0, ___type1, ___sourcestr2);
					else
						GenericVirtActionInvoker3< intptr_t, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  >::Invoke(targetMethod, targetThis, ___ptr0, ___type1, ___sourcestr2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< intptr_t, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ptr0, ___type1, ___sourcestr2);
					else
						VirtActionInvoker3< intptr_t, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ptr0, ___type1, ___sourcestr2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ptr0) - 1), ___type1, ___sourcestr2, targetMethod);
				}
				typedef void (*FunctionPointerType) (void*, intptr_t, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___ptr0, ___type1, ___sourcestr2, targetMethod);
			}
		}
	}
}
// System.IAsyncResult FMOD.DSP_FREE_FUNC::BeginInvoke(System.IntPtr,FMOD.MEMORY_TYPE,FMOD.StringWrapper,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_FREE_FUNC_BeginInvoke_mA96F6923C6F400351F2F3615B562479D1BDD8BD2 (DSP_FREE_FUNC_t0C9E6DE1DF61298098E07E792A9A1BF26AA681C2 * __this, intptr_t ___ptr0, uint32_t ___type1, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  ___sourcestr2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_FREE_FUNC_BeginInvoke_mA96F6923C6F400351F2F3615B562479D1BDD8BD2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___ptr0);
	__d_args[1] = Box(MEMORY_TYPE_tD54CA7DAFC85A6084D80FE45AC3B645475B00AD1_il2cpp_TypeInfo_var, &___type1);
	__d_args[2] = Box(StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9_il2cpp_TypeInfo_var, &___sourcestr2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void FMOD.DSP_FREE_FUNC::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_FREE_FUNC_EndInvoke_m5C93CA2503982EC3FFB18D7EFA8435AFCBA491EE (DSP_FREE_FUNC_t0C9E6DE1DF61298098E07E792A9A1BF26AA681C2 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_GETBLOCKSIZE_FUNC_t9B624C10ADE32AAC618ACF14395A8A59BDDFDD50 (DSP_GETBLOCKSIZE_FUNC_t9B624C10ADE32AAC618ACF14395A8A59BDDFDD50 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, uint32_t* ___blocksize1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0, ___blocksize1);

	return returnValue;
}
// System.Void FMOD.DSP_GETBLOCKSIZE_FUNC::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_GETBLOCKSIZE_FUNC__ctor_mF2291D9C3B3EC52BBD7BEDCE1DE5B103B9E35EFA (DSP_GETBLOCKSIZE_FUNC_t9B624C10ADE32AAC618ACF14395A8A59BDDFDD50 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_GETBLOCKSIZE_FUNC::Invoke(FMOD.DSP_STATE&,System.UInt32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_GETBLOCKSIZE_FUNC_Invoke_m2AD595F3A6C4B6B8B0A9831FA6F79A9166B111CC (DSP_GETBLOCKSIZE_FUNC_t9B624C10ADE32AAC618ACF14395A8A59BDDFDD50 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, uint32_t* ___blocksize1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, ___blocksize1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___blocksize1, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint32_t* >::Invoke(targetMethod, targetThis, ___dsp_state0, ___blocksize1);
					else
						result = GenericVirtFuncInvoker2< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint32_t* >::Invoke(targetMethod, targetThis, ___dsp_state0, ___blocksize1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0, ___blocksize1);
					else
						result = VirtFuncInvoker2< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0, ___blocksize1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___blocksize1, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___blocksize1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___blocksize1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_GETBLOCKSIZE_FUNC::BeginInvoke(FMOD.DSP_STATE&,System.UInt32&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_GETBLOCKSIZE_FUNC_BeginInvoke_m3AE74F65DB0B8186EC91FD2F6B87BBF8F7BCE480 (DSP_GETBLOCKSIZE_FUNC_t9B624C10ADE32AAC618ACF14395A8A59BDDFDD50 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, uint32_t* ___blocksize1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_GETBLOCKSIZE_FUNC_BeginInvoke_m3AE74F65DB0B8186EC91FD2F6B87BBF8F7BCE480_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___blocksize1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// FMOD.RESULT FMOD.DSP_GETBLOCKSIZE_FUNC::EndInvoke(FMOD.DSP_STATE&,System.UInt32&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_GETBLOCKSIZE_FUNC_EndInvoke_mEB13814F4ACF5A3C42B26CC25BF7088A67E8C08A (DSP_GETBLOCKSIZE_FUNC_t9B624C10ADE32AAC618ACF14395A8A59BDDFDD50 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, uint32_t* ___blocksize1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	___blocksize1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_GETCLOCK_FUNC_t0449CC42281AF16DB70CB8E93459A7B5D5C62A75 (DSP_GETCLOCK_FUNC_t0449CC42281AF16DB70CB8E93459A7B5D5C62A75 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, uint64_t* ___clock1, uint32_t* ___offset2, uint32_t* ___length3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint64_t*, uint32_t*, uint32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0, ___clock1, ___offset2, ___length3);

	return returnValue;
}
// System.Void FMOD.DSP_GETCLOCK_FUNC::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_GETCLOCK_FUNC__ctor_m9553902A530CFE20E72AD1B841ADB12B3511BE44 (DSP_GETCLOCK_FUNC_t0449CC42281AF16DB70CB8E93459A7B5D5C62A75 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_GETCLOCK_FUNC::Invoke(FMOD.DSP_STATE&,System.UInt64&,System.UInt32&,System.UInt32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_GETCLOCK_FUNC_Invoke_m8957AB6B52F03635C7A64A63B5DECA0A053331EB (DSP_GETCLOCK_FUNC_t0449CC42281AF16DB70CB8E93459A7B5D5C62A75 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, uint64_t* ___clock1, uint32_t* ___offset2, uint32_t* ___length3, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint64_t*, uint32_t*, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, ___clock1, ___offset2, ___length3, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint64_t*, uint32_t*, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___clock1, ___offset2, ___length3, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker4< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint64_t*, uint32_t*, uint32_t* >::Invoke(targetMethod, targetThis, ___dsp_state0, ___clock1, ___offset2, ___length3);
					else
						result = GenericVirtFuncInvoker4< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint64_t*, uint32_t*, uint32_t* >::Invoke(targetMethod, targetThis, ___dsp_state0, ___clock1, ___offset2, ___length3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker4< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint64_t*, uint32_t*, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0, ___clock1, ___offset2, ___length3);
					else
						result = VirtFuncInvoker4< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint64_t*, uint32_t*, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0, ___clock1, ___offset2, ___length3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, uint64_t*, uint32_t*, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___clock1, ___offset2, ___length3, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, uint64_t*, uint32_t*, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___clock1, ___offset2, ___length3, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint64_t*, uint32_t*, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___clock1, ___offset2, ___length3, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_GETCLOCK_FUNC::BeginInvoke(FMOD.DSP_STATE&,System.UInt64&,System.UInt32&,System.UInt32&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_GETCLOCK_FUNC_BeginInvoke_mB286C24DE7199ECFA0D68B9D6F5C0C8E876857D0 (DSP_GETCLOCK_FUNC_t0449CC42281AF16DB70CB8E93459A7B5D5C62A75 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, uint64_t* ___clock1, uint32_t* ___offset2, uint32_t* ___length3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_GETCLOCK_FUNC_BeginInvoke_mB286C24DE7199ECFA0D68B9D6F5C0C8E876857D0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	__d_args[1] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &*___clock1);
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___offset2);
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___length3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// FMOD.RESULT FMOD.DSP_GETCLOCK_FUNC::EndInvoke(FMOD.DSP_STATE&,System.UInt64&,System.UInt32&,System.UInt32&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_GETCLOCK_FUNC_EndInvoke_m592273EE84B1C415D0FA51FF62E6190B90F7DC56 (DSP_GETCLOCK_FUNC_t0449CC42281AF16DB70CB8E93459A7B5D5C62A75 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, uint64_t* ___clock1, uint32_t* ___offset2, uint32_t* ___length3, RuntimeObject* ___result4, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	___clock1,
	___offset2,
	___length3,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result4, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_GETLISTENERATTRIBUTES_FUNC_t69622B724F9617BD5217ACCF1EB398B9F6060D7B (DSP_GETLISTENERATTRIBUTES_FUNC_t69622B724F9617BD5217ACCF1EB398B9F6060D7B * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t* ___numlisteners1, intptr_t ___attributes2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t*, intptr_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0, ___numlisteners1, ___attributes2);

	return returnValue;
}
// System.Void FMOD.DSP_GETLISTENERATTRIBUTES_FUNC::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_GETLISTENERATTRIBUTES_FUNC__ctor_mB925C050AB558764B08092C66737B7A23619D66B (DSP_GETLISTENERATTRIBUTES_FUNC_t69622B724F9617BD5217ACCF1EB398B9F6060D7B * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_GETLISTENERATTRIBUTES_FUNC::Invoke(FMOD.DSP_STATE&,System.Int32&,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_GETLISTENERATTRIBUTES_FUNC_Invoke_m33036D3DDC86DB050199BD01DF6EBC3C23B6BC59 (DSP_GETLISTENERATTRIBUTES_FUNC_t69622B724F9617BD5217ACCF1EB398B9F6060D7B * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t* ___numlisteners1, intptr_t ___attributes2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t*, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, ___numlisteners1, ___attributes2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t*, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___numlisteners1, ___attributes2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t*, intptr_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___numlisteners1, ___attributes2);
					else
						result = GenericVirtFuncInvoker3< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t*, intptr_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___numlisteners1, ___attributes2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t*, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0, ___numlisteners1, ___attributes2);
					else
						result = VirtFuncInvoker3< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t*, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0, ___numlisteners1, ___attributes2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t*, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___numlisteners1, ___attributes2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t*, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___numlisteners1, ___attributes2, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t*, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___numlisteners1, ___attributes2, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_GETLISTENERATTRIBUTES_FUNC::BeginInvoke(FMOD.DSP_STATE&,System.Int32&,System.IntPtr,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_GETLISTENERATTRIBUTES_FUNC_BeginInvoke_m74CE7081BD5048FBEC9F5126E9B2ABFB6BD20F39 (DSP_GETLISTENERATTRIBUTES_FUNC_t69622B724F9617BD5217ACCF1EB398B9F6060D7B * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t* ___numlisteners1, intptr_t ___attributes2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_GETLISTENERATTRIBUTES_FUNC_BeginInvoke_m74CE7081BD5048FBEC9F5126E9B2ABFB6BD20F39_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	__d_args[1] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &*___numlisteners1);
	__d_args[2] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___attributes2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// FMOD.RESULT FMOD.DSP_GETLISTENERATTRIBUTES_FUNC::EndInvoke(FMOD.DSP_STATE&,System.Int32&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_GETLISTENERATTRIBUTES_FUNC_EndInvoke_mAA8FC32BBC1AB1C3FB18FC3D2FB7794E7CEC22DC (DSP_GETLISTENERATTRIBUTES_FUNC_t69622B724F9617BD5217ACCF1EB398B9F6060D7B * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t* ___numlisteners1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	___numlisteners1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_GETPARAM_BOOL_CALLBACK_tAD8EBD00416D502B580D2869800D43E2C3E52069 (DSP_GETPARAM_BOOL_CALLBACK_tAD8EBD00416D502B580D2869800D43E2C3E52069 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___index1, bool* ___value2, intptr_t ___valuestr3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, int32_t*, intptr_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___value2' to native representation
	int32_t* ____value2_marshaled = NULL;
	int32_t ____value2_marshaled_dereferenced = 0;
	____value2_marshaled_dereferenced = static_cast<int32_t>(*___value2);
	____value2_marshaled = &____value2_marshaled_dereferenced;

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0, ___index1, ____value2_marshaled, ___valuestr3);

	// Marshaling of parameter '___value2' back from native representation
	bool _____value2_marshaled_unmarshaled_dereferenced = false;
	_____value2_marshaled_unmarshaled_dereferenced = static_cast<bool>(*____value2_marshaled);
	*___value2 = _____value2_marshaled_unmarshaled_dereferenced;

	return returnValue;
}
// System.Void FMOD.DSP_GETPARAM_BOOL_CALLBACK::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_GETPARAM_BOOL_CALLBACK__ctor_m79B2277DE8E7EAF014D155C0B9E1BADA285417F4 (DSP_GETPARAM_BOOL_CALLBACK_tAD8EBD00416D502B580D2869800D43E2C3E52069 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_GETPARAM_BOOL_CALLBACK::Invoke(FMOD.DSP_STATE&,System.Int32,System.Boolean&,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_GETPARAM_BOOL_CALLBACK_Invoke_mCAE8E86702452D63873DE58D7A732DC48AB53191 (DSP_GETPARAM_BOOL_CALLBACK_tAD8EBD00416D502B580D2869800D43E2C3E52069 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___index1, bool* ___value2, intptr_t ___valuestr3, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, bool*, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, ___index1, ___value2, ___valuestr3, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, bool*, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___index1, ___value2, ___valuestr3, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker4< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, bool*, intptr_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___index1, ___value2, ___valuestr3);
					else
						result = GenericVirtFuncInvoker4< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, bool*, intptr_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___index1, ___value2, ___valuestr3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker4< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, bool*, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0, ___index1, ___value2, ___valuestr3);
					else
						result = VirtFuncInvoker4< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, bool*, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0, ___index1, ___value2, ___valuestr3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, bool*, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___index1, ___value2, ___valuestr3, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, bool*, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___index1, ___value2, ___valuestr3, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, bool*, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___index1, ___value2, ___valuestr3, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_GETPARAM_BOOL_CALLBACK::BeginInvoke(FMOD.DSP_STATE&,System.Int32,System.Boolean&,System.IntPtr,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_GETPARAM_BOOL_CALLBACK_BeginInvoke_mA48B0131BBA867B67DDDFD62A6CCEE5AE1A9C0AE (DSP_GETPARAM_BOOL_CALLBACK_tAD8EBD00416D502B580D2869800D43E2C3E52069 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___index1, bool* ___value2, intptr_t ___valuestr3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_GETPARAM_BOOL_CALLBACK_BeginInvoke_mA48B0131BBA867B67DDDFD62A6CCEE5AE1A9C0AE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	__d_args[1] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___index1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &*___value2);
	__d_args[3] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___valuestr3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// FMOD.RESULT FMOD.DSP_GETPARAM_BOOL_CALLBACK::EndInvoke(FMOD.DSP_STATE&,System.Boolean&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_GETPARAM_BOOL_CALLBACK_EndInvoke_mDF05053685F0D3322C9DDB05DF40159010A49D5D (DSP_GETPARAM_BOOL_CALLBACK_tAD8EBD00416D502B580D2869800D43E2C3E52069 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, bool* ___value1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	___value1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_GETPARAM_DATA_CALLBACK_t2E82033F2FF7DC3D377C9B9B60A1F453A286D372 (DSP_GETPARAM_DATA_CALLBACK_t2E82033F2FF7DC3D377C9B9B60A1F453A286D372 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___index1, intptr_t* ___data2, uint32_t* ___length3, intptr_t ___valuestr4, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t*, uint32_t*, intptr_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0, ___index1, ___data2, ___length3, ___valuestr4);

	return returnValue;
}
// System.Void FMOD.DSP_GETPARAM_DATA_CALLBACK::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_GETPARAM_DATA_CALLBACK__ctor_m977207D13F45B933372479301F4C64A99D36E854 (DSP_GETPARAM_DATA_CALLBACK_t2E82033F2FF7DC3D377C9B9B60A1F453A286D372 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_GETPARAM_DATA_CALLBACK::Invoke(FMOD.DSP_STATE&,System.Int32,System.IntPtr&,System.UInt32&,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_GETPARAM_DATA_CALLBACK_Invoke_mB6999D6ABC0E7173A725F913B75FB1C4F7528A91 (DSP_GETPARAM_DATA_CALLBACK_t2E82033F2FF7DC3D377C9B9B60A1F453A286D372 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___index1, intptr_t* ___data2, uint32_t* ___length3, intptr_t ___valuestr4, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 5)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t*, uint32_t*, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, ___index1, ___data2, ___length3, ___valuestr4, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t*, uint32_t*, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___index1, ___data2, ___length3, ___valuestr4, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker5< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t*, uint32_t*, intptr_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___index1, ___data2, ___length3, ___valuestr4);
					else
						result = GenericVirtFuncInvoker5< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t*, uint32_t*, intptr_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___index1, ___data2, ___length3, ___valuestr4);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker5< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t*, uint32_t*, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0, ___index1, ___data2, ___length3, ___valuestr4);
					else
						result = VirtFuncInvoker5< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t*, uint32_t*, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0, ___index1, ___data2, ___length3, ___valuestr4);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, intptr_t*, uint32_t*, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___index1, ___data2, ___length3, ___valuestr4, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, intptr_t*, uint32_t*, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___index1, ___data2, ___length3, ___valuestr4, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t*, uint32_t*, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___index1, ___data2, ___length3, ___valuestr4, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_GETPARAM_DATA_CALLBACK::BeginInvoke(FMOD.DSP_STATE&,System.Int32,System.IntPtr&,System.UInt32&,System.IntPtr,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_GETPARAM_DATA_CALLBACK_BeginInvoke_mD23F9E7481E6A1D8A429037E5E66B382896956EC (DSP_GETPARAM_DATA_CALLBACK_t2E82033F2FF7DC3D377C9B9B60A1F453A286D372 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___index1, intptr_t* ___data2, uint32_t* ___length3, intptr_t ___valuestr4, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback5, RuntimeObject * ___object6, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_GETPARAM_DATA_CALLBACK_BeginInvoke_mD23F9E7481E6A1D8A429037E5E66B382896956EC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[6] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	__d_args[1] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___index1);
	__d_args[2] = Box(IntPtr_t_il2cpp_TypeInfo_var, &*___data2);
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___length3);
	__d_args[4] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___valuestr4);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback5, (RuntimeObject*)___object6);
}
// FMOD.RESULT FMOD.DSP_GETPARAM_DATA_CALLBACK::EndInvoke(FMOD.DSP_STATE&,System.IntPtr&,System.UInt32&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_GETPARAM_DATA_CALLBACK_EndInvoke_m6B90AFA02072703E46441227F95762FEF4218208 (DSP_GETPARAM_DATA_CALLBACK_t2E82033F2FF7DC3D377C9B9B60A1F453A286D372 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, intptr_t* ___data1, uint32_t* ___length2, RuntimeObject* ___result3, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	___data1,
	___length2,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result3, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_GETPARAM_FLOAT_CALLBACK_t8401A9811354731A09C32E110B876C472C71A0A9 (DSP_GETPARAM_FLOAT_CALLBACK_t8401A9811354731A09C32E110B876C472C71A0A9 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___index1, float* ___value2, intptr_t ___valuestr3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float*, intptr_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0, ___index1, ___value2, ___valuestr3);

	return returnValue;
}
// System.Void FMOD.DSP_GETPARAM_FLOAT_CALLBACK::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_GETPARAM_FLOAT_CALLBACK__ctor_m53691F50C621E7275EFAA5AAD0B22DD4D8B4D490 (DSP_GETPARAM_FLOAT_CALLBACK_t8401A9811354731A09C32E110B876C472C71A0A9 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_GETPARAM_FLOAT_CALLBACK::Invoke(FMOD.DSP_STATE&,System.Int32,System.Single&,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_GETPARAM_FLOAT_CALLBACK_Invoke_mA6FB17C0BA263E5D3A385333A30CC07F41E79DCC (DSP_GETPARAM_FLOAT_CALLBACK_t8401A9811354731A09C32E110B876C472C71A0A9 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___index1, float* ___value2, intptr_t ___valuestr3, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float*, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, ___index1, ___value2, ___valuestr3, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float*, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___index1, ___value2, ___valuestr3, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker4< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float*, intptr_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___index1, ___value2, ___valuestr3);
					else
						result = GenericVirtFuncInvoker4< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float*, intptr_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___index1, ___value2, ___valuestr3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker4< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float*, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0, ___index1, ___value2, ___valuestr3);
					else
						result = VirtFuncInvoker4< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float*, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0, ___index1, ___value2, ___valuestr3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, float*, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___index1, ___value2, ___valuestr3, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, float*, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___index1, ___value2, ___valuestr3, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float*, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___index1, ___value2, ___valuestr3, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_GETPARAM_FLOAT_CALLBACK::BeginInvoke(FMOD.DSP_STATE&,System.Int32,System.Single&,System.IntPtr,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_GETPARAM_FLOAT_CALLBACK_BeginInvoke_m28B4C62ABEBA2824CB07BE389CB6014FE23D79E6 (DSP_GETPARAM_FLOAT_CALLBACK_t8401A9811354731A09C32E110B876C472C71A0A9 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___index1, float* ___value2, intptr_t ___valuestr3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_GETPARAM_FLOAT_CALLBACK_BeginInvoke_m28B4C62ABEBA2824CB07BE389CB6014FE23D79E6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	__d_args[1] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___index1);
	__d_args[2] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &*___value2);
	__d_args[3] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___valuestr3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// FMOD.RESULT FMOD.DSP_GETPARAM_FLOAT_CALLBACK::EndInvoke(FMOD.DSP_STATE&,System.Single&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_GETPARAM_FLOAT_CALLBACK_EndInvoke_mB91D804AF0C9D645FA3BA56BF4BAADE44296E4D3 (DSP_GETPARAM_FLOAT_CALLBACK_t8401A9811354731A09C32E110B876C472C71A0A9 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, float* ___value1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	___value1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_GETPARAM_INT_CALLBACK_t7AAF6AFAFD8D24554AA1490F81B3C4B370DF8EA6 (DSP_GETPARAM_INT_CALLBACK_t7AAF6AFAFD8D24554AA1490F81B3C4B370DF8EA6 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___index1, int32_t* ___value2, intptr_t ___valuestr3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, int32_t*, intptr_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0, ___index1, ___value2, ___valuestr3);

	return returnValue;
}
// System.Void FMOD.DSP_GETPARAM_INT_CALLBACK::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_GETPARAM_INT_CALLBACK__ctor_mD04E11BECB585C03603F629F30E9C1557704AB93 (DSP_GETPARAM_INT_CALLBACK_t7AAF6AFAFD8D24554AA1490F81B3C4B370DF8EA6 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_GETPARAM_INT_CALLBACK::Invoke(FMOD.DSP_STATE&,System.Int32,System.Int32&,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_GETPARAM_INT_CALLBACK_Invoke_mCA1CAE7721D9196A201E9958479FAA3AD7432C27 (DSP_GETPARAM_INT_CALLBACK_t7AAF6AFAFD8D24554AA1490F81B3C4B370DF8EA6 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___index1, int32_t* ___value2, intptr_t ___valuestr3, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, int32_t*, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, ___index1, ___value2, ___valuestr3, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, int32_t*, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___index1, ___value2, ___valuestr3, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker4< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, int32_t*, intptr_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___index1, ___value2, ___valuestr3);
					else
						result = GenericVirtFuncInvoker4< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, int32_t*, intptr_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___index1, ___value2, ___valuestr3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker4< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, int32_t*, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0, ___index1, ___value2, ___valuestr3);
					else
						result = VirtFuncInvoker4< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, int32_t*, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0, ___index1, ___value2, ___valuestr3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, int32_t*, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___index1, ___value2, ___valuestr3, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, int32_t*, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___index1, ___value2, ___valuestr3, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, int32_t*, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___index1, ___value2, ___valuestr3, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_GETPARAM_INT_CALLBACK::BeginInvoke(FMOD.DSP_STATE&,System.Int32,System.Int32&,System.IntPtr,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_GETPARAM_INT_CALLBACK_BeginInvoke_m3F5F85ED8075499520E658284021C27DFA334516 (DSP_GETPARAM_INT_CALLBACK_t7AAF6AFAFD8D24554AA1490F81B3C4B370DF8EA6 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___index1, int32_t* ___value2, intptr_t ___valuestr3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_GETPARAM_INT_CALLBACK_BeginInvoke_m3F5F85ED8075499520E658284021C27DFA334516_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	__d_args[1] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___index1);
	__d_args[2] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &*___value2);
	__d_args[3] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___valuestr3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// FMOD.RESULT FMOD.DSP_GETPARAM_INT_CALLBACK::EndInvoke(FMOD.DSP_STATE&,System.Int32&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_GETPARAM_INT_CALLBACK_EndInvoke_m0C9A507FC845CF598DAA7263B26F26040758B847 (DSP_GETPARAM_INT_CALLBACK_t7AAF6AFAFD8D24554AA1490F81B3C4B370DF8EA6 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t* ___value1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	___value1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_GETSAMPLERATE_FUNC_t25AB56A22F09DA2A058DC879C9916BB13E9C2E02 (DSP_GETSAMPLERATE_FUNC_t25AB56A22F09DA2A058DC879C9916BB13E9C2E02 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t* ___rate1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0, ___rate1);

	return returnValue;
}
// System.Void FMOD.DSP_GETSAMPLERATE_FUNC::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_GETSAMPLERATE_FUNC__ctor_m2C7225981FB91C13AA1A5D29C3B9A904EB53C589 (DSP_GETSAMPLERATE_FUNC_t25AB56A22F09DA2A058DC879C9916BB13E9C2E02 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_GETSAMPLERATE_FUNC::Invoke(FMOD.DSP_STATE&,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_GETSAMPLERATE_FUNC_Invoke_m2846C4A2F41831053037A7A5988DE37740F78011 (DSP_GETSAMPLERATE_FUNC_t25AB56A22F09DA2A058DC879C9916BB13E9C2E02 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t* ___rate1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, ___rate1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___rate1, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t* >::Invoke(targetMethod, targetThis, ___dsp_state0, ___rate1);
					else
						result = GenericVirtFuncInvoker2< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t* >::Invoke(targetMethod, targetThis, ___dsp_state0, ___rate1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0, ___rate1);
					else
						result = VirtFuncInvoker2< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0, ___rate1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___rate1, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___rate1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___rate1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_GETSAMPLERATE_FUNC::BeginInvoke(FMOD.DSP_STATE&,System.Int32&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_GETSAMPLERATE_FUNC_BeginInvoke_m002624DFF04BC6A1D64F2A00AFE9E79D10B46CB6 (DSP_GETSAMPLERATE_FUNC_t25AB56A22F09DA2A058DC879C9916BB13E9C2E02 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t* ___rate1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_GETSAMPLERATE_FUNC_BeginInvoke_m002624DFF04BC6A1D64F2A00AFE9E79D10B46CB6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	__d_args[1] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &*___rate1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// FMOD.RESULT FMOD.DSP_GETSAMPLERATE_FUNC::EndInvoke(FMOD.DSP_STATE&,System.Int32&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_GETSAMPLERATE_FUNC_EndInvoke_m9865F4AA96E33D740C318E2D3B66CD62E5B07043 (DSP_GETSAMPLERATE_FUNC_t25AB56A22F09DA2A058DC879C9916BB13E9C2E02 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t* ___rate1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	___rate1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_GETSPEAKERMODE_FUNC_t8047C7AB197EF964C7E2299C1EF3B5A00F345B79 (DSP_GETSPEAKERMODE_FUNC_t8047C7AB197EF964C7E2299C1EF3B5A00F345B79 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t* ___speakermode_mixer1, int32_t* ___speakermode_output2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0, ___speakermode_mixer1, ___speakermode_output2);

	return returnValue;
}
// System.Void FMOD.DSP_GETSPEAKERMODE_FUNC::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_GETSPEAKERMODE_FUNC__ctor_mCB496AA6DB26DEDA88BA1AD439532634C6AC2555 (DSP_GETSPEAKERMODE_FUNC_t8047C7AB197EF964C7E2299C1EF3B5A00F345B79 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_GETSPEAKERMODE_FUNC::Invoke(FMOD.DSP_STATE&,System.Int32&,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_GETSPEAKERMODE_FUNC_Invoke_m125B359B66558EECCAEBE8B7FEAB53549A25126F (DSP_GETSPEAKERMODE_FUNC_t8047C7AB197EF964C7E2299C1EF3B5A00F345B79 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t* ___speakermode_mixer1, int32_t* ___speakermode_output2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t*, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, ___speakermode_mixer1, ___speakermode_output2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t*, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___speakermode_mixer1, ___speakermode_output2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t*, int32_t* >::Invoke(targetMethod, targetThis, ___dsp_state0, ___speakermode_mixer1, ___speakermode_output2);
					else
						result = GenericVirtFuncInvoker3< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t*, int32_t* >::Invoke(targetMethod, targetThis, ___dsp_state0, ___speakermode_mixer1, ___speakermode_output2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0, ___speakermode_mixer1, ___speakermode_output2);
					else
						result = VirtFuncInvoker3< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0, ___speakermode_mixer1, ___speakermode_output2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___speakermode_mixer1, ___speakermode_output2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___speakermode_mixer1, ___speakermode_output2, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___speakermode_mixer1, ___speakermode_output2, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_GETSPEAKERMODE_FUNC::BeginInvoke(FMOD.DSP_STATE&,System.Int32&,System.Int32&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_GETSPEAKERMODE_FUNC_BeginInvoke_m075A5037DA7FFA1CF82DC45F332E8F583641EB33 (DSP_GETSPEAKERMODE_FUNC_t8047C7AB197EF964C7E2299C1EF3B5A00F345B79 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t* ___speakermode_mixer1, int32_t* ___speakermode_output2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_GETSPEAKERMODE_FUNC_BeginInvoke_m075A5037DA7FFA1CF82DC45F332E8F583641EB33_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	__d_args[1] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &*___speakermode_mixer1);
	__d_args[2] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &*___speakermode_output2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// FMOD.RESULT FMOD.DSP_GETSPEAKERMODE_FUNC::EndInvoke(FMOD.DSP_STATE&,System.Int32&,System.Int32&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_GETSPEAKERMODE_FUNC_EndInvoke_mC82E0C7647CD89610B6C9B01671A36359F5136B8 (DSP_GETSPEAKERMODE_FUNC_t8047C7AB197EF964C7E2299C1EF3B5A00F345B79 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t* ___speakermode_mixer1, int32_t* ___speakermode_output2, RuntimeObject* ___result3, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	___speakermode_mixer1,
	___speakermode_output2,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result3, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_GETUSERDATA_FUNC_tF11A456B243BF11A5E4283EBBDA9220E904177A8 (DSP_GETUSERDATA_FUNC_tF11A456B243BF11A5E4283EBBDA9220E904177A8 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, intptr_t* ___userdata1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, intptr_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0, ___userdata1);

	return returnValue;
}
// System.Void FMOD.DSP_GETUSERDATA_FUNC::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_GETUSERDATA_FUNC__ctor_m46048F05AC921402DCD18F5780972FA741238014 (DSP_GETUSERDATA_FUNC_tF11A456B243BF11A5E4283EBBDA9220E904177A8 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_GETUSERDATA_FUNC::Invoke(FMOD.DSP_STATE&,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_GETUSERDATA_FUNC_Invoke_mB7CCDED4FBBC797F9B11352B028A7184DB94DAAD (DSP_GETUSERDATA_FUNC_tF11A456B243BF11A5E4283EBBDA9220E904177A8 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, intptr_t* ___userdata1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, intptr_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, ___userdata1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, intptr_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___userdata1, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, intptr_t* >::Invoke(targetMethod, targetThis, ___dsp_state0, ___userdata1);
					else
						result = GenericVirtFuncInvoker2< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, intptr_t* >::Invoke(targetMethod, targetThis, ___dsp_state0, ___userdata1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0, ___userdata1);
					else
						result = VirtFuncInvoker2< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0, ___userdata1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, intptr_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___userdata1, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, intptr_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___userdata1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, intptr_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___userdata1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_GETUSERDATA_FUNC::BeginInvoke(FMOD.DSP_STATE&,System.IntPtr&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_GETUSERDATA_FUNC_BeginInvoke_m1E9EF1352C24B776EB3989BF8FE825BFA38E24BC (DSP_GETUSERDATA_FUNC_tF11A456B243BF11A5E4283EBBDA9220E904177A8 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, intptr_t* ___userdata1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_GETUSERDATA_FUNC_BeginInvoke_m1E9EF1352C24B776EB3989BF8FE825BFA38E24BC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	__d_args[1] = Box(IntPtr_t_il2cpp_TypeInfo_var, &*___userdata1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// FMOD.RESULT FMOD.DSP_GETUSERDATA_FUNC::EndInvoke(FMOD.DSP_STATE&,System.IntPtr&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_GETUSERDATA_FUNC_EndInvoke_mE3E1534872B1A147701E565892FA8203010A6207 (DSP_GETUSERDATA_FUNC_tF11A456B243BF11A5E4283EBBDA9220E904177A8 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, intptr_t* ___userdata1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	___userdata1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_DSP_LOG_FUNC_t85E329EB1F7C54E80A66F8FBA3DB2C2C58E72493 (DSP_LOG_FUNC_t85E329EB1F7C54E80A66F8FBA3DB2C2C58E72493 * __this, uint32_t ___level0, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  ___file1, int32_t ___line2, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  ___function3, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  ___format4, const RuntimeMethod* method)
{
	typedef void (DEFAULT_CALL *PInvokeFunc)(uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , int32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 );
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc(___level0, ___file1, ___line2, ___function3, ___format4);

}
// System.Void FMOD.DSP_LOG_FUNC::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_LOG_FUNC__ctor_m8A197D5C887A18BD400D7FF193DADD7510AFB657 (DSP_LOG_FUNC_t85E329EB1F7C54E80A66F8FBA3DB2C2C58E72493 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void FMOD.DSP_LOG_FUNC::Invoke(FMOD.DEBUG_FLAGS,FMOD.StringWrapper,System.Int32,FMOD.StringWrapper,FMOD.StringWrapper)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_LOG_FUNC_Invoke_m9368BE7EB25C755BDA3772AF1826F4E762D484E6 (DSP_LOG_FUNC_t85E329EB1F7C54E80A66F8FBA3DB2C2C58E72493 * __this, uint32_t ___level0, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  ___file1, int32_t ___line2, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  ___function3, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  ___format4, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 5)
			{
				// open
				typedef void (*FunctionPointerType) (uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , int32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___level0, ___file1, ___line2, ___function3, ___format4, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , int32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___level0, ___file1, ___line2, ___function3, ___format4, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker5< uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , int32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  >::Invoke(targetMethod, targetThis, ___level0, ___file1, ___line2, ___function3, ___format4);
					else
						GenericVirtActionInvoker5< uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , int32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  >::Invoke(targetMethod, targetThis, ___level0, ___file1, ___line2, ___function3, ___format4);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker5< uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , int32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___level0, ___file1, ___line2, ___function3, ___format4);
					else
						VirtActionInvoker5< uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , int32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___level0, ___file1, ___line2, ___function3, ___format4);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , int32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___level0) - 1), ___file1, ___line2, ___function3, ___format4, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , int32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(&___level0) - 1), ___file1, ___line2, ___function3, ___format4, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , int32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___level0, ___file1, ___line2, ___function3, ___format4, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult FMOD.DSP_LOG_FUNC::BeginInvoke(FMOD.DEBUG_FLAGS,FMOD.StringWrapper,System.Int32,FMOD.StringWrapper,FMOD.StringWrapper,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_LOG_FUNC_BeginInvoke_mFA4484DF40E4A4A751070B20E64D5B61C0157C04 (DSP_LOG_FUNC_t85E329EB1F7C54E80A66F8FBA3DB2C2C58E72493 * __this, uint32_t ___level0, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  ___file1, int32_t ___line2, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  ___function3, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  ___format4, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback5, RuntimeObject * ___object6, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_LOG_FUNC_BeginInvoke_mFA4484DF40E4A4A751070B20E64D5B61C0157C04_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[6] = {0};
	__d_args[0] = Box(DEBUG_FLAGS_t064690B82E3CFF643A403FD4A2D0322FE1B0AD56_il2cpp_TypeInfo_var, &___level0);
	__d_args[1] = Box(StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9_il2cpp_TypeInfo_var, &___file1);
	__d_args[2] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___line2);
	__d_args[3] = Box(StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9_il2cpp_TypeInfo_var, &___function3);
	__d_args[4] = Box(StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9_il2cpp_TypeInfo_var, &___format4);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback5, (RuntimeObject*)___object6);
}
// System.Void FMOD.DSP_LOG_FUNC::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_LOG_FUNC_EndInvoke_mBCB229ABB4B1F94FF0C9EDB9D90FD81321578D71 (DSP_LOG_FUNC_t85E329EB1F7C54E80A66F8FBA3DB2C2C58E72493 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: FMOD.DSP_METERING_INFO
IL2CPP_EXTERN_C void DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshal_pinvoke(const DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2& unmarshaled, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_pinvoke& marshaled)
{
	marshaled.___numsamples_0 = unmarshaled.get_numsamples_0();
	if (unmarshaled.get_peaklevel_1() != NULL)
	{
		if (32 > (unmarshaled.get_peaklevel_1())->max_length)
		{
			IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_argument_exception("", "Type could not be marshaled because the length of an embedded array instance does not match the declared length in the layout."), NULL);
		}

		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(32); i++)
		{
			(marshaled.___peaklevel_1)[i] = (unmarshaled.get_peaklevel_1())->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
		}
	}
	if (unmarshaled.get_rmslevel_2() != NULL)
	{
		if (32 > (unmarshaled.get_rmslevel_2())->max_length)
		{
			IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_argument_exception("", "Type could not be marshaled because the length of an embedded array instance does not match the declared length in the layout."), NULL);
		}

		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(32); i++)
		{
			(marshaled.___rmslevel_2)[i] = (unmarshaled.get_rmslevel_2())->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
		}
	}
	marshaled.___numchannels_3 = unmarshaled.get_numchannels_3();
}
IL2CPP_EXTERN_C void DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshal_pinvoke_back(const DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_pinvoke& marshaled, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_pinvoke_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t unmarshaled_numsamples_temp_0 = 0;
	unmarshaled_numsamples_temp_0 = marshaled.___numsamples_0;
	unmarshaled.set_numsamples_0(unmarshaled_numsamples_temp_0);
	unmarshaled.set_peaklevel_1(reinterpret_cast<SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*>((SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)SZArrayNew(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var, 32)));
	for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(32); i++)
	{
		(unmarshaled.get_peaklevel_1())->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (marshaled.___peaklevel_1)[i]);
	}
	unmarshaled.set_rmslevel_2(reinterpret_cast<SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*>((SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)SZArrayNew(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var, 32)));
	for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(32); i++)
	{
		(unmarshaled.get_rmslevel_2())->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (marshaled.___rmslevel_2)[i]);
	}
	int16_t unmarshaled_numchannels_temp_3 = 0;
	unmarshaled_numchannels_temp_3 = marshaled.___numchannels_3;
	unmarshaled.set_numchannels_3(unmarshaled_numchannels_temp_3);
}
// Conversion method for clean up from marshalling of: FMOD.DSP_METERING_INFO
IL2CPP_EXTERN_C void DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshal_pinvoke_cleanup(DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: FMOD.DSP_METERING_INFO
IL2CPP_EXTERN_C void DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshal_com(const DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2& unmarshaled, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_com& marshaled)
{
	marshaled.___numsamples_0 = unmarshaled.get_numsamples_0();
	if (unmarshaled.get_peaklevel_1() != NULL)
	{
		if (32 > (unmarshaled.get_peaklevel_1())->max_length)
		{
			IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_argument_exception("", "Type could not be marshaled because the length of an embedded array instance does not match the declared length in the layout."), NULL);
		}

		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(32); i++)
		{
			(marshaled.___peaklevel_1)[i] = (unmarshaled.get_peaklevel_1())->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
		}
	}
	if (unmarshaled.get_rmslevel_2() != NULL)
	{
		if (32 > (unmarshaled.get_rmslevel_2())->max_length)
		{
			IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_argument_exception("", "Type could not be marshaled because the length of an embedded array instance does not match the declared length in the layout."), NULL);
		}

		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(32); i++)
		{
			(marshaled.___rmslevel_2)[i] = (unmarshaled.get_rmslevel_2())->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
		}
	}
	marshaled.___numchannels_3 = unmarshaled.get_numchannels_3();
}
IL2CPP_EXTERN_C void DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshal_com_back(const DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_com& marshaled, DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_com_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t unmarshaled_numsamples_temp_0 = 0;
	unmarshaled_numsamples_temp_0 = marshaled.___numsamples_0;
	unmarshaled.set_numsamples_0(unmarshaled_numsamples_temp_0);
	unmarshaled.set_peaklevel_1(reinterpret_cast<SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*>((SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)SZArrayNew(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var, 32)));
	for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(32); i++)
	{
		(unmarshaled.get_peaklevel_1())->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (marshaled.___peaklevel_1)[i]);
	}
	unmarshaled.set_rmslevel_2(reinterpret_cast<SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*>((SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)SZArrayNew(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var, 32)));
	for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(32); i++)
	{
		(unmarshaled.get_rmslevel_2())->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (marshaled.___rmslevel_2)[i]);
	}
	int16_t unmarshaled_numchannels_temp_3 = 0;
	unmarshaled_numchannels_temp_3 = marshaled.___numchannels_3;
	unmarshaled.set_numchannels_3(unmarshaled_numchannels_temp_3);
}
// Conversion method for clean up from marshalling of: FMOD.DSP_METERING_INFO
IL2CPP_EXTERN_C void DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshal_com_cleanup(DSP_METERING_INFO_tC34E364C0FD61FEA761B1D30DF0D2C65D49596C2_marshaled_com& marshaled)
{
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_PAN_GETROLLOFFGAIN_FUNC_tB6AB67EB1F301E9C6AFD60A29B8314A585D3A05C (DSP_PAN_GETROLLOFFGAIN_FUNC_tB6AB67EB1F301E9C6AFD60A29B8314A585D3A05C * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___rolloff1, float ___distance2, float ___mindistance3, float ___maxdistance4, float* ___gain5, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, float*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0, ___rolloff1, ___distance2, ___mindistance3, ___maxdistance4, ___gain5);

	return returnValue;
}
// System.Void FMOD.DSP_PAN_GETROLLOFFGAIN_FUNC::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_PAN_GETROLLOFFGAIN_FUNC__ctor_mE3BA412DF69A1C236064BF615EDFCDE58EBAFB26 (DSP_PAN_GETROLLOFFGAIN_FUNC_tB6AB67EB1F301E9C6AFD60A29B8314A585D3A05C * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_PAN_GETROLLOFFGAIN_FUNC::Invoke(FMOD.DSP_STATE&,FMOD.DSP_PAN_3D_ROLLOFF_TYPE,System.Single,System.Single,System.Single,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_PAN_GETROLLOFFGAIN_FUNC_Invoke_m0E9BD9B051CA924B0E4899AFC0229DCF00235680 (DSP_PAN_GETROLLOFFGAIN_FUNC_tB6AB67EB1F301E9C6AFD60A29B8314A585D3A05C * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___rolloff1, float ___distance2, float ___mindistance3, float ___maxdistance4, float* ___gain5, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 6)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, ___rolloff1, ___distance2, ___mindistance3, ___maxdistance4, ___gain5, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___rolloff1, ___distance2, ___mindistance3, ___maxdistance4, ___gain5, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker6< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, float* >::Invoke(targetMethod, targetThis, ___dsp_state0, ___rolloff1, ___distance2, ___mindistance3, ___maxdistance4, ___gain5);
					else
						result = GenericVirtFuncInvoker6< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, float* >::Invoke(targetMethod, targetThis, ___dsp_state0, ___rolloff1, ___distance2, ___mindistance3, ___maxdistance4, ___gain5);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker6< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0, ___rolloff1, ___distance2, ___mindistance3, ___maxdistance4, ___gain5);
					else
						result = VirtFuncInvoker6< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0, ___rolloff1, ___distance2, ___mindistance3, ___maxdistance4, ___gain5);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, float, float, float, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___rolloff1, ___distance2, ___mindistance3, ___maxdistance4, ___gain5, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, float, float, float, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___rolloff1, ___distance2, ___mindistance3, ___maxdistance4, ___gain5, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___rolloff1, ___distance2, ___mindistance3, ___maxdistance4, ___gain5, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_PAN_GETROLLOFFGAIN_FUNC::BeginInvoke(FMOD.DSP_STATE&,FMOD.DSP_PAN_3D_ROLLOFF_TYPE,System.Single,System.Single,System.Single,System.Single&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_PAN_GETROLLOFFGAIN_FUNC_BeginInvoke_mCC10E944B759E7B17769E9C605EFF70804D3C77C (DSP_PAN_GETROLLOFFGAIN_FUNC_tB6AB67EB1F301E9C6AFD60A29B8314A585D3A05C * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___rolloff1, float ___distance2, float ___mindistance3, float ___maxdistance4, float* ___gain5, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback6, RuntimeObject * ___object7, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_PAN_GETROLLOFFGAIN_FUNC_BeginInvoke_mCC10E944B759E7B17769E9C605EFF70804D3C77C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[7] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	__d_args[1] = Box(DSP_PAN_3D_ROLLOFF_TYPE_t8281FE1B3F501AE31EA34324C52C8F1DB1E9B8A2_il2cpp_TypeInfo_var, &___rolloff1);
	__d_args[2] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___distance2);
	__d_args[3] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___mindistance3);
	__d_args[4] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___maxdistance4);
	__d_args[5] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &*___gain5);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback6, (RuntimeObject*)___object7);
}
// FMOD.RESULT FMOD.DSP_PAN_GETROLLOFFGAIN_FUNC::EndInvoke(FMOD.DSP_STATE&,System.Single&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_PAN_GETROLLOFFGAIN_FUNC_EndInvoke_mAD05244D9011E7645BE504CEFD9B4E4E54059AFF (DSP_PAN_GETROLLOFFGAIN_FUNC_tB6AB67EB1F301E9C6AFD60A29B8314A585D3A05C * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, float* ___gain1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	___gain1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_PAN_SUMMONOMATRIX_FUNC_t4FEAF41A824EF70D7AE3CC079690C889B3F3584E (DSP_PAN_SUMMONOMATRIX_FUNC_t4FEAF41A824EF70D7AE3CC079690C889B3F3584E * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___sourceSpeakerMode1, float ___lowFrequencyGain2, float ___overallGain3, intptr_t ___matrix4, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, intptr_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0, ___sourceSpeakerMode1, ___lowFrequencyGain2, ___overallGain3, ___matrix4);

	return returnValue;
}
// System.Void FMOD.DSP_PAN_SUMMONOMATRIX_FUNC::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_PAN_SUMMONOMATRIX_FUNC__ctor_m090D0966F3C82D1EC725195AEDF8EF44C24838BD (DSP_PAN_SUMMONOMATRIX_FUNC_t4FEAF41A824EF70D7AE3CC079690C889B3F3584E * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_PAN_SUMMONOMATRIX_FUNC::Invoke(FMOD.DSP_STATE&,System.Int32,System.Single,System.Single,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_PAN_SUMMONOMATRIX_FUNC_Invoke_m25B7532189BA7D3BBC01D6B2B45CB4B2178EE8D4 (DSP_PAN_SUMMONOMATRIX_FUNC_t4FEAF41A824EF70D7AE3CC079690C889B3F3584E * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___sourceSpeakerMode1, float ___lowFrequencyGain2, float ___overallGain3, intptr_t ___matrix4, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 5)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, ___sourceSpeakerMode1, ___lowFrequencyGain2, ___overallGain3, ___matrix4, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___sourceSpeakerMode1, ___lowFrequencyGain2, ___overallGain3, ___matrix4, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker5< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, intptr_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___sourceSpeakerMode1, ___lowFrequencyGain2, ___overallGain3, ___matrix4);
					else
						result = GenericVirtFuncInvoker5< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, intptr_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___sourceSpeakerMode1, ___lowFrequencyGain2, ___overallGain3, ___matrix4);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker5< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0, ___sourceSpeakerMode1, ___lowFrequencyGain2, ___overallGain3, ___matrix4);
					else
						result = VirtFuncInvoker5< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0, ___sourceSpeakerMode1, ___lowFrequencyGain2, ___overallGain3, ___matrix4);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, float, float, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___sourceSpeakerMode1, ___lowFrequencyGain2, ___overallGain3, ___matrix4, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, float, float, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___sourceSpeakerMode1, ___lowFrequencyGain2, ___overallGain3, ___matrix4, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___sourceSpeakerMode1, ___lowFrequencyGain2, ___overallGain3, ___matrix4, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_PAN_SUMMONOMATRIX_FUNC::BeginInvoke(FMOD.DSP_STATE&,System.Int32,System.Single,System.Single,System.IntPtr,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_PAN_SUMMONOMATRIX_FUNC_BeginInvoke_m78B09693F3C4A627AC50E5DD11870DDCCBFA2FA6 (DSP_PAN_SUMMONOMATRIX_FUNC_t4FEAF41A824EF70D7AE3CC079690C889B3F3584E * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___sourceSpeakerMode1, float ___lowFrequencyGain2, float ___overallGain3, intptr_t ___matrix4, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback5, RuntimeObject * ___object6, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_PAN_SUMMONOMATRIX_FUNC_BeginInvoke_m78B09693F3C4A627AC50E5DD11870DDCCBFA2FA6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[6] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	__d_args[1] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___sourceSpeakerMode1);
	__d_args[2] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___lowFrequencyGain2);
	__d_args[3] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___overallGain3);
	__d_args[4] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___matrix4);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback5, (RuntimeObject*)___object6);
}
// FMOD.RESULT FMOD.DSP_PAN_SUMMONOMATRIX_FUNC::EndInvoke(FMOD.DSP_STATE&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_PAN_SUMMONOMATRIX_FUNC_EndInvoke_m91A8227ED043D7A47287BC87E6E28D93A34BFBFC (DSP_PAN_SUMMONOMATRIX_FUNC_t4FEAF41A824EF70D7AE3CC079690C889B3F3584E * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC_tA7FBF2E8C0EA206F652B515515C002B789849C7B (DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC_tA7FBF2E8C0EA206F652B515515C002B789849C7B * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___targetSpeakerMode1, float ___direction2, float ___extent3, float ___lowFrequencyGain4, float ___overallGain5, int32_t ___matrixHop6, intptr_t ___matrix7, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, float, int32_t, intptr_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0, ___targetSpeakerMode1, ___direction2, ___extent3, ___lowFrequencyGain4, ___overallGain5, ___matrixHop6, ___matrix7);

	return returnValue;
}
// System.Void FMOD.DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC__ctor_m8E6E4C0921D1EC03997E9AB0F7A32EC5342F5624 (DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC_tA7FBF2E8C0EA206F652B515515C002B789849C7B * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC::Invoke(FMOD.DSP_STATE&,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC_Invoke_mE272AF0EFAA29CE470E5D1B09A693E0640D04FFC (DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC_tA7FBF2E8C0EA206F652B515515C002B789849C7B * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___targetSpeakerMode1, float ___direction2, float ___extent3, float ___lowFrequencyGain4, float ___overallGain5, int32_t ___matrixHop6, intptr_t ___matrix7, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 8)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, float, int32_t, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, ___targetSpeakerMode1, ___direction2, ___extent3, ___lowFrequencyGain4, ___overallGain5, ___matrixHop6, ___matrix7, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, float, int32_t, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___targetSpeakerMode1, ___direction2, ___extent3, ___lowFrequencyGain4, ___overallGain5, ___matrixHop6, ___matrix7, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker8< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, float, int32_t, intptr_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___targetSpeakerMode1, ___direction2, ___extent3, ___lowFrequencyGain4, ___overallGain5, ___matrixHop6, ___matrix7);
					else
						result = GenericVirtFuncInvoker8< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, float, int32_t, intptr_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___targetSpeakerMode1, ___direction2, ___extent3, ___lowFrequencyGain4, ___overallGain5, ___matrixHop6, ___matrix7);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker8< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, float, int32_t, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0, ___targetSpeakerMode1, ___direction2, ___extent3, ___lowFrequencyGain4, ___overallGain5, ___matrixHop6, ___matrix7);
					else
						result = VirtFuncInvoker8< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, float, int32_t, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0, ___targetSpeakerMode1, ___direction2, ___extent3, ___lowFrequencyGain4, ___overallGain5, ___matrixHop6, ___matrix7);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, float, float, float, float, int32_t, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___targetSpeakerMode1, ___direction2, ___extent3, ___lowFrequencyGain4, ___overallGain5, ___matrixHop6, ___matrix7, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, float, float, float, float, int32_t, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___targetSpeakerMode1, ___direction2, ___extent3, ___lowFrequencyGain4, ___overallGain5, ___matrixHop6, ___matrix7, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, float, int32_t, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___targetSpeakerMode1, ___direction2, ___extent3, ___lowFrequencyGain4, ___overallGain5, ___matrixHop6, ___matrix7, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC::BeginInvoke(FMOD.DSP_STATE&,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.IntPtr,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC_BeginInvoke_m3BBD2179045ADCAAF1098B5AFC532A6058A251D3 (DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC_tA7FBF2E8C0EA206F652B515515C002B789849C7B * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___targetSpeakerMode1, float ___direction2, float ___extent3, float ___lowFrequencyGain4, float ___overallGain5, int32_t ___matrixHop6, intptr_t ___matrix7, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback8, RuntimeObject * ___object9, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC_BeginInvoke_m3BBD2179045ADCAAF1098B5AFC532A6058A251D3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[9] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	__d_args[1] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___targetSpeakerMode1);
	__d_args[2] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___direction2);
	__d_args[3] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___extent3);
	__d_args[4] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___lowFrequencyGain4);
	__d_args[5] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___overallGain5);
	__d_args[6] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___matrixHop6);
	__d_args[7] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___matrix7);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback8, (RuntimeObject*)___object9);
}
// FMOD.RESULT FMOD.DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC::EndInvoke(FMOD.DSP_STATE&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC_EndInvoke_m2C94361E1FA59FE2685AD218F53EAFDE7518440A (DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC_tA7FBF2E8C0EA206F652B515515C002B789849C7B * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_PAN_SUMSTEREOMATRIX_FUNC_tBDAFBEB725DE435CC966204D9A134DF3D5BB8092 (DSP_PAN_SUMSTEREOMATRIX_FUNC_tBDAFBEB725DE435CC966204D9A134DF3D5BB8092 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___sourceSpeakerMode1, float ___pan2, float ___lowFrequencyGain3, float ___overallGain4, int32_t ___matrixHop5, intptr_t ___matrix6, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, int32_t, intptr_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0, ___sourceSpeakerMode1, ___pan2, ___lowFrequencyGain3, ___overallGain4, ___matrixHop5, ___matrix6);

	return returnValue;
}
// System.Void FMOD.DSP_PAN_SUMSTEREOMATRIX_FUNC::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_PAN_SUMSTEREOMATRIX_FUNC__ctor_m22DBDA5D6E8C5B963A2E472087A7D5CB19E29036 (DSP_PAN_SUMSTEREOMATRIX_FUNC_tBDAFBEB725DE435CC966204D9A134DF3D5BB8092 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_PAN_SUMSTEREOMATRIX_FUNC::Invoke(FMOD.DSP_STATE&,System.Int32,System.Single,System.Single,System.Single,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_PAN_SUMSTEREOMATRIX_FUNC_Invoke_m2F34C4A9AF461ECB6425514B2FB54018E6ECB442 (DSP_PAN_SUMSTEREOMATRIX_FUNC_tBDAFBEB725DE435CC966204D9A134DF3D5BB8092 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___sourceSpeakerMode1, float ___pan2, float ___lowFrequencyGain3, float ___overallGain4, int32_t ___matrixHop5, intptr_t ___matrix6, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 7)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, int32_t, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, ___sourceSpeakerMode1, ___pan2, ___lowFrequencyGain3, ___overallGain4, ___matrixHop5, ___matrix6, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, int32_t, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___sourceSpeakerMode1, ___pan2, ___lowFrequencyGain3, ___overallGain4, ___matrixHop5, ___matrix6, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker7< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, int32_t, intptr_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___sourceSpeakerMode1, ___pan2, ___lowFrequencyGain3, ___overallGain4, ___matrixHop5, ___matrix6);
					else
						result = GenericVirtFuncInvoker7< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, int32_t, intptr_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___sourceSpeakerMode1, ___pan2, ___lowFrequencyGain3, ___overallGain4, ___matrixHop5, ___matrix6);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker7< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, int32_t, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0, ___sourceSpeakerMode1, ___pan2, ___lowFrequencyGain3, ___overallGain4, ___matrixHop5, ___matrix6);
					else
						result = VirtFuncInvoker7< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, int32_t, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0, ___sourceSpeakerMode1, ___pan2, ___lowFrequencyGain3, ___overallGain4, ___matrixHop5, ___matrix6);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, float, float, float, int32_t, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___sourceSpeakerMode1, ___pan2, ___lowFrequencyGain3, ___overallGain4, ___matrixHop5, ___matrix6, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, float, float, float, int32_t, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___sourceSpeakerMode1, ___pan2, ___lowFrequencyGain3, ___overallGain4, ___matrixHop5, ___matrix6, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, int32_t, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___sourceSpeakerMode1, ___pan2, ___lowFrequencyGain3, ___overallGain4, ___matrixHop5, ___matrix6, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_PAN_SUMSTEREOMATRIX_FUNC::BeginInvoke(FMOD.DSP_STATE&,System.Int32,System.Single,System.Single,System.Single,System.Int32,System.IntPtr,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_PAN_SUMSTEREOMATRIX_FUNC_BeginInvoke_mA2EDB9D4419713B7B82ECA83E94272B8F3C6FD10 (DSP_PAN_SUMSTEREOMATRIX_FUNC_tBDAFBEB725DE435CC966204D9A134DF3D5BB8092 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___sourceSpeakerMode1, float ___pan2, float ___lowFrequencyGain3, float ___overallGain4, int32_t ___matrixHop5, intptr_t ___matrix6, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback7, RuntimeObject * ___object8, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_PAN_SUMSTEREOMATRIX_FUNC_BeginInvoke_mA2EDB9D4419713B7B82ECA83E94272B8F3C6FD10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[8] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	__d_args[1] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___sourceSpeakerMode1);
	__d_args[2] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___pan2);
	__d_args[3] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___lowFrequencyGain3);
	__d_args[4] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___overallGain4);
	__d_args[5] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___matrixHop5);
	__d_args[6] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___matrix6);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback7, (RuntimeObject*)___object8);
}
// FMOD.RESULT FMOD.DSP_PAN_SUMSTEREOMATRIX_FUNC::EndInvoke(FMOD.DSP_STATE&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_PAN_SUMSTEREOMATRIX_FUNC_EndInvoke_mEE939F794038C1C06AE82726E81DEDF2987725D8 (DSP_PAN_SUMSTEREOMATRIX_FUNC_tBDAFBEB725DE435CC966204D9A134DF3D5BB8092 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC_tD083096D805C0022D80A8CEE8DE038D2588A63F3 (DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC_tD083096D805C0022D80A8CEE8DE038D2588A63F3 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___targetSpeakerMode1, float ___direction2, float ___extent3, float ___rotation4, float ___lowFrequencyGain5, float ___overallGain6, int32_t ___matrixHop7, intptr_t ___matrix8, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, float, float, int32_t, intptr_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0, ___targetSpeakerMode1, ___direction2, ___extent3, ___rotation4, ___lowFrequencyGain5, ___overallGain6, ___matrixHop7, ___matrix8);

	return returnValue;
}
// System.Void FMOD.DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC__ctor_mF249A9B9E2E54AED1C53274553320E9B0A34F6DC (DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC_tD083096D805C0022D80A8CEE8DE038D2588A63F3 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC::Invoke(FMOD.DSP_STATE&,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC_Invoke_m72304BA06B6A2111FB69D0353E30319DD64238AC (DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC_tD083096D805C0022D80A8CEE8DE038D2588A63F3 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___targetSpeakerMode1, float ___direction2, float ___extent3, float ___rotation4, float ___lowFrequencyGain5, float ___overallGain6, int32_t ___matrixHop7, intptr_t ___matrix8, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 9)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, float, float, int32_t, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, ___targetSpeakerMode1, ___direction2, ___extent3, ___rotation4, ___lowFrequencyGain5, ___overallGain6, ___matrixHop7, ___matrix8, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, float, float, int32_t, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___targetSpeakerMode1, ___direction2, ___extent3, ___rotation4, ___lowFrequencyGain5, ___overallGain6, ___matrixHop7, ___matrix8, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker9< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, float, float, int32_t, intptr_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___targetSpeakerMode1, ___direction2, ___extent3, ___rotation4, ___lowFrequencyGain5, ___overallGain6, ___matrixHop7, ___matrix8);
					else
						result = GenericVirtFuncInvoker9< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, float, float, int32_t, intptr_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___targetSpeakerMode1, ___direction2, ___extent3, ___rotation4, ___lowFrequencyGain5, ___overallGain6, ___matrixHop7, ___matrix8);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker9< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, float, float, int32_t, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0, ___targetSpeakerMode1, ___direction2, ___extent3, ___rotation4, ___lowFrequencyGain5, ___overallGain6, ___matrixHop7, ___matrix8);
					else
						result = VirtFuncInvoker9< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, float, float, int32_t, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0, ___targetSpeakerMode1, ___direction2, ___extent3, ___rotation4, ___lowFrequencyGain5, ___overallGain6, ___matrixHop7, ___matrix8);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, float, float, float, float, float, int32_t, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___targetSpeakerMode1, ___direction2, ___extent3, ___rotation4, ___lowFrequencyGain5, ___overallGain6, ___matrixHop7, ___matrix8, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, float, float, float, float, float, int32_t, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___targetSpeakerMode1, ___direction2, ___extent3, ___rotation4, ___lowFrequencyGain5, ___overallGain6, ___matrixHop7, ___matrix8, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, float, float, float, float, int32_t, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___targetSpeakerMode1, ___direction2, ___extent3, ___rotation4, ___lowFrequencyGain5, ___overallGain6, ___matrixHop7, ___matrix8, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC::BeginInvoke(FMOD.DSP_STATE&,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.IntPtr,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC_BeginInvoke_mBA81F11F4372FD9E91DF7DA48A73559E6D9B5323 (DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC_tD083096D805C0022D80A8CEE8DE038D2588A63F3 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___targetSpeakerMode1, float ___direction2, float ___extent3, float ___rotation4, float ___lowFrequencyGain5, float ___overallGain6, int32_t ___matrixHop7, intptr_t ___matrix8, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback9, RuntimeObject * ___object10, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC_BeginInvoke_mBA81F11F4372FD9E91DF7DA48A73559E6D9B5323_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[10] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	__d_args[1] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___targetSpeakerMode1);
	__d_args[2] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___direction2);
	__d_args[3] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___extent3);
	__d_args[4] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___rotation4);
	__d_args[5] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___lowFrequencyGain5);
	__d_args[6] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___overallGain6);
	__d_args[7] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___matrixHop7);
	__d_args[8] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___matrix8);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback9, (RuntimeObject*)___object10);
}
// FMOD.RESULT FMOD.DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC::EndInvoke(FMOD.DSP_STATE&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC_EndInvoke_m7B9B748846A9E57073FD4678CCB7C952069579C6 (DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC_tD083096D805C0022D80A8CEE8DE038D2588A63F3 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_PAN_SUMSURROUNDMATRIX_FUNC_t57199FB9B779135FCFB32AFE2B8ADE90F5065619 (DSP_PAN_SUMSURROUNDMATRIX_FUNC_t57199FB9B779135FCFB32AFE2B8ADE90F5065619 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___sourceSpeakerMode1, int32_t ___targetSpeakerMode2, float ___direction3, float ___extent4, float ___rotation5, float ___lowFrequencyGain6, float ___overallGain7, int32_t ___matrixHop8, intptr_t ___matrix9, int32_t ___flags10, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, int32_t, float, float, float, float, float, int32_t, intptr_t, int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0, ___sourceSpeakerMode1, ___targetSpeakerMode2, ___direction3, ___extent4, ___rotation5, ___lowFrequencyGain6, ___overallGain7, ___matrixHop8, ___matrix9, ___flags10);

	return returnValue;
}
// System.Void FMOD.DSP_PAN_SUMSURROUNDMATRIX_FUNC::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_PAN_SUMSURROUNDMATRIX_FUNC__ctor_m34737236E3B554E73B2EAFAF7BFA04DEB2D04500 (DSP_PAN_SUMSURROUNDMATRIX_FUNC_t57199FB9B779135FCFB32AFE2B8ADE90F5065619 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_PAN_SUMSURROUNDMATRIX_FUNC::Invoke(FMOD.DSP_STATE&,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.IntPtr,FMOD.DSP_PAN_SURROUND_FLAGS)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_PAN_SUMSURROUNDMATRIX_FUNC_Invoke_m7C98A507CC741214F41AC5F88A045FAA3BD3C423 (DSP_PAN_SUMSURROUNDMATRIX_FUNC_t57199FB9B779135FCFB32AFE2B8ADE90F5065619 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___sourceSpeakerMode1, int32_t ___targetSpeakerMode2, float ___direction3, float ___extent4, float ___rotation5, float ___lowFrequencyGain6, float ___overallGain7, int32_t ___matrixHop8, intptr_t ___matrix9, int32_t ___flags10, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 11)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, int32_t, float, float, float, float, float, int32_t, intptr_t, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, ___sourceSpeakerMode1, ___targetSpeakerMode2, ___direction3, ___extent4, ___rotation5, ___lowFrequencyGain6, ___overallGain7, ___matrixHop8, ___matrix9, ___flags10, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, int32_t, float, float, float, float, float, int32_t, intptr_t, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___sourceSpeakerMode1, ___targetSpeakerMode2, ___direction3, ___extent4, ___rotation5, ___lowFrequencyGain6, ___overallGain7, ___matrixHop8, ___matrix9, ___flags10, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker11< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, int32_t, float, float, float, float, float, int32_t, intptr_t, int32_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___sourceSpeakerMode1, ___targetSpeakerMode2, ___direction3, ___extent4, ___rotation5, ___lowFrequencyGain6, ___overallGain7, ___matrixHop8, ___matrix9, ___flags10);
					else
						result = GenericVirtFuncInvoker11< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, int32_t, float, float, float, float, float, int32_t, intptr_t, int32_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___sourceSpeakerMode1, ___targetSpeakerMode2, ___direction3, ___extent4, ___rotation5, ___lowFrequencyGain6, ___overallGain7, ___matrixHop8, ___matrix9, ___flags10);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker11< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, int32_t, float, float, float, float, float, int32_t, intptr_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0, ___sourceSpeakerMode1, ___targetSpeakerMode2, ___direction3, ___extent4, ___rotation5, ___lowFrequencyGain6, ___overallGain7, ___matrixHop8, ___matrix9, ___flags10);
					else
						result = VirtFuncInvoker11< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, int32_t, float, float, float, float, float, int32_t, intptr_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0, ___sourceSpeakerMode1, ___targetSpeakerMode2, ___direction3, ___extent4, ___rotation5, ___lowFrequencyGain6, ___overallGain7, ___matrixHop8, ___matrix9, ___flags10);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, int32_t, float, float, float, float, float, int32_t, intptr_t, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___sourceSpeakerMode1, ___targetSpeakerMode2, ___direction3, ___extent4, ___rotation5, ___lowFrequencyGain6, ___overallGain7, ___matrixHop8, ___matrix9, ___flags10, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, int32_t, float, float, float, float, float, int32_t, intptr_t, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___sourceSpeakerMode1, ___targetSpeakerMode2, ___direction3, ___extent4, ___rotation5, ___lowFrequencyGain6, ___overallGain7, ___matrixHop8, ___matrix9, ___flags10, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, int32_t, float, float, float, float, float, int32_t, intptr_t, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___sourceSpeakerMode1, ___targetSpeakerMode2, ___direction3, ___extent4, ___rotation5, ___lowFrequencyGain6, ___overallGain7, ___matrixHop8, ___matrix9, ___flags10, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_PAN_SUMSURROUNDMATRIX_FUNC::BeginInvoke(FMOD.DSP_STATE&,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.IntPtr,FMOD.DSP_PAN_SURROUND_FLAGS,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_PAN_SUMSURROUNDMATRIX_FUNC_BeginInvoke_m425C0F36DA35F8141A796D7BE089E706E8E11062 (DSP_PAN_SUMSURROUNDMATRIX_FUNC_t57199FB9B779135FCFB32AFE2B8ADE90F5065619 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___sourceSpeakerMode1, int32_t ___targetSpeakerMode2, float ___direction3, float ___extent4, float ___rotation5, float ___lowFrequencyGain6, float ___overallGain7, int32_t ___matrixHop8, intptr_t ___matrix9, int32_t ___flags10, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback11, RuntimeObject * ___object12, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_PAN_SUMSURROUNDMATRIX_FUNC_BeginInvoke_m425C0F36DA35F8141A796D7BE089E706E8E11062_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[12] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	__d_args[1] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___sourceSpeakerMode1);
	__d_args[2] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___targetSpeakerMode2);
	__d_args[3] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___direction3);
	__d_args[4] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___extent4);
	__d_args[5] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___rotation5);
	__d_args[6] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___lowFrequencyGain6);
	__d_args[7] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___overallGain7);
	__d_args[8] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___matrixHop8);
	__d_args[9] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___matrix9);
	__d_args[10] = Box(DSP_PAN_SURROUND_FLAGS_t115C25A3E1D90A75DEC1CA06FF4B54FEBB3F04F0_il2cpp_TypeInfo_var, &___flags10);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback11, (RuntimeObject*)___object12);
}
// FMOD.RESULT FMOD.DSP_PAN_SUMSURROUNDMATRIX_FUNC::EndInvoke(FMOD.DSP_STATE&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_PAN_SUMSURROUNDMATRIX_FUNC_EndInvoke_m92ABB38D378BF64E579E6FA22D2CE7E5C254E5CC (DSP_PAN_SUMSURROUNDMATRIX_FUNC_t57199FB9B779135FCFB32AFE2B8ADE90F5065619 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: FMOD.DSP_PARAMETER_3DATTRIBUTES_MULTI
IL2CPP_EXTERN_C void DSP_PARAMETER_3DATTRIBUTES_MULTI_t2A4823DEE96E94AAFA950F4ADEB624339AF83EC9_marshal_pinvoke(const DSP_PARAMETER_3DATTRIBUTES_MULTI_t2A4823DEE96E94AAFA950F4ADEB624339AF83EC9& unmarshaled, DSP_PARAMETER_3DATTRIBUTES_MULTI_t2A4823DEE96E94AAFA950F4ADEB624339AF83EC9_marshaled_pinvoke& marshaled)
{
	marshaled.___numlisteners_0 = unmarshaled.get_numlisteners_0();
	if (unmarshaled.get_relative_1() != NULL)
	{
		if (8 > (unmarshaled.get_relative_1())->max_length)
		{
			IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_argument_exception("", "Type could not be marshaled because the length of an embedded array instance does not match the declared length in the layout."), NULL);
		}

		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(8); i++)
		{
			(marshaled.___relative_1)[i] = (unmarshaled.get_relative_1())->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
		}
	}
	if (unmarshaled.get_weight_2() != NULL)
	{
		if (8 > (unmarshaled.get_weight_2())->max_length)
		{
			IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_argument_exception("", "Type could not be marshaled because the length of an embedded array instance does not match the declared length in the layout."), NULL);
		}

		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(8); i++)
		{
			(marshaled.___weight_2)[i] = (unmarshaled.get_weight_2())->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
		}
	}
	marshaled.___absolute_3 = unmarshaled.get_absolute_3();
}
IL2CPP_EXTERN_C void DSP_PARAMETER_3DATTRIBUTES_MULTI_t2A4823DEE96E94AAFA950F4ADEB624339AF83EC9_marshal_pinvoke_back(const DSP_PARAMETER_3DATTRIBUTES_MULTI_t2A4823DEE96E94AAFA950F4ADEB624339AF83EC9_marshaled_pinvoke& marshaled, DSP_PARAMETER_3DATTRIBUTES_MULTI_t2A4823DEE96E94AAFA950F4ADEB624339AF83EC9& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_PARAMETER_3DATTRIBUTES_MULTI_t2A4823DEE96E94AAFA950F4ADEB624339AF83EC9_pinvoke_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t unmarshaled_numlisteners_temp_0 = 0;
	unmarshaled_numlisteners_temp_0 = marshaled.___numlisteners_0;
	unmarshaled.set_numlisteners_0(unmarshaled_numlisteners_temp_0);
	unmarshaled.set_relative_1(reinterpret_cast<ATTRIBUTES_3DU5BU5D_t5427259BEC6244F4081124FF88F25A12CBF725EF*>((ATTRIBUTES_3DU5BU5D_t5427259BEC6244F4081124FF88F25A12CBF725EF*)SZArrayNew(ATTRIBUTES_3DU5BU5D_t5427259BEC6244F4081124FF88F25A12CBF725EF_il2cpp_TypeInfo_var, 8)));
	for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(8); i++)
	{
		(unmarshaled.get_relative_1())->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (marshaled.___relative_1)[i]);
	}
	unmarshaled.set_weight_2(reinterpret_cast<SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*>((SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)SZArrayNew(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var, 8)));
	for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(8); i++)
	{
		(unmarshaled.get_weight_2())->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (marshaled.___weight_2)[i]);
	}
	ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604  unmarshaled_absolute_temp_3;
	memset((&unmarshaled_absolute_temp_3), 0, sizeof(unmarshaled_absolute_temp_3));
	unmarshaled_absolute_temp_3 = marshaled.___absolute_3;
	unmarshaled.set_absolute_3(unmarshaled_absolute_temp_3);
}
// Conversion method for clean up from marshalling of: FMOD.DSP_PARAMETER_3DATTRIBUTES_MULTI
IL2CPP_EXTERN_C void DSP_PARAMETER_3DATTRIBUTES_MULTI_t2A4823DEE96E94AAFA950F4ADEB624339AF83EC9_marshal_pinvoke_cleanup(DSP_PARAMETER_3DATTRIBUTES_MULTI_t2A4823DEE96E94AAFA950F4ADEB624339AF83EC9_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: FMOD.DSP_PARAMETER_3DATTRIBUTES_MULTI
IL2CPP_EXTERN_C void DSP_PARAMETER_3DATTRIBUTES_MULTI_t2A4823DEE96E94AAFA950F4ADEB624339AF83EC9_marshal_com(const DSP_PARAMETER_3DATTRIBUTES_MULTI_t2A4823DEE96E94AAFA950F4ADEB624339AF83EC9& unmarshaled, DSP_PARAMETER_3DATTRIBUTES_MULTI_t2A4823DEE96E94AAFA950F4ADEB624339AF83EC9_marshaled_com& marshaled)
{
	marshaled.___numlisteners_0 = unmarshaled.get_numlisteners_0();
	if (unmarshaled.get_relative_1() != NULL)
	{
		if (8 > (unmarshaled.get_relative_1())->max_length)
		{
			IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_argument_exception("", "Type could not be marshaled because the length of an embedded array instance does not match the declared length in the layout."), NULL);
		}

		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(8); i++)
		{
			(marshaled.___relative_1)[i] = (unmarshaled.get_relative_1())->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
		}
	}
	if (unmarshaled.get_weight_2() != NULL)
	{
		if (8 > (unmarshaled.get_weight_2())->max_length)
		{
			IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_argument_exception("", "Type could not be marshaled because the length of an embedded array instance does not match the declared length in the layout."), NULL);
		}

		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(8); i++)
		{
			(marshaled.___weight_2)[i] = (unmarshaled.get_weight_2())->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
		}
	}
	marshaled.___absolute_3 = unmarshaled.get_absolute_3();
}
IL2CPP_EXTERN_C void DSP_PARAMETER_3DATTRIBUTES_MULTI_t2A4823DEE96E94AAFA950F4ADEB624339AF83EC9_marshal_com_back(const DSP_PARAMETER_3DATTRIBUTES_MULTI_t2A4823DEE96E94AAFA950F4ADEB624339AF83EC9_marshaled_com& marshaled, DSP_PARAMETER_3DATTRIBUTES_MULTI_t2A4823DEE96E94AAFA950F4ADEB624339AF83EC9& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_PARAMETER_3DATTRIBUTES_MULTI_t2A4823DEE96E94AAFA950F4ADEB624339AF83EC9_com_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t unmarshaled_numlisteners_temp_0 = 0;
	unmarshaled_numlisteners_temp_0 = marshaled.___numlisteners_0;
	unmarshaled.set_numlisteners_0(unmarshaled_numlisteners_temp_0);
	unmarshaled.set_relative_1(reinterpret_cast<ATTRIBUTES_3DU5BU5D_t5427259BEC6244F4081124FF88F25A12CBF725EF*>((ATTRIBUTES_3DU5BU5D_t5427259BEC6244F4081124FF88F25A12CBF725EF*)SZArrayNew(ATTRIBUTES_3DU5BU5D_t5427259BEC6244F4081124FF88F25A12CBF725EF_il2cpp_TypeInfo_var, 8)));
	for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(8); i++)
	{
		(unmarshaled.get_relative_1())->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (marshaled.___relative_1)[i]);
	}
	unmarshaled.set_weight_2(reinterpret_cast<SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*>((SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)SZArrayNew(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var, 8)));
	for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(8); i++)
	{
		(unmarshaled.get_weight_2())->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (marshaled.___weight_2)[i]);
	}
	ATTRIBUTES_3D_t29EC977F0EA9D7B3F4397AC1D43C067FC4334604  unmarshaled_absolute_temp_3;
	memset((&unmarshaled_absolute_temp_3), 0, sizeof(unmarshaled_absolute_temp_3));
	unmarshaled_absolute_temp_3 = marshaled.___absolute_3;
	unmarshaled.set_absolute_3(unmarshaled_absolute_temp_3);
}
// Conversion method for clean up from marshalling of: FMOD.DSP_PARAMETER_3DATTRIBUTES_MULTI
IL2CPP_EXTERN_C void DSP_PARAMETER_3DATTRIBUTES_MULTI_t2A4823DEE96E94AAFA950F4ADEB624339AF83EC9_marshal_com_cleanup(DSP_PARAMETER_3DATTRIBUTES_MULTI_t2A4823DEE96E94AAFA950F4ADEB624339AF83EC9_marshaled_com& marshaled)
{
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif


// Conversion methods for marshalling of: FMOD.DSP_PARAMETER_DESC
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06_marshal_pinvoke(const DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06& unmarshaled, DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06_marshaled_pinvoke& marshaled)
{
	marshaled.___type_0 = unmarshaled.get_type_0();
	if (unmarshaled.get_name_1() != NULL)
	{
		if (16 > (unmarshaled.get_name_1())->max_length)
		{
			IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_argument_exception("", "Type could not be marshaled because the length of an embedded array instance does not match the declared length in the layout."), NULL);
		}

		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(16); i++)
		{
			(marshaled.___name_1)[i] = (unmarshaled.get_name_1())->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
		}
	}
	if (unmarshaled.get_label_2() != NULL)
	{
		if (16 > (unmarshaled.get_label_2())->max_length)
		{
			IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_argument_exception("", "Type could not be marshaled because the length of an embedded array instance does not match the declared length in the layout."), NULL);
		}

		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(16); i++)
		{
			(marshaled.___label_2)[i] = (unmarshaled.get_label_2())->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
		}
	}
	marshaled.___description_3 = il2cpp_codegen_marshal_string(unmarshaled.get_description_3());
	DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshal_pinvoke(unmarshaled.get_desc_4(), marshaled.___desc_4);
}
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06_marshal_pinvoke_back(const DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06_marshaled_pinvoke& marshaled, DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06_pinvoke_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t unmarshaled_type_temp_0 = 0;
	unmarshaled_type_temp_0 = marshaled.___type_0;
	unmarshaled.set_type_0(unmarshaled_type_temp_0);
	unmarshaled.set_name_1(reinterpret_cast<ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821*>((ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821*)SZArrayNew(ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821_il2cpp_TypeInfo_var, 16)));
	for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(16); i++)
	{
		(unmarshaled.get_name_1())->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (marshaled.___name_1)[i]);
	}
	unmarshaled.set_label_2(reinterpret_cast<ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821*>((ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821*)SZArrayNew(ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821_il2cpp_TypeInfo_var, 16)));
	for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(16); i++)
	{
		(unmarshaled.get_label_2())->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (marshaled.___label_2)[i]);
	}
	unmarshaled.set_description_3(il2cpp_codegen_marshal_string_result(marshaled.___description_3));
	DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D  unmarshaled_desc_temp_4;
	memset((&unmarshaled_desc_temp_4), 0, sizeof(unmarshaled_desc_temp_4));
	DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshal_pinvoke_back(marshaled.___desc_4, unmarshaled_desc_temp_4);
	unmarshaled.set_desc_4(unmarshaled_desc_temp_4);
}
// Conversion method for clean up from marshalling of: FMOD.DSP_PARAMETER_DESC
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06_marshal_pinvoke_cleanup(DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06_marshaled_pinvoke& marshaled)
{
	il2cpp_codegen_marshal_free(marshaled.___description_3);
	marshaled.___description_3 = NULL;
	DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshal_pinvoke_cleanup(marshaled.___desc_4);
}


// Conversion methods for marshalling of: FMOD.DSP_PARAMETER_DESC
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06_marshal_com(const DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06& unmarshaled, DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06_marshaled_com& marshaled)
{
	marshaled.___type_0 = unmarshaled.get_type_0();
	if (unmarshaled.get_name_1() != NULL)
	{
		if (16 > (unmarshaled.get_name_1())->max_length)
		{
			IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_argument_exception("", "Type could not be marshaled because the length of an embedded array instance does not match the declared length in the layout."), NULL);
		}

		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(16); i++)
		{
			(marshaled.___name_1)[i] = (unmarshaled.get_name_1())->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
		}
	}
	if (unmarshaled.get_label_2() != NULL)
	{
		if (16 > (unmarshaled.get_label_2())->max_length)
		{
			IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_argument_exception("", "Type could not be marshaled because the length of an embedded array instance does not match the declared length in the layout."), NULL);
		}

		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(16); i++)
		{
			(marshaled.___label_2)[i] = (unmarshaled.get_label_2())->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
		}
	}
	marshaled.___description_3 = il2cpp_codegen_marshal_bstring(unmarshaled.get_description_3());
	DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshal_com(unmarshaled.get_desc_4(), marshaled.___desc_4);
}
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06_marshal_com_back(const DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06_marshaled_com& marshaled, DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06_com_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t unmarshaled_type_temp_0 = 0;
	unmarshaled_type_temp_0 = marshaled.___type_0;
	unmarshaled.set_type_0(unmarshaled_type_temp_0);
	unmarshaled.set_name_1(reinterpret_cast<ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821*>((ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821*)SZArrayNew(ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821_il2cpp_TypeInfo_var, 16)));
	for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(16); i++)
	{
		(unmarshaled.get_name_1())->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (marshaled.___name_1)[i]);
	}
	unmarshaled.set_label_2(reinterpret_cast<ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821*>((ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821*)SZArrayNew(ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821_il2cpp_TypeInfo_var, 16)));
	for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(16); i++)
	{
		(unmarshaled.get_label_2())->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (marshaled.___label_2)[i]);
	}
	unmarshaled.set_description_3(il2cpp_codegen_marshal_bstring_result(marshaled.___description_3));
	DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D  unmarshaled_desc_temp_4;
	memset((&unmarshaled_desc_temp_4), 0, sizeof(unmarshaled_desc_temp_4));
	DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshal_com_back(marshaled.___desc_4, unmarshaled_desc_temp_4);
	unmarshaled.set_desc_4(unmarshaled_desc_temp_4);
}
// Conversion method for clean up from marshalling of: FMOD.DSP_PARAMETER_DESC
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06_marshal_com_cleanup(DSP_PARAMETER_DESC_t3C0C3EE0DBD3236089D5A3983A12758E396A9A06_marshaled_com& marshaled)
{
	il2cpp_codegen_marshal_free_bstring(marshaled.___description_3);
	marshaled.___description_3 = NULL;
	DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshal_com_cleanup(marshaled.___desc_4);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: FMOD.DSP_PARAMETER_DESC_BOOL
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshal_pinvoke(const DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD& unmarshaled, DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshaled_pinvoke& marshaled)
{
	marshaled.___defaultval_0 = static_cast<int32_t>(unmarshaled.get_defaultval_0());
	marshaled.___valuenames_1 = unmarshaled.get_valuenames_1();
}
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshal_pinvoke_back(const DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshaled_pinvoke& marshaled, DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD& unmarshaled)
{
	bool unmarshaled_defaultval_temp_0 = false;
	unmarshaled_defaultval_temp_0 = static_cast<bool>(marshaled.___defaultval_0);
	unmarshaled.set_defaultval_0(unmarshaled_defaultval_temp_0);
	intptr_t unmarshaled_valuenames_temp_1;
	memset((&unmarshaled_valuenames_temp_1), 0, sizeof(unmarshaled_valuenames_temp_1));
	unmarshaled_valuenames_temp_1 = marshaled.___valuenames_1;
	unmarshaled.set_valuenames_1(unmarshaled_valuenames_temp_1);
}
// Conversion method for clean up from marshalling of: FMOD.DSP_PARAMETER_DESC_BOOL
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshal_pinvoke_cleanup(DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: FMOD.DSP_PARAMETER_DESC_BOOL
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshal_com(const DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD& unmarshaled, DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshaled_com& marshaled)
{
	marshaled.___defaultval_0 = static_cast<int32_t>(unmarshaled.get_defaultval_0());
	marshaled.___valuenames_1 = unmarshaled.get_valuenames_1();
}
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshal_com_back(const DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshaled_com& marshaled, DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD& unmarshaled)
{
	bool unmarshaled_defaultval_temp_0 = false;
	unmarshaled_defaultval_temp_0 = static_cast<bool>(marshaled.___defaultval_0);
	unmarshaled.set_defaultval_0(unmarshaled_defaultval_temp_0);
	intptr_t unmarshaled_valuenames_temp_1;
	memset((&unmarshaled_valuenames_temp_1), 0, sizeof(unmarshaled_valuenames_temp_1));
	unmarshaled_valuenames_temp_1 = marshaled.___valuenames_1;
	unmarshaled.set_valuenames_1(unmarshaled_valuenames_temp_1);
}
// Conversion method for clean up from marshalling of: FMOD.DSP_PARAMETER_DESC_BOOL
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshal_com_cleanup(DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshaled_com& marshaled)
{
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: FMOD.DSP_PARAMETER_DESC_INT
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshal_pinvoke(const DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA& unmarshaled, DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshaled_pinvoke& marshaled)
{
	marshaled.___min_0 = unmarshaled.get_min_0();
	marshaled.___max_1 = unmarshaled.get_max_1();
	marshaled.___defaultval_2 = unmarshaled.get_defaultval_2();
	marshaled.___goestoinf_3 = static_cast<int32_t>(unmarshaled.get_goestoinf_3());
	marshaled.___valuenames_4 = unmarshaled.get_valuenames_4();
}
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshal_pinvoke_back(const DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshaled_pinvoke& marshaled, DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA& unmarshaled)
{
	int32_t unmarshaled_min_temp_0 = 0;
	unmarshaled_min_temp_0 = marshaled.___min_0;
	unmarshaled.set_min_0(unmarshaled_min_temp_0);
	int32_t unmarshaled_max_temp_1 = 0;
	unmarshaled_max_temp_1 = marshaled.___max_1;
	unmarshaled.set_max_1(unmarshaled_max_temp_1);
	int32_t unmarshaled_defaultval_temp_2 = 0;
	unmarshaled_defaultval_temp_2 = marshaled.___defaultval_2;
	unmarshaled.set_defaultval_2(unmarshaled_defaultval_temp_2);
	bool unmarshaled_goestoinf_temp_3 = false;
	unmarshaled_goestoinf_temp_3 = static_cast<bool>(marshaled.___goestoinf_3);
	unmarshaled.set_goestoinf_3(unmarshaled_goestoinf_temp_3);
	intptr_t unmarshaled_valuenames_temp_4;
	memset((&unmarshaled_valuenames_temp_4), 0, sizeof(unmarshaled_valuenames_temp_4));
	unmarshaled_valuenames_temp_4 = marshaled.___valuenames_4;
	unmarshaled.set_valuenames_4(unmarshaled_valuenames_temp_4);
}
// Conversion method for clean up from marshalling of: FMOD.DSP_PARAMETER_DESC_INT
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshal_pinvoke_cleanup(DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: FMOD.DSP_PARAMETER_DESC_INT
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshal_com(const DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA& unmarshaled, DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshaled_com& marshaled)
{
	marshaled.___min_0 = unmarshaled.get_min_0();
	marshaled.___max_1 = unmarshaled.get_max_1();
	marshaled.___defaultval_2 = unmarshaled.get_defaultval_2();
	marshaled.___goestoinf_3 = static_cast<int32_t>(unmarshaled.get_goestoinf_3());
	marshaled.___valuenames_4 = unmarshaled.get_valuenames_4();
}
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshal_com_back(const DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshaled_com& marshaled, DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA& unmarshaled)
{
	int32_t unmarshaled_min_temp_0 = 0;
	unmarshaled_min_temp_0 = marshaled.___min_0;
	unmarshaled.set_min_0(unmarshaled_min_temp_0);
	int32_t unmarshaled_max_temp_1 = 0;
	unmarshaled_max_temp_1 = marshaled.___max_1;
	unmarshaled.set_max_1(unmarshaled_max_temp_1);
	int32_t unmarshaled_defaultval_temp_2 = 0;
	unmarshaled_defaultval_temp_2 = marshaled.___defaultval_2;
	unmarshaled.set_defaultval_2(unmarshaled_defaultval_temp_2);
	bool unmarshaled_goestoinf_temp_3 = false;
	unmarshaled_goestoinf_temp_3 = static_cast<bool>(marshaled.___goestoinf_3);
	unmarshaled.set_goestoinf_3(unmarshaled_goestoinf_temp_3);
	intptr_t unmarshaled_valuenames_temp_4;
	memset((&unmarshaled_valuenames_temp_4), 0, sizeof(unmarshaled_valuenames_temp_4));
	unmarshaled_valuenames_temp_4 = marshaled.___valuenames_4;
	unmarshaled.set_valuenames_4(unmarshaled_valuenames_temp_4);
}
// Conversion method for clean up from marshalling of: FMOD.DSP_PARAMETER_DESC_INT
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshal_com_cleanup(DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshaled_com& marshaled)
{
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif




// Conversion methods for marshalling of: FMOD.DSP_PARAMETER_DESC_UNION
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshal_pinvoke(const DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D& unmarshaled, DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshaled_pinvoke& marshaled)
{
	marshaled.___floatdesc_0 = unmarshaled.get_floatdesc_0();
	DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshal_pinvoke(unmarshaled.get_intdesc_1(), marshaled.___intdesc_1);
	DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshal_pinvoke(unmarshaled.get_booldesc_2(), marshaled.___booldesc_2);
	marshaled.___datadesc_3 = unmarshaled.get_datadesc_3();
}
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshal_pinvoke_back(const DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshaled_pinvoke& marshaled, DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D& unmarshaled)
{
	DSP_PARAMETER_DESC_FLOAT_t4AA0EBE0D190B95B21DEAB6D105A0B6A74BEB747  unmarshaled_floatdesc_temp_0;
	memset((&unmarshaled_floatdesc_temp_0), 0, sizeof(unmarshaled_floatdesc_temp_0));
	unmarshaled_floatdesc_temp_0 = marshaled.___floatdesc_0;
	unmarshaled.set_floatdesc_0(unmarshaled_floatdesc_temp_0);
	DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA  unmarshaled_intdesc_temp_1;
	memset((&unmarshaled_intdesc_temp_1), 0, sizeof(unmarshaled_intdesc_temp_1));
	DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshal_pinvoke_back(marshaled.___intdesc_1, unmarshaled_intdesc_temp_1);
	unmarshaled.set_intdesc_1(unmarshaled_intdesc_temp_1);
	DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD  unmarshaled_booldesc_temp_2;
	memset((&unmarshaled_booldesc_temp_2), 0, sizeof(unmarshaled_booldesc_temp_2));
	DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshal_pinvoke_back(marshaled.___booldesc_2, unmarshaled_booldesc_temp_2);
	unmarshaled.set_booldesc_2(unmarshaled_booldesc_temp_2);
	DSP_PARAMETER_DESC_DATA_t89D149EB4BE38580C0EAE075A7496296F0BC4DA9  unmarshaled_datadesc_temp_3;
	memset((&unmarshaled_datadesc_temp_3), 0, sizeof(unmarshaled_datadesc_temp_3));
	unmarshaled_datadesc_temp_3 = marshaled.___datadesc_3;
	unmarshaled.set_datadesc_3(unmarshaled_datadesc_temp_3);
}
// Conversion method for clean up from marshalling of: FMOD.DSP_PARAMETER_DESC_UNION
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshal_pinvoke_cleanup(DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshaled_pinvoke& marshaled)
{
	DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshal_pinvoke_cleanup(marshaled.___intdesc_1);
	DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshal_pinvoke_cleanup(marshaled.___booldesc_2);
}




// Conversion methods for marshalling of: FMOD.DSP_PARAMETER_DESC_UNION
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshal_com(const DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D& unmarshaled, DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshaled_com& marshaled)
{
	marshaled.___floatdesc_0 = unmarshaled.get_floatdesc_0();
	DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshal_com(unmarshaled.get_intdesc_1(), marshaled.___intdesc_1);
	DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshal_com(unmarshaled.get_booldesc_2(), marshaled.___booldesc_2);
	marshaled.___datadesc_3 = unmarshaled.get_datadesc_3();
}
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshal_com_back(const DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshaled_com& marshaled, DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D& unmarshaled)
{
	DSP_PARAMETER_DESC_FLOAT_t4AA0EBE0D190B95B21DEAB6D105A0B6A74BEB747  unmarshaled_floatdesc_temp_0;
	memset((&unmarshaled_floatdesc_temp_0), 0, sizeof(unmarshaled_floatdesc_temp_0));
	unmarshaled_floatdesc_temp_0 = marshaled.___floatdesc_0;
	unmarshaled.set_floatdesc_0(unmarshaled_floatdesc_temp_0);
	DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA  unmarshaled_intdesc_temp_1;
	memset((&unmarshaled_intdesc_temp_1), 0, sizeof(unmarshaled_intdesc_temp_1));
	DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshal_com_back(marshaled.___intdesc_1, unmarshaled_intdesc_temp_1);
	unmarshaled.set_intdesc_1(unmarshaled_intdesc_temp_1);
	DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD  unmarshaled_booldesc_temp_2;
	memset((&unmarshaled_booldesc_temp_2), 0, sizeof(unmarshaled_booldesc_temp_2));
	DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshal_com_back(marshaled.___booldesc_2, unmarshaled_booldesc_temp_2);
	unmarshaled.set_booldesc_2(unmarshaled_booldesc_temp_2);
	DSP_PARAMETER_DESC_DATA_t89D149EB4BE38580C0EAE075A7496296F0BC4DA9  unmarshaled_datadesc_temp_3;
	memset((&unmarshaled_datadesc_temp_3), 0, sizeof(unmarshaled_datadesc_temp_3));
	unmarshaled_datadesc_temp_3 = marshaled.___datadesc_3;
	unmarshaled.set_datadesc_3(unmarshaled_datadesc_temp_3);
}
// Conversion method for clean up from marshalling of: FMOD.DSP_PARAMETER_DESC_UNION
IL2CPP_EXTERN_C void DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshal_com_cleanup(DSP_PARAMETER_DESC_UNION_t80D00A16840FB409558DE3298385EE0A90EED88D_marshaled_com& marshaled)
{
	DSP_PARAMETER_DESC_INT_tE621580C4D46F5AB77760E970020FA2DC71907DA_marshal_com_cleanup(marshaled.___intdesc_1);
	DSP_PARAMETER_DESC_BOOL_t36D254480151B4FD52CC1B1AF486AE33CB8054DD_marshal_com_cleanup(marshaled.___booldesc_2);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: FMOD.DSP_PARAMETER_FFT
IL2CPP_EXTERN_C void DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A_marshal_pinvoke(const DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A& unmarshaled, DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A_marshaled_pinvoke& marshaled)
{
	marshaled.___length_0 = unmarshaled.get_length_0();
	marshaled.___numchannels_1 = unmarshaled.get_numchannels_1();
	if (unmarshaled.get_spectrum_internal_2() != NULL)
	{
		if (32 > (unmarshaled.get_spectrum_internal_2())->max_length)
		{
			IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_argument_exception("", "Type could not be marshaled because the length of an embedded array instance does not match the declared length in the layout."), NULL);
		}

		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(32); i++)
		{
			(marshaled.___spectrum_internal_2)[i] = (unmarshaled.get_spectrum_internal_2())->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
		}
	}
}
IL2CPP_EXTERN_C void DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A_marshal_pinvoke_back(const DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A_marshaled_pinvoke& marshaled, DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A_pinvoke_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t unmarshaled_length_temp_0 = 0;
	unmarshaled_length_temp_0 = marshaled.___length_0;
	unmarshaled.set_length_0(unmarshaled_length_temp_0);
	int32_t unmarshaled_numchannels_temp_1 = 0;
	unmarshaled_numchannels_temp_1 = marshaled.___numchannels_1;
	unmarshaled.set_numchannels_1(unmarshaled_numchannels_temp_1);
	unmarshaled.set_spectrum_internal_2(reinterpret_cast<IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD*>((IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD*)SZArrayNew(IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD_il2cpp_TypeInfo_var, 32)));
	for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(32); i++)
	{
		(unmarshaled.get_spectrum_internal_2())->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (marshaled.___spectrum_internal_2)[i]);
	}
}
// Conversion method for clean up from marshalling of: FMOD.DSP_PARAMETER_FFT
IL2CPP_EXTERN_C void DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A_marshal_pinvoke_cleanup(DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: FMOD.DSP_PARAMETER_FFT
IL2CPP_EXTERN_C void DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A_marshal_com(const DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A& unmarshaled, DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A_marshaled_com& marshaled)
{
	marshaled.___length_0 = unmarshaled.get_length_0();
	marshaled.___numchannels_1 = unmarshaled.get_numchannels_1();
	if (unmarshaled.get_spectrum_internal_2() != NULL)
	{
		if (32 > (unmarshaled.get_spectrum_internal_2())->max_length)
		{
			IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_argument_exception("", "Type could not be marshaled because the length of an embedded array instance does not match the declared length in the layout."), NULL);
		}

		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(32); i++)
		{
			(marshaled.___spectrum_internal_2)[i] = (unmarshaled.get_spectrum_internal_2())->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
		}
	}
}
IL2CPP_EXTERN_C void DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A_marshal_com_back(const DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A_marshaled_com& marshaled, DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A_com_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t unmarshaled_length_temp_0 = 0;
	unmarshaled_length_temp_0 = marshaled.___length_0;
	unmarshaled.set_length_0(unmarshaled_length_temp_0);
	int32_t unmarshaled_numchannels_temp_1 = 0;
	unmarshaled_numchannels_temp_1 = marshaled.___numchannels_1;
	unmarshaled.set_numchannels_1(unmarshaled_numchannels_temp_1);
	unmarshaled.set_spectrum_internal_2(reinterpret_cast<IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD*>((IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD*)SZArrayNew(IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD_il2cpp_TypeInfo_var, 32)));
	for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(32); i++)
	{
		(unmarshaled.get_spectrum_internal_2())->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (marshaled.___spectrum_internal_2)[i]);
	}
}
// Conversion method for clean up from marshalling of: FMOD.DSP_PARAMETER_FFT
IL2CPP_EXTERN_C void DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A_marshal_com_cleanup(DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A_marshaled_com& marshaled)
{
}
// System.Single[][] FMOD.DSP_PARAMETER_FFT::get_spectrum()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5DU5BU5D_tC2E25498616DDBEA3B03D43855DEBC928046392E* DSP_PARAMETER_FFT_get_spectrum_m70A9088ECAB92315C280AF324099F262B60AAE85 (DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_PARAMETER_FFT_get_spectrum_m70A9088ECAB92315C280AF324099F262B60AAE85_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	SingleU5BU5DU5BU5D_tC2E25498616DDBEA3B03D43855DEBC928046392E* V_0 = NULL;
	int32_t V_1 = 0;
	{
		// var buffer = new float[numchannels][];
		int32_t L_0 = __this->get_numchannels_1();
		SingleU5BU5DU5BU5D_tC2E25498616DDBEA3B03D43855DEBC928046392E* L_1 = (SingleU5BU5DU5BU5D_tC2E25498616DDBEA3B03D43855DEBC928046392E*)(SingleU5BU5DU5BU5D_tC2E25498616DDBEA3B03D43855DEBC928046392E*)SZArrayNew(SingleU5BU5DU5BU5D_tC2E25498616DDBEA3B03D43855DEBC928046392E_il2cpp_TypeInfo_var, (uint32_t)L_0);
		V_0 = L_1;
		// for (int i = 0; i < numchannels; ++i)
		V_1 = 0;
		goto IL_0039;
	}

IL_0010:
	{
		// buffer[i] = new float[length];
		SingleU5BU5DU5BU5D_tC2E25498616DDBEA3B03D43855DEBC928046392E* L_2 = V_0;
		int32_t L_3 = V_1;
		int32_t L_4 = __this->get_length_0();
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_5 = (SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)SZArrayNew(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var, (uint32_t)L_4);
		NullCheck(L_2);
		ArrayElementTypeCheck (L_2, L_5);
		(L_2)->SetAt(static_cast<il2cpp_array_size_t>(L_3), (SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)L_5);
		// Marshal.Copy(spectrum_internal[i], buffer[i], 0, length);
		IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* L_6 = __this->get_spectrum_internal_2();
		int32_t L_7 = V_1;
		NullCheck(L_6);
		int32_t L_8 = L_7;
		intptr_t L_9 = (L_6)->GetAt(static_cast<il2cpp_array_size_t>(L_8));
		SingleU5BU5DU5BU5D_tC2E25498616DDBEA3B03D43855DEBC928046392E* L_10 = V_0;
		int32_t L_11 = V_1;
		NullCheck(L_10);
		int32_t L_12 = L_11;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_13 = (SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)(L_10)->GetAt(static_cast<il2cpp_array_size_t>(L_12));
		int32_t L_14 = __this->get_length_0();
		IL2CPP_RUNTIME_CLASS_INIT(Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var);
		Marshal_Copy_m21579DD470D4200BA5193A2CEF1BDB000C2E3256((intptr_t)L_9, L_13, 0, L_14, /*hidden argument*/NULL);
		// for (int i = 0; i < numchannels; ++i)
		int32_t L_15 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_15, (int32_t)1));
	}

IL_0039:
	{
		// for (int i = 0; i < numchannels; ++i)
		int32_t L_16 = V_1;
		int32_t L_17 = __this->get_numchannels_1();
		if ((((int32_t)L_16) < ((int32_t)L_17)))
		{
			goto IL_0010;
		}
	}
	{
		// return buffer;
		SingleU5BU5DU5BU5D_tC2E25498616DDBEA3B03D43855DEBC928046392E* L_18 = V_0;
		return L_18;
	}
}
IL2CPP_EXTERN_C  SingleU5BU5DU5BU5D_tC2E25498616DDBEA3B03D43855DEBC928046392E* DSP_PARAMETER_FFT_get_spectrum_m70A9088ECAB92315C280AF324099F262B60AAE85_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A * _thisAdjusted = reinterpret_cast<DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A *>(__this + _offset);
	return DSP_PARAMETER_FFT_get_spectrum_m70A9088ECAB92315C280AF324099F262B60AAE85(_thisAdjusted, method);
}
// System.Void FMOD.DSP_PARAMETER_FFT::getSpectrum(System.Single[][]&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_PARAMETER_FFT_getSpectrum_m75C1E931F14E6CCC06A3510A4C97F67AA0B45F53 (DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A * __this, SingleU5BU5DU5BU5D_tC2E25498616DDBEA3B03D43855DEBC928046392E** ___buffer0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_PARAMETER_FFT_getSpectrum_m75C1E931F14E6CCC06A3510A4C97F67AA0B45F53_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	{
		// int bufferLength = Math.Min(buffer.Length, numchannels);
		SingleU5BU5DU5BU5D_tC2E25498616DDBEA3B03D43855DEBC928046392E** L_0 = ___buffer0;
		SingleU5BU5DU5BU5D_tC2E25498616DDBEA3B03D43855DEBC928046392E* L_1 = *((SingleU5BU5DU5BU5D_tC2E25498616DDBEA3B03D43855DEBC928046392E**)L_0);
		NullCheck(L_1);
		int32_t L_2 = __this->get_numchannels_1();
		IL2CPP_RUNTIME_CLASS_INIT(Math_tFB388E53C7FDC6FCCF9A19ABF5A4E521FBD52E19_il2cpp_TypeInfo_var);
		int32_t L_3 = Math_Min_mC950438198519FB2B0260FCB91220847EE4BB525((((int32_t)((int32_t)(((RuntimeArray*)L_1)->max_length)))), L_2, /*hidden argument*/NULL);
		V_0 = L_3;
		// for (int i = 0; i < bufferLength; ++i)
		V_1 = 0;
		goto IL_0027;
	}

IL_0014:
	{
		// getSpectrum(i, ref buffer[i]);
		int32_t L_4 = V_1;
		SingleU5BU5DU5BU5D_tC2E25498616DDBEA3B03D43855DEBC928046392E** L_5 = ___buffer0;
		SingleU5BU5DU5BU5D_tC2E25498616DDBEA3B03D43855DEBC928046392E* L_6 = *((SingleU5BU5DU5BU5D_tC2E25498616DDBEA3B03D43855DEBC928046392E**)L_5);
		int32_t L_7 = V_1;
		NullCheck(L_6);
		DSP_PARAMETER_FFT_getSpectrum_m5E564B8921A54BFBCA697CB2D392BA9CF30AA22A((DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A *)__this, L_4, (SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5**)((L_6)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_7))), /*hidden argument*/NULL);
		// for (int i = 0; i < bufferLength; ++i)
		int32_t L_8 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_8, (int32_t)1));
	}

IL_0027:
	{
		// for (int i = 0; i < bufferLength; ++i)
		int32_t L_9 = V_1;
		int32_t L_10 = V_0;
		if ((((int32_t)L_9) < ((int32_t)L_10)))
		{
			goto IL_0014;
		}
	}
	{
		// }
		return;
	}
}
IL2CPP_EXTERN_C  void DSP_PARAMETER_FFT_getSpectrum_m75C1E931F14E6CCC06A3510A4C97F67AA0B45F53_AdjustorThunk (RuntimeObject * __this, SingleU5BU5DU5BU5D_tC2E25498616DDBEA3B03D43855DEBC928046392E** ___buffer0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A * _thisAdjusted = reinterpret_cast<DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A *>(__this + _offset);
	DSP_PARAMETER_FFT_getSpectrum_m75C1E931F14E6CCC06A3510A4C97F67AA0B45F53(_thisAdjusted, ___buffer0, method);
}
// System.Void FMOD.DSP_PARAMETER_FFT::getSpectrum(System.Int32,System.Single[]&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_PARAMETER_FFT_getSpectrum_m5E564B8921A54BFBCA697CB2D392BA9CF30AA22A (DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A * __this, int32_t ___channel0, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5** ___buffer1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_PARAMETER_FFT_getSpectrum_m5E564B8921A54BFBCA697CB2D392BA9CF30AA22A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	{
		// int bufferLength = Math.Min(buffer.Length, length);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5** L_0 = ___buffer1;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_1 = *((SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5**)L_0);
		NullCheck(L_1);
		int32_t L_2 = __this->get_length_0();
		IL2CPP_RUNTIME_CLASS_INIT(Math_tFB388E53C7FDC6FCCF9A19ABF5A4E521FBD52E19_il2cpp_TypeInfo_var);
		int32_t L_3 = Math_Min_mC950438198519FB2B0260FCB91220847EE4BB525((((int32_t)((int32_t)(((RuntimeArray*)L_1)->max_length)))), L_2, /*hidden argument*/NULL);
		V_0 = L_3;
		// Marshal.Copy(spectrum_internal[channel], buffer, 0, bufferLength);
		IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* L_4 = __this->get_spectrum_internal_2();
		int32_t L_5 = ___channel0;
		NullCheck(L_4);
		int32_t L_6 = L_5;
		intptr_t L_7 = (L_4)->GetAt(static_cast<il2cpp_array_size_t>(L_6));
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5** L_8 = ___buffer1;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_9 = *((SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5**)L_8);
		int32_t L_10 = V_0;
		IL2CPP_RUNTIME_CLASS_INIT(Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var);
		Marshal_Copy_m21579DD470D4200BA5193A2CEF1BDB000C2E3256((intptr_t)L_7, L_9, 0, L_10, /*hidden argument*/NULL);
		// }
		return;
	}
}
IL2CPP_EXTERN_C  void DSP_PARAMETER_FFT_getSpectrum_m5E564B8921A54BFBCA697CB2D392BA9CF30AA22A_AdjustorThunk (RuntimeObject * __this, int32_t ___channel0, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5** ___buffer1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A * _thisAdjusted = reinterpret_cast<DSP_PARAMETER_FFT_tB88F5B9E8AD7D7732B1ABD8C237B0B2F126F453A *>(__this + _offset);
	DSP_PARAMETER_FFT_getSpectrum_m5E564B8921A54BFBCA697CB2D392BA9CF30AA22A(_thisAdjusted, ___channel0, ___buffer1, method);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_PROCESS_CALLBACK_tDBD865DB753B70FC9D7366E33380253692DC88CB (DSP_PROCESS_CALLBACK_tDBD865DB753B70FC9D7366E33380253692DC88CB * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, uint32_t ___length1, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291 * ___inbufferarray2, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291 * ___outbufferarray3, bool ___inputsidle4, int32_t ___op5, const RuntimeMethod* method)
{




	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint32_t, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshaled_pinvoke*, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshaled_pinvoke*, int32_t, int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___inbufferarray2' to native representation
	DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshaled_pinvoke* ____inbufferarray2_marshaled = NULL;
	DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshaled_pinvoke ____inbufferarray2_marshaled_dereferenced = {};
	DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshal_pinvoke(*___inbufferarray2, ____inbufferarray2_marshaled_dereferenced);
	____inbufferarray2_marshaled = &____inbufferarray2_marshaled_dereferenced;

	// Marshaling of parameter '___outbufferarray3' to native representation
	DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshaled_pinvoke* ____outbufferarray3_marshaled = NULL;
	DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshaled_pinvoke ____outbufferarray3_marshaled_dereferenced = {};
	DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshal_pinvoke(*___outbufferarray3, ____outbufferarray3_marshaled_dereferenced);
	____outbufferarray3_marshaled = &____outbufferarray3_marshaled_dereferenced;

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0, ___length1, ____inbufferarray2_marshaled, ____outbufferarray3_marshaled, static_cast<int32_t>(___inputsidle4), ___op5);

	// Marshaling of parameter '___inbufferarray2' back from native representation
	DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291  _____inbufferarray2_marshaled_unmarshaled_dereferenced;
	memset((&_____inbufferarray2_marshaled_unmarshaled_dereferenced), 0, sizeof(_____inbufferarray2_marshaled_unmarshaled_dereferenced));
	DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshal_pinvoke_back(*____inbufferarray2_marshaled, _____inbufferarray2_marshaled_unmarshaled_dereferenced);
	DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshal_pinvoke_cleanup(*____inbufferarray2_marshaled);
	*___inbufferarray2 = _____inbufferarray2_marshaled_unmarshaled_dereferenced;
	Il2CppCodeGenWriteBarrier((void**)&((___inbufferarray2)->___buffernumchannels_1), (void*)NULL);
	#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
	Il2CppCodeGenWriteBarrier((void**)&((___inbufferarray2)->___bufferchannelmask_2), (void*)NULL);
	#endif
	#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
	Il2CppCodeGenWriteBarrier((void**)&((___inbufferarray2)->___buffers_3), (void*)NULL);
	#endif

	// Marshaling of parameter '___outbufferarray3' back from native representation
	DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291  _____outbufferarray3_marshaled_unmarshaled_dereferenced;
	memset((&_____outbufferarray3_marshaled_unmarshaled_dereferenced), 0, sizeof(_____outbufferarray3_marshaled_unmarshaled_dereferenced));
	DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshal_pinvoke_back(*____outbufferarray3_marshaled, _____outbufferarray3_marshaled_unmarshaled_dereferenced);
	DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_marshal_pinvoke_cleanup(*____outbufferarray3_marshaled);
	*___outbufferarray3 = _____outbufferarray3_marshaled_unmarshaled_dereferenced;
	Il2CppCodeGenWriteBarrier((void**)&((___outbufferarray3)->___buffernumchannels_1), (void*)NULL);
	#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
	Il2CppCodeGenWriteBarrier((void**)&((___outbufferarray3)->___bufferchannelmask_2), (void*)NULL);
	#endif
	#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
	Il2CppCodeGenWriteBarrier((void**)&((___outbufferarray3)->___buffers_3), (void*)NULL);
	#endif

	return returnValue;
}
// System.Void FMOD.DSP_PROCESS_CALLBACK::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_PROCESS_CALLBACK__ctor_m2820BD8CCBB360326D0B3E62CA157E1070F208F5 (DSP_PROCESS_CALLBACK_tDBD865DB753B70FC9D7366E33380253692DC88CB * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_PROCESS_CALLBACK::Invoke(FMOD.DSP_STATE&,System.UInt32,FMOD.DSP_BUFFER_ARRAY&,FMOD.DSP_BUFFER_ARRAY&,System.Boolean,FMOD.DSP_PROCESS_OPERATION)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_PROCESS_CALLBACK_Invoke_m20B4FC48F855D219C15C1BBAAD899C71F373A799 (DSP_PROCESS_CALLBACK_tDBD865DB753B70FC9D7366E33380253692DC88CB * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, uint32_t ___length1, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291 * ___inbufferarray2, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291 * ___outbufferarray3, bool ___inputsidle4, int32_t ___op5, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 6)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint32_t, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291 *, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291 *, bool, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, ___length1, ___inbufferarray2, ___outbufferarray3, ___inputsidle4, ___op5, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint32_t, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291 *, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291 *, bool, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___length1, ___inbufferarray2, ___outbufferarray3, ___inputsidle4, ___op5, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker6< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint32_t, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291 *, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291 *, bool, int32_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___length1, ___inbufferarray2, ___outbufferarray3, ___inputsidle4, ___op5);
					else
						result = GenericVirtFuncInvoker6< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint32_t, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291 *, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291 *, bool, int32_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___length1, ___inbufferarray2, ___outbufferarray3, ___inputsidle4, ___op5);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker6< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint32_t, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291 *, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291 *, bool, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0, ___length1, ___inbufferarray2, ___outbufferarray3, ___inputsidle4, ___op5);
					else
						result = VirtFuncInvoker6< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint32_t, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291 *, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291 *, bool, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0, ___length1, ___inbufferarray2, ___outbufferarray3, ___inputsidle4, ___op5);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, uint32_t, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291 *, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291 *, bool, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___length1, ___inbufferarray2, ___outbufferarray3, ___inputsidle4, ___op5, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, uint32_t, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291 *, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291 *, bool, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___length1, ___inbufferarray2, ___outbufferarray3, ___inputsidle4, ___op5, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint32_t, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291 *, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291 *, bool, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___length1, ___inbufferarray2, ___outbufferarray3, ___inputsidle4, ___op5, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_PROCESS_CALLBACK::BeginInvoke(FMOD.DSP_STATE&,System.UInt32,FMOD.DSP_BUFFER_ARRAY&,FMOD.DSP_BUFFER_ARRAY&,System.Boolean,FMOD.DSP_PROCESS_OPERATION,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_PROCESS_CALLBACK_BeginInvoke_m2821E91594696831ECA43E505513C15E8398C1A4 (DSP_PROCESS_CALLBACK_tDBD865DB753B70FC9D7366E33380253692DC88CB * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, uint32_t ___length1, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291 * ___inbufferarray2, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291 * ___outbufferarray3, bool ___inputsidle4, int32_t ___op5, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback6, RuntimeObject * ___object7, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_PROCESS_CALLBACK_BeginInvoke_m2821E91594696831ECA43E505513C15E8398C1A4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[7] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___length1);
	__d_args[2] = Box(DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_il2cpp_TypeInfo_var, &*___inbufferarray2);
	__d_args[3] = Box(DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291_il2cpp_TypeInfo_var, &*___outbufferarray3);
	__d_args[4] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___inputsidle4);
	__d_args[5] = Box(DSP_PROCESS_OPERATION_t6B32805470F5CAAC59B13EAF05AA73D4342B0C43_il2cpp_TypeInfo_var, &___op5);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback6, (RuntimeObject*)___object7);
}
// FMOD.RESULT FMOD.DSP_PROCESS_CALLBACK::EndInvoke(FMOD.DSP_STATE&,FMOD.DSP_BUFFER_ARRAY&,FMOD.DSP_BUFFER_ARRAY&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_PROCESS_CALLBACK_EndInvoke_m6F8DE02BC44886F74CCE1C1F8A6573157E740EC5 (DSP_PROCESS_CALLBACK_tDBD865DB753B70FC9D7366E33380253692DC88CB * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291 * ___inbufferarray1, DSP_BUFFER_ARRAY_t98F60F4E4602992DD321E7DD070E466B2C2EB291 * ___outbufferarray2, RuntimeObject* ___result3, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	___inbufferarray1,
	___outbufferarray2,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result3, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_READCALLBACK_tA3F0E8A151B3385E3BFDB117670F3572746ECE6B (DSP_READCALLBACK_tA3F0E8A151B3385E3BFDB117670F3572746ECE6B * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, intptr_t ___inbuffer1, intptr_t ___outbuffer2, uint32_t ___length3, int32_t ___inchannels4, int32_t* ___outchannels5, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, intptr_t, intptr_t, uint32_t, int32_t, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0, ___inbuffer1, ___outbuffer2, ___length3, ___inchannels4, ___outchannels5);

	return returnValue;
}
// System.Void FMOD.DSP_READCALLBACK::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_READCALLBACK__ctor_mB56E79AAE70586159ECEB8455AB546EA5CD71159 (DSP_READCALLBACK_tA3F0E8A151B3385E3BFDB117670F3572746ECE6B * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_READCALLBACK::Invoke(FMOD.DSP_STATE&,System.IntPtr,System.IntPtr,System.UInt32,System.Int32,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_READCALLBACK_Invoke_mD1F04E44139A9EA34E4690FF79F8E7ECB338551C (DSP_READCALLBACK_tA3F0E8A151B3385E3BFDB117670F3572746ECE6B * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, intptr_t ___inbuffer1, intptr_t ___outbuffer2, uint32_t ___length3, int32_t ___inchannels4, int32_t* ___outchannels5, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 6)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, intptr_t, intptr_t, uint32_t, int32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, ___inbuffer1, ___outbuffer2, ___length3, ___inchannels4, ___outchannels5, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, intptr_t, intptr_t, uint32_t, int32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___inbuffer1, ___outbuffer2, ___length3, ___inchannels4, ___outchannels5, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker6< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, intptr_t, intptr_t, uint32_t, int32_t, int32_t* >::Invoke(targetMethod, targetThis, ___dsp_state0, ___inbuffer1, ___outbuffer2, ___length3, ___inchannels4, ___outchannels5);
					else
						result = GenericVirtFuncInvoker6< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, intptr_t, intptr_t, uint32_t, int32_t, int32_t* >::Invoke(targetMethod, targetThis, ___dsp_state0, ___inbuffer1, ___outbuffer2, ___length3, ___inchannels4, ___outchannels5);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker6< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, intptr_t, intptr_t, uint32_t, int32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0, ___inbuffer1, ___outbuffer2, ___length3, ___inchannels4, ___outchannels5);
					else
						result = VirtFuncInvoker6< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, intptr_t, intptr_t, uint32_t, int32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0, ___inbuffer1, ___outbuffer2, ___length3, ___inchannels4, ___outchannels5);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, intptr_t, intptr_t, uint32_t, int32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___inbuffer1, ___outbuffer2, ___length3, ___inchannels4, ___outchannels5, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, intptr_t, intptr_t, uint32_t, int32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___inbuffer1, ___outbuffer2, ___length3, ___inchannels4, ___outchannels5, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, intptr_t, intptr_t, uint32_t, int32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___inbuffer1, ___outbuffer2, ___length3, ___inchannels4, ___outchannels5, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_READCALLBACK::BeginInvoke(FMOD.DSP_STATE&,System.IntPtr,System.IntPtr,System.UInt32,System.Int32,System.Int32&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_READCALLBACK_BeginInvoke_mB4289A24A584B8F6BF1ED9707CF724F30A9D7BF5 (DSP_READCALLBACK_tA3F0E8A151B3385E3BFDB117670F3572746ECE6B * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, intptr_t ___inbuffer1, intptr_t ___outbuffer2, uint32_t ___length3, int32_t ___inchannels4, int32_t* ___outchannels5, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback6, RuntimeObject * ___object7, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_READCALLBACK_BeginInvoke_mB4289A24A584B8F6BF1ED9707CF724F30A9D7BF5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[7] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	__d_args[1] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___inbuffer1);
	__d_args[2] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___outbuffer2);
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___length3);
	__d_args[4] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___inchannels4);
	__d_args[5] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &*___outchannels5);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback6, (RuntimeObject*)___object7);
}
// FMOD.RESULT FMOD.DSP_READCALLBACK::EndInvoke(FMOD.DSP_STATE&,System.Int32&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_READCALLBACK_EndInvoke_m0CD555CFF96F69029D325F5F58D0C44BE4B5FB2B (DSP_READCALLBACK_tA3F0E8A151B3385E3BFDB117670F3572746ECE6B * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t* ___outchannels1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	___outchannels1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  intptr_t DelegatePInvokeWrapper_DSP_REALLOC_FUNC_t1F4302C05A784F080C70909A2A758DFBAFC3F4E0 (DSP_REALLOC_FUNC_t1F4302C05A784F080C70909A2A758DFBAFC3F4E0 * __this, intptr_t ___ptr0, uint32_t ___size1, uint32_t ___type2, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  ___sourcestr3, const RuntimeMethod* method)
{
	typedef intptr_t (DEFAULT_CALL *PInvokeFunc)(intptr_t, uint32_t, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 );
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0, ___size1, ___type2, ___sourcestr3);

	return returnValue;
}
// System.Void FMOD.DSP_REALLOC_FUNC::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_REALLOC_FUNC__ctor_mBDCA29634270A94846F963218BF0F3E2D4B18D68 (DSP_REALLOC_FUNC_t1F4302C05A784F080C70909A2A758DFBAFC3F4E0 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.IntPtr FMOD.DSP_REALLOC_FUNC::Invoke(System.IntPtr,System.UInt32,FMOD.MEMORY_TYPE,FMOD.StringWrapper)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t DSP_REALLOC_FUNC_Invoke_m9DBE671702C2C79E79DBB961C1B28D1D95830D6A (DSP_REALLOC_FUNC_t1F4302C05A784F080C70909A2A758DFBAFC3F4E0 * __this, intptr_t ___ptr0, uint32_t ___size1, uint32_t ___type2, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  ___sourcestr3, const RuntimeMethod* method)
{
	intptr_t result;
	memset((&result), 0, sizeof(result));
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef intptr_t (*FunctionPointerType) (intptr_t, uint32_t, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ptr0, ___size1, ___type2, ___sourcestr3, targetMethod);
			}
			else
			{
				// closed
				typedef intptr_t (*FunctionPointerType) (void*, intptr_t, uint32_t, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ptr0, ___size1, ___type2, ___sourcestr3, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker4< intptr_t, intptr_t, uint32_t, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  >::Invoke(targetMethod, targetThis, ___ptr0, ___size1, ___type2, ___sourcestr3);
					else
						result = GenericVirtFuncInvoker4< intptr_t, intptr_t, uint32_t, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  >::Invoke(targetMethod, targetThis, ___ptr0, ___size1, ___type2, ___sourcestr3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker4< intptr_t, intptr_t, uint32_t, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ptr0, ___size1, ___type2, ___sourcestr3);
					else
						result = VirtFuncInvoker4< intptr_t, intptr_t, uint32_t, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ptr0, ___size1, ___type2, ___sourcestr3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef intptr_t (*FunctionPointerType) (RuntimeObject*, uint32_t, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ptr0) - 1), ___size1, ___type2, ___sourcestr3, targetMethod);
				}
				typedef intptr_t (*FunctionPointerType) (void*, intptr_t, uint32_t, uint32_t, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9 , const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ptr0, ___size1, ___type2, ___sourcestr3, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_REALLOC_FUNC::BeginInvoke(System.IntPtr,System.UInt32,FMOD.MEMORY_TYPE,FMOD.StringWrapper,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_REALLOC_FUNC_BeginInvoke_m29FF6BD8EFC9515BAD89EEA4070A49688DCF2E61 (DSP_REALLOC_FUNC_t1F4302C05A784F080C70909A2A758DFBAFC3F4E0 * __this, intptr_t ___ptr0, uint32_t ___size1, uint32_t ___type2, StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9  ___sourcestr3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_REALLOC_FUNC_BeginInvoke_m29FF6BD8EFC9515BAD89EEA4070A49688DCF2E61_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___ptr0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___size1);
	__d_args[2] = Box(MEMORY_TYPE_tD54CA7DAFC85A6084D80FE45AC3B645475B00AD1_il2cpp_TypeInfo_var, &___type2);
	__d_args[3] = Box(StringWrapper_tE3D99654734EFA29E58EBB2E540C1FEA8B353DD9_il2cpp_TypeInfo_var, &___sourcestr3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.IntPtr FMOD.DSP_REALLOC_FUNC::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t DSP_REALLOC_FUNC_EndInvoke_m86E8AD002BC9662A958543D35B6456A462F482AE (DSP_REALLOC_FUNC_t1F4302C05A784F080C70909A2A758DFBAFC3F4E0 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(intptr_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_RELEASECALLBACK_t92C9D067D3CF7847DB0F73813A5833B6E4D0C6EE (DSP_RELEASECALLBACK_t92C9D067D3CF7847DB0F73813A5833B6E4D0C6EE * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0);

	return returnValue;
}
// System.Void FMOD.DSP_RELEASECALLBACK::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_RELEASECALLBACK__ctor_m8C9056551E16679E2D0921B332B6A4A3B75FD9C1 (DSP_RELEASECALLBACK_t92C9D067D3CF7847DB0F73813A5833B6E4D0C6EE * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_RELEASECALLBACK::Invoke(FMOD.DSP_STATE&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_RELEASECALLBACK_Invoke_mE1325C7CE41B1D4C20B333E72697944D17F0BB60 (DSP_RELEASECALLBACK_t92C9D067D3CF7847DB0F73813A5833B6E4D0C6EE * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker1< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * >::Invoke(targetMethod, targetThis, ___dsp_state0);
					else
						result = GenericVirtFuncInvoker1< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * >::Invoke(targetMethod, targetThis, ___dsp_state0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker1< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0);
					else
						result = VirtFuncInvoker1< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_RELEASECALLBACK::BeginInvoke(FMOD.DSP_STATE&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_RELEASECALLBACK_BeginInvoke_m408923374DDE7B9485D80E91F3218E39A16DCD62 (DSP_RELEASECALLBACK_t92C9D067D3CF7847DB0F73813A5833B6E4D0C6EE * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_RELEASECALLBACK_BeginInvoke_m408923374DDE7B9485D80E91F3218E39A16DCD62_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// FMOD.RESULT FMOD.DSP_RELEASECALLBACK::EndInvoke(FMOD.DSP_STATE&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_RELEASECALLBACK_EndInvoke_m7505883D5C0A9694FBB3C6DAC4D243EBE35398E3 (DSP_RELEASECALLBACK_t92C9D067D3CF7847DB0F73813A5833B6E4D0C6EE * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_RESETCALLBACK_t8EA9624AAC1D240E70DB5855727C840681FB659C (DSP_RESETCALLBACK_t8EA9624AAC1D240E70DB5855727C840681FB659C * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0);

	return returnValue;
}
// System.Void FMOD.DSP_RESETCALLBACK::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_RESETCALLBACK__ctor_mC7FA403812296500F4BCA5E6E596D87BAA23F09C (DSP_RESETCALLBACK_t8EA9624AAC1D240E70DB5855727C840681FB659C * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_RESETCALLBACK::Invoke(FMOD.DSP_STATE&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_RESETCALLBACK_Invoke_mA6DD4B82E0015213EBB7684E7A486863F2E1F941 (DSP_RESETCALLBACK_t8EA9624AAC1D240E70DB5855727C840681FB659C * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker1< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * >::Invoke(targetMethod, targetThis, ___dsp_state0);
					else
						result = GenericVirtFuncInvoker1< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * >::Invoke(targetMethod, targetThis, ___dsp_state0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker1< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0);
					else
						result = VirtFuncInvoker1< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_RESETCALLBACK::BeginInvoke(FMOD.DSP_STATE&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_RESETCALLBACK_BeginInvoke_m2977C7B4D50169CC0716D6A594BE8DECCD538FA8 (DSP_RESETCALLBACK_t8EA9624AAC1D240E70DB5855727C840681FB659C * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_RESETCALLBACK_BeginInvoke_m2977C7B4D50169CC0716D6A594BE8DECCD538FA8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// FMOD.RESULT FMOD.DSP_RESETCALLBACK::EndInvoke(FMOD.DSP_STATE&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_RESETCALLBACK_EndInvoke_mBCE1364830B63EA1AA1BA5E840DF5CA3BEC30113 (DSP_RESETCALLBACK_t8EA9624AAC1D240E70DB5855727C840681FB659C * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_SETPARAM_BOOL_CALLBACK_tACA9458F120A18B395CB1EE2F9A3C8ACEC2C2349 (DSP_SETPARAM_BOOL_CALLBACK_tACA9458F120A18B395CB1EE2F9A3C8ACEC2C2349 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___index1, bool ___value2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0, ___index1, static_cast<int32_t>(___value2));

	return returnValue;
}
// System.Void FMOD.DSP_SETPARAM_BOOL_CALLBACK::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_SETPARAM_BOOL_CALLBACK__ctor_m0076B789307B11B09EAC358E8659129D4D660908 (DSP_SETPARAM_BOOL_CALLBACK_tACA9458F120A18B395CB1EE2F9A3C8ACEC2C2349 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_SETPARAM_BOOL_CALLBACK::Invoke(FMOD.DSP_STATE&,System.Int32,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_SETPARAM_BOOL_CALLBACK_Invoke_m118882713ECD2C9A613A09A337C5EFB9361545BE (DSP_SETPARAM_BOOL_CALLBACK_tACA9458F120A18B395CB1EE2F9A3C8ACEC2C2349 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___index1, bool ___value2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, bool, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, ___index1, ___value2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, bool, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___index1, ___value2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___dsp_state0, ___index1, ___value2);
					else
						result = GenericVirtFuncInvoker3< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___dsp_state0, ___index1, ___value2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0, ___index1, ___value2);
					else
						result = VirtFuncInvoker3< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0, ___index1, ___value2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___index1, ___value2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___index1, ___value2, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, bool, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___index1, ___value2, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_SETPARAM_BOOL_CALLBACK::BeginInvoke(FMOD.DSP_STATE&,System.Int32,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_SETPARAM_BOOL_CALLBACK_BeginInvoke_m7A83172D4DF4E128CF05DB5FE0CC3C6C51FC50A0 (DSP_SETPARAM_BOOL_CALLBACK_tACA9458F120A18B395CB1EE2F9A3C8ACEC2C2349 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___index1, bool ___value2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_SETPARAM_BOOL_CALLBACK_BeginInvoke_m7A83172D4DF4E128CF05DB5FE0CC3C6C51FC50A0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	__d_args[1] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___index1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___value2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// FMOD.RESULT FMOD.DSP_SETPARAM_BOOL_CALLBACK::EndInvoke(FMOD.DSP_STATE&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_SETPARAM_BOOL_CALLBACK_EndInvoke_m5ED98D8FED05BA9529B413F7241CB11634C0D205 (DSP_SETPARAM_BOOL_CALLBACK_tACA9458F120A18B395CB1EE2F9A3C8ACEC2C2349 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_SETPARAM_DATA_CALLBACK_tDB9125291A634749692E0D00301A136B5C3D34DE (DSP_SETPARAM_DATA_CALLBACK_tDB9125291A634749692E0D00301A136B5C3D34DE * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___index1, intptr_t ___data2, uint32_t ___length3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0, ___index1, ___data2, ___length3);

	return returnValue;
}
// System.Void FMOD.DSP_SETPARAM_DATA_CALLBACK::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_SETPARAM_DATA_CALLBACK__ctor_m4FDC639F39ADC06EE5314880AF55516ED5874CAB (DSP_SETPARAM_DATA_CALLBACK_tDB9125291A634749692E0D00301A136B5C3D34DE * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_SETPARAM_DATA_CALLBACK::Invoke(FMOD.DSP_STATE&,System.Int32,System.IntPtr,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_SETPARAM_DATA_CALLBACK_Invoke_m5E56F4E30746058E38E8DD76A205189C2C447DF4 (DSP_SETPARAM_DATA_CALLBACK_tDB9125291A634749692E0D00301A136B5C3D34DE * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___index1, intptr_t ___data2, uint32_t ___length3, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, ___index1, ___data2, ___length3, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___index1, ___data2, ___length3, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker4< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t, uint32_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___index1, ___data2, ___length3);
					else
						result = GenericVirtFuncInvoker4< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t, uint32_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___index1, ___data2, ___length3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker4< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0, ___index1, ___data2, ___length3);
					else
						result = VirtFuncInvoker4< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0, ___index1, ___data2, ___length3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, intptr_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___index1, ___data2, ___length3, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, intptr_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___index1, ___data2, ___length3, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, intptr_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___index1, ___data2, ___length3, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_SETPARAM_DATA_CALLBACK::BeginInvoke(FMOD.DSP_STATE&,System.Int32,System.IntPtr,System.UInt32,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_SETPARAM_DATA_CALLBACK_BeginInvoke_m860C014414CA03403B9224D849D09D4AEAA6243A (DSP_SETPARAM_DATA_CALLBACK_tDB9125291A634749692E0D00301A136B5C3D34DE * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___index1, intptr_t ___data2, uint32_t ___length3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_SETPARAM_DATA_CALLBACK_BeginInvoke_m860C014414CA03403B9224D849D09D4AEAA6243A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	__d_args[1] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___index1);
	__d_args[2] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___data2);
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___length3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// FMOD.RESULT FMOD.DSP_SETPARAM_DATA_CALLBACK::EndInvoke(FMOD.DSP_STATE&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_SETPARAM_DATA_CALLBACK_EndInvoke_m8832EF2A1C388016D9BB731C4B155B9943CB9F37 (DSP_SETPARAM_DATA_CALLBACK_tDB9125291A634749692E0D00301A136B5C3D34DE * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_SETPARAM_FLOAT_CALLBACK_t7EFE910C4496F3D95D1E3487B97D08AD011006C8 (DSP_SETPARAM_FLOAT_CALLBACK_t7EFE910C4496F3D95D1E3487B97D08AD011006C8 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___index1, float ___value2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0, ___index1, ___value2);

	return returnValue;
}
// System.Void FMOD.DSP_SETPARAM_FLOAT_CALLBACK::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_SETPARAM_FLOAT_CALLBACK__ctor_m6631E92465DEEBD4AD7BD36F4518A92C6C15107F (DSP_SETPARAM_FLOAT_CALLBACK_t7EFE910C4496F3D95D1E3487B97D08AD011006C8 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_SETPARAM_FLOAT_CALLBACK::Invoke(FMOD.DSP_STATE&,System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_SETPARAM_FLOAT_CALLBACK_Invoke_m12FE567CEA4BDC70A74D7A5CE79A5C1957ACB91D (DSP_SETPARAM_FLOAT_CALLBACK_t7EFE910C4496F3D95D1E3487B97D08AD011006C8 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___index1, float ___value2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, ___index1, ___value2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___index1, ___value2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float >::Invoke(targetMethod, targetThis, ___dsp_state0, ___index1, ___value2);
					else
						result = GenericVirtFuncInvoker3< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float >::Invoke(targetMethod, targetThis, ___dsp_state0, ___index1, ___value2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0, ___index1, ___value2);
					else
						result = VirtFuncInvoker3< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0, ___index1, ___value2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___index1, ___value2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___index1, ___value2, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___index1, ___value2, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_SETPARAM_FLOAT_CALLBACK::BeginInvoke(FMOD.DSP_STATE&,System.Int32,System.Single,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_SETPARAM_FLOAT_CALLBACK_BeginInvoke_mCCE592105B231E4D8CF1C575BAF21CCE4E5CFB48 (DSP_SETPARAM_FLOAT_CALLBACK_t7EFE910C4496F3D95D1E3487B97D08AD011006C8 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___index1, float ___value2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_SETPARAM_FLOAT_CALLBACK_BeginInvoke_mCCE592105B231E4D8CF1C575BAF21CCE4E5CFB48_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	__d_args[1] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___index1);
	__d_args[2] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___value2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// FMOD.RESULT FMOD.DSP_SETPARAM_FLOAT_CALLBACK::EndInvoke(FMOD.DSP_STATE&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_SETPARAM_FLOAT_CALLBACK_EndInvoke_m043D254092113540D4BA807EED549B7BFCFC64F3 (DSP_SETPARAM_FLOAT_CALLBACK_t7EFE910C4496F3D95D1E3487B97D08AD011006C8 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_SETPARAM_INT_CALLBACK_t10AE9EEDA039984760035B14CD3E84A401F749E3 (DSP_SETPARAM_INT_CALLBACK_t10AE9EEDA039984760035B14CD3E84A401F749E3 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___index1, int32_t ___value2, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0, ___index1, ___value2);

	return returnValue;
}
// System.Void FMOD.DSP_SETPARAM_INT_CALLBACK::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_SETPARAM_INT_CALLBACK__ctor_m26A5CB921A6BEA180004B3664126F5CE42394FFA (DSP_SETPARAM_INT_CALLBACK_t10AE9EEDA039984760035B14CD3E84A401F749E3 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_SETPARAM_INT_CALLBACK::Invoke(FMOD.DSP_STATE&,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_SETPARAM_INT_CALLBACK_Invoke_mB5A0F9166A7C65D898F5D9038AC98AD70E8E8478 (DSP_SETPARAM_INT_CALLBACK_t10AE9EEDA039984760035B14CD3E84A401F749E3 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___index1, int32_t ___value2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, ___index1, ___value2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___index1, ___value2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, int32_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___index1, ___value2);
					else
						result = GenericVirtFuncInvoker3< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, int32_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___index1, ___value2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0, ___index1, ___value2);
					else
						result = VirtFuncInvoker3< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0, ___index1, ___value2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___index1, ___value2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___index1, ___value2, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___index1, ___value2, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_SETPARAM_INT_CALLBACK::BeginInvoke(FMOD.DSP_STATE&,System.Int32,System.Int32,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_SETPARAM_INT_CALLBACK_BeginInvoke_m0D006A966A8D6C3C52DEC8E90B030E19C842297F (DSP_SETPARAM_INT_CALLBACK_t10AE9EEDA039984760035B14CD3E84A401F749E3 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___index1, int32_t ___value2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_SETPARAM_INT_CALLBACK_BeginInvoke_m0D006A966A8D6C3C52DEC8E90B030E19C842297F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	__d_args[1] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___index1);
	__d_args[2] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___value2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// FMOD.RESULT FMOD.DSP_SETPARAM_INT_CALLBACK::EndInvoke(FMOD.DSP_STATE&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_SETPARAM_INT_CALLBACK_EndInvoke_m0DAB9F337B2A9027A6D455210AC7C463FF5E7D64 (DSP_SETPARAM_INT_CALLBACK_t10AE9EEDA039984760035B14CD3E84A401F749E3 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_SETPOSITIONCALLBACK_t9A480C4F691C838E0267D2D8515075AC431CB2B7 (DSP_SETPOSITIONCALLBACK_t9A480C4F691C838E0267D2D8515075AC431CB2B7 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, uint32_t ___pos1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0, ___pos1);

	return returnValue;
}
// System.Void FMOD.DSP_SETPOSITIONCALLBACK::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_SETPOSITIONCALLBACK__ctor_mAA6CC955B6354DEC7BAE5A8F565D665A4D986D44 (DSP_SETPOSITIONCALLBACK_t9A480C4F691C838E0267D2D8515075AC431CB2B7 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_SETPOSITIONCALLBACK::Invoke(FMOD.DSP_STATE&,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_SETPOSITIONCALLBACK_Invoke_m3002F72410BBB87A1A2F8682CC333E3A980B9E12 (DSP_SETPOSITIONCALLBACK_t9A480C4F691C838E0267D2D8515075AC431CB2B7 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, uint32_t ___pos1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, ___pos1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___pos1, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint32_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___pos1);
					else
						result = GenericVirtFuncInvoker2< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint32_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___pos1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0, ___pos1);
					else
						result = VirtFuncInvoker2< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0, ___pos1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___pos1, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___pos1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___pos1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_SETPOSITIONCALLBACK::BeginInvoke(FMOD.DSP_STATE&,System.UInt32,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_SETPOSITIONCALLBACK_BeginInvoke_m265B3B8E4113FECD209810F88BB1EC0A42BF04E5 (DSP_SETPOSITIONCALLBACK_t9A480C4F691C838E0267D2D8515075AC431CB2B7 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, uint32_t ___pos1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_SETPOSITIONCALLBACK_BeginInvoke_m265B3B8E4113FECD209810F88BB1EC0A42BF04E5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___pos1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// FMOD.RESULT FMOD.DSP_SETPOSITIONCALLBACK::EndInvoke(FMOD.DSP_STATE&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_SETPOSITIONCALLBACK_EndInvoke_m21AE22F7DCC545884F69B36E71DD2D76F4DFCC51 (DSP_SETPOSITIONCALLBACK_t9A480C4F691C838E0267D2D8515075AC431CB2B7 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_SHOULDIPROCESS_CALLBACK_t5545B686955F4562B7A1F21C22438EC50D6CFF28 (DSP_SHOULDIPROCESS_CALLBACK_t5545B686955F4562B7A1F21C22438EC50D6CFF28 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, bool ___inputsidle1, uint32_t ___length2, uint32_t ___inmask3, int32_t ___inchannels4, int32_t ___speakermode5, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, uint32_t, uint32_t, int32_t, int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0, static_cast<int32_t>(___inputsidle1), ___length2, ___inmask3, ___inchannels4, ___speakermode5);

	return returnValue;
}
// System.Void FMOD.DSP_SHOULDIPROCESS_CALLBACK::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_SHOULDIPROCESS_CALLBACK__ctor_m7518BB1F79377BC01789C304D41DFFB3428CFF26 (DSP_SHOULDIPROCESS_CALLBACK_t5545B686955F4562B7A1F21C22438EC50D6CFF28 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_SHOULDIPROCESS_CALLBACK::Invoke(FMOD.DSP_STATE&,System.Boolean,System.UInt32,FMOD.CHANNELMASK,System.Int32,FMOD.SPEAKERMODE)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_SHOULDIPROCESS_CALLBACK_Invoke_mB3B677FE85EB2145F4E1BF6F01DB126C0EF911CB (DSP_SHOULDIPROCESS_CALLBACK_t5545B686955F4562B7A1F21C22438EC50D6CFF28 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, bool ___inputsidle1, uint32_t ___length2, uint32_t ___inmask3, int32_t ___inchannels4, int32_t ___speakermode5, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 6)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, bool, uint32_t, uint32_t, int32_t, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, ___inputsidle1, ___length2, ___inmask3, ___inchannels4, ___speakermode5, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, bool, uint32_t, uint32_t, int32_t, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___inputsidle1, ___length2, ___inmask3, ___inchannels4, ___speakermode5, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker6< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, bool, uint32_t, uint32_t, int32_t, int32_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___inputsidle1, ___length2, ___inmask3, ___inchannels4, ___speakermode5);
					else
						result = GenericVirtFuncInvoker6< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, bool, uint32_t, uint32_t, int32_t, int32_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___inputsidle1, ___length2, ___inmask3, ___inchannels4, ___speakermode5);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker6< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, bool, uint32_t, uint32_t, int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0, ___inputsidle1, ___length2, ___inmask3, ___inchannels4, ___speakermode5);
					else
						result = VirtFuncInvoker6< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, bool, uint32_t, uint32_t, int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0, ___inputsidle1, ___length2, ___inmask3, ___inchannels4, ___speakermode5);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, bool, uint32_t, uint32_t, int32_t, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___inputsidle1, ___length2, ___inmask3, ___inchannels4, ___speakermode5, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, bool, uint32_t, uint32_t, int32_t, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___inputsidle1, ___length2, ___inmask3, ___inchannels4, ___speakermode5, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, bool, uint32_t, uint32_t, int32_t, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___inputsidle1, ___length2, ___inmask3, ___inchannels4, ___speakermode5, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_SHOULDIPROCESS_CALLBACK::BeginInvoke(FMOD.DSP_STATE&,System.Boolean,System.UInt32,FMOD.CHANNELMASK,System.Int32,FMOD.SPEAKERMODE,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_SHOULDIPROCESS_CALLBACK_BeginInvoke_m5083780AE122DBA5DE092B044BA17A72B35E0F6E (DSP_SHOULDIPROCESS_CALLBACK_t5545B686955F4562B7A1F21C22438EC50D6CFF28 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, bool ___inputsidle1, uint32_t ___length2, uint32_t ___inmask3, int32_t ___inchannels4, int32_t ___speakermode5, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback6, RuntimeObject * ___object7, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_SHOULDIPROCESS_CALLBACK_BeginInvoke_m5083780AE122DBA5DE092B044BA17A72B35E0F6E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[7] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	__d_args[1] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___inputsidle1);
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___length2);
	__d_args[3] = Box(CHANNELMASK_t7F51D2E2062C22CF864A752E22262AE47BC660B5_il2cpp_TypeInfo_var, &___inmask3);
	__d_args[4] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___inchannels4);
	__d_args[5] = Box(SPEAKERMODE_t336E2FFFB19398BDA6AC314E55997DF0CC1068A1_il2cpp_TypeInfo_var, &___speakermode5);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback6, (RuntimeObject*)___object7);
}
// FMOD.RESULT FMOD.DSP_SHOULDIPROCESS_CALLBACK::EndInvoke(FMOD.DSP_STATE&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_SHOULDIPROCESS_CALLBACK_EndInvoke_m8B30CA8D62A80D48BFEACFC9A4627AC73D8063DE (DSP_SHOULDIPROCESS_CALLBACK_t5545B686955F4562B7A1F21C22438EC50D6CFF28 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: FMOD.DSP_STATE_DFT_FUNCTIONS
IL2CPP_EXTERN_C void DSP_STATE_DFT_FUNCTIONS_t91F97904EBEE894390A661250A4ECDB1C4FF7900_marshal_pinvoke(const DSP_STATE_DFT_FUNCTIONS_t91F97904EBEE894390A661250A4ECDB1C4FF7900& unmarshaled, DSP_STATE_DFT_FUNCTIONS_t91F97904EBEE894390A661250A4ECDB1C4FF7900_marshaled_pinvoke& marshaled)
{
	marshaled.___fftreal_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_fftreal_0()));
	marshaled.___inversefftreal_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_inversefftreal_1()));
}
IL2CPP_EXTERN_C void DSP_STATE_DFT_FUNCTIONS_t91F97904EBEE894390A661250A4ECDB1C4FF7900_marshal_pinvoke_back(const DSP_STATE_DFT_FUNCTIONS_t91F97904EBEE894390A661250A4ECDB1C4FF7900_marshaled_pinvoke& marshaled, DSP_STATE_DFT_FUNCTIONS_t91F97904EBEE894390A661250A4ECDB1C4FF7900& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_STATE_DFT_FUNCTIONS_t91F97904EBEE894390A661250A4ECDB1C4FF7900_pinvoke_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_fftreal_0(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_DFT_FFTREAL_FUNC_t73B4E8FC3D8FA9D701BC82CD1EBD979E3873D3E5>(marshaled.___fftreal_0, DSP_DFT_FFTREAL_FUNC_t73B4E8FC3D8FA9D701BC82CD1EBD979E3873D3E5_il2cpp_TypeInfo_var));
	unmarshaled.set_inversefftreal_1(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_DFT_IFFTREAL_FUNC_t536096AAC4FEBBF600001E6FAE00307F932D2494>(marshaled.___inversefftreal_1, DSP_DFT_IFFTREAL_FUNC_t536096AAC4FEBBF600001E6FAE00307F932D2494_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: FMOD.DSP_STATE_DFT_FUNCTIONS
IL2CPP_EXTERN_C void DSP_STATE_DFT_FUNCTIONS_t91F97904EBEE894390A661250A4ECDB1C4FF7900_marshal_pinvoke_cleanup(DSP_STATE_DFT_FUNCTIONS_t91F97904EBEE894390A661250A4ECDB1C4FF7900_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: FMOD.DSP_STATE_DFT_FUNCTIONS
IL2CPP_EXTERN_C void DSP_STATE_DFT_FUNCTIONS_t91F97904EBEE894390A661250A4ECDB1C4FF7900_marshal_com(const DSP_STATE_DFT_FUNCTIONS_t91F97904EBEE894390A661250A4ECDB1C4FF7900& unmarshaled, DSP_STATE_DFT_FUNCTIONS_t91F97904EBEE894390A661250A4ECDB1C4FF7900_marshaled_com& marshaled)
{
	marshaled.___fftreal_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_fftreal_0()));
	marshaled.___inversefftreal_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_inversefftreal_1()));
}
IL2CPP_EXTERN_C void DSP_STATE_DFT_FUNCTIONS_t91F97904EBEE894390A661250A4ECDB1C4FF7900_marshal_com_back(const DSP_STATE_DFT_FUNCTIONS_t91F97904EBEE894390A661250A4ECDB1C4FF7900_marshaled_com& marshaled, DSP_STATE_DFT_FUNCTIONS_t91F97904EBEE894390A661250A4ECDB1C4FF7900& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_STATE_DFT_FUNCTIONS_t91F97904EBEE894390A661250A4ECDB1C4FF7900_com_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_fftreal_0(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_DFT_FFTREAL_FUNC_t73B4E8FC3D8FA9D701BC82CD1EBD979E3873D3E5>(marshaled.___fftreal_0, DSP_DFT_FFTREAL_FUNC_t73B4E8FC3D8FA9D701BC82CD1EBD979E3873D3E5_il2cpp_TypeInfo_var));
	unmarshaled.set_inversefftreal_1(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_DFT_IFFTREAL_FUNC_t536096AAC4FEBBF600001E6FAE00307F932D2494>(marshaled.___inversefftreal_1, DSP_DFT_IFFTREAL_FUNC_t536096AAC4FEBBF600001E6FAE00307F932D2494_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: FMOD.DSP_STATE_DFT_FUNCTIONS
IL2CPP_EXTERN_C void DSP_STATE_DFT_FUNCTIONS_t91F97904EBEE894390A661250A4ECDB1C4FF7900_marshal_com_cleanup(DSP_STATE_DFT_FUNCTIONS_t91F97904EBEE894390A661250A4ECDB1C4FF7900_marshaled_com& marshaled)
{
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: FMOD.DSP_STATE_FUNCTIONS
IL2CPP_EXTERN_C void DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B_marshal_pinvoke(const DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B& unmarshaled, DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B_marshaled_pinvoke& marshaled)
{
	marshaled.___alloc_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_alloc_0()));
	marshaled.___realloc_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_realloc_1()));
	marshaled.___free_2 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_free_2()));
	marshaled.___getsamplerate_3 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_getsamplerate_3()));
	marshaled.___getblocksize_4 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_getblocksize_4()));
	marshaled.___dft_5 = unmarshaled.get_dft_5();
	marshaled.___pan_6 = unmarshaled.get_pan_6();
	marshaled.___getspeakermode_7 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_getspeakermode_7()));
	marshaled.___getclock_8 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_getclock_8()));
	marshaled.___getlistenerattributes_9 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_getlistenerattributes_9()));
	marshaled.___log_10 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_log_10()));
	marshaled.___getuserdata_11 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_getuserdata_11()));
}
IL2CPP_EXTERN_C void DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B_marshal_pinvoke_back(const DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B_marshaled_pinvoke& marshaled, DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B_pinvoke_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_alloc_0(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_ALLOC_FUNC_t8CD6D271F70AFD7BFE9A856DAD1D444E72AA422D>(marshaled.___alloc_0, DSP_ALLOC_FUNC_t8CD6D271F70AFD7BFE9A856DAD1D444E72AA422D_il2cpp_TypeInfo_var));
	unmarshaled.set_realloc_1(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_REALLOC_FUNC_t1F4302C05A784F080C70909A2A758DFBAFC3F4E0>(marshaled.___realloc_1, DSP_REALLOC_FUNC_t1F4302C05A784F080C70909A2A758DFBAFC3F4E0_il2cpp_TypeInfo_var));
	unmarshaled.set_free_2(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_FREE_FUNC_t0C9E6DE1DF61298098E07E792A9A1BF26AA681C2>(marshaled.___free_2, DSP_FREE_FUNC_t0C9E6DE1DF61298098E07E792A9A1BF26AA681C2_il2cpp_TypeInfo_var));
	unmarshaled.set_getsamplerate_3(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_GETSAMPLERATE_FUNC_t25AB56A22F09DA2A058DC879C9916BB13E9C2E02>(marshaled.___getsamplerate_3, DSP_GETSAMPLERATE_FUNC_t25AB56A22F09DA2A058DC879C9916BB13E9C2E02_il2cpp_TypeInfo_var));
	unmarshaled.set_getblocksize_4(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_GETBLOCKSIZE_FUNC_t9B624C10ADE32AAC618ACF14395A8A59BDDFDD50>(marshaled.___getblocksize_4, DSP_GETBLOCKSIZE_FUNC_t9B624C10ADE32AAC618ACF14395A8A59BDDFDD50_il2cpp_TypeInfo_var));
	intptr_t unmarshaled_dft_temp_5;
	memset((&unmarshaled_dft_temp_5), 0, sizeof(unmarshaled_dft_temp_5));
	unmarshaled_dft_temp_5 = marshaled.___dft_5;
	unmarshaled.set_dft_5(unmarshaled_dft_temp_5);
	intptr_t unmarshaled_pan_temp_6;
	memset((&unmarshaled_pan_temp_6), 0, sizeof(unmarshaled_pan_temp_6));
	unmarshaled_pan_temp_6 = marshaled.___pan_6;
	unmarshaled.set_pan_6(unmarshaled_pan_temp_6);
	unmarshaled.set_getspeakermode_7(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_GETSPEAKERMODE_FUNC_t8047C7AB197EF964C7E2299C1EF3B5A00F345B79>(marshaled.___getspeakermode_7, DSP_GETSPEAKERMODE_FUNC_t8047C7AB197EF964C7E2299C1EF3B5A00F345B79_il2cpp_TypeInfo_var));
	unmarshaled.set_getclock_8(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_GETCLOCK_FUNC_t0449CC42281AF16DB70CB8E93459A7B5D5C62A75>(marshaled.___getclock_8, DSP_GETCLOCK_FUNC_t0449CC42281AF16DB70CB8E93459A7B5D5C62A75_il2cpp_TypeInfo_var));
	unmarshaled.set_getlistenerattributes_9(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_GETLISTENERATTRIBUTES_FUNC_t69622B724F9617BD5217ACCF1EB398B9F6060D7B>(marshaled.___getlistenerattributes_9, DSP_GETLISTENERATTRIBUTES_FUNC_t69622B724F9617BD5217ACCF1EB398B9F6060D7B_il2cpp_TypeInfo_var));
	unmarshaled.set_log_10(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_LOG_FUNC_t85E329EB1F7C54E80A66F8FBA3DB2C2C58E72493>(marshaled.___log_10, DSP_LOG_FUNC_t85E329EB1F7C54E80A66F8FBA3DB2C2C58E72493_il2cpp_TypeInfo_var));
	unmarshaled.set_getuserdata_11(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_GETUSERDATA_FUNC_tF11A456B243BF11A5E4283EBBDA9220E904177A8>(marshaled.___getuserdata_11, DSP_GETUSERDATA_FUNC_tF11A456B243BF11A5E4283EBBDA9220E904177A8_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: FMOD.DSP_STATE_FUNCTIONS
IL2CPP_EXTERN_C void DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B_marshal_pinvoke_cleanup(DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: FMOD.DSP_STATE_FUNCTIONS
IL2CPP_EXTERN_C void DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B_marshal_com(const DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B& unmarshaled, DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B_marshaled_com& marshaled)
{
	marshaled.___alloc_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_alloc_0()));
	marshaled.___realloc_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_realloc_1()));
	marshaled.___free_2 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_free_2()));
	marshaled.___getsamplerate_3 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_getsamplerate_3()));
	marshaled.___getblocksize_4 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_getblocksize_4()));
	marshaled.___dft_5 = unmarshaled.get_dft_5();
	marshaled.___pan_6 = unmarshaled.get_pan_6();
	marshaled.___getspeakermode_7 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_getspeakermode_7()));
	marshaled.___getclock_8 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_getclock_8()));
	marshaled.___getlistenerattributes_9 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_getlistenerattributes_9()));
	marshaled.___log_10 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_log_10()));
	marshaled.___getuserdata_11 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_getuserdata_11()));
}
IL2CPP_EXTERN_C void DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B_marshal_com_back(const DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B_marshaled_com& marshaled, DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B_com_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_alloc_0(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_ALLOC_FUNC_t8CD6D271F70AFD7BFE9A856DAD1D444E72AA422D>(marshaled.___alloc_0, DSP_ALLOC_FUNC_t8CD6D271F70AFD7BFE9A856DAD1D444E72AA422D_il2cpp_TypeInfo_var));
	unmarshaled.set_realloc_1(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_REALLOC_FUNC_t1F4302C05A784F080C70909A2A758DFBAFC3F4E0>(marshaled.___realloc_1, DSP_REALLOC_FUNC_t1F4302C05A784F080C70909A2A758DFBAFC3F4E0_il2cpp_TypeInfo_var));
	unmarshaled.set_free_2(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_FREE_FUNC_t0C9E6DE1DF61298098E07E792A9A1BF26AA681C2>(marshaled.___free_2, DSP_FREE_FUNC_t0C9E6DE1DF61298098E07E792A9A1BF26AA681C2_il2cpp_TypeInfo_var));
	unmarshaled.set_getsamplerate_3(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_GETSAMPLERATE_FUNC_t25AB56A22F09DA2A058DC879C9916BB13E9C2E02>(marshaled.___getsamplerate_3, DSP_GETSAMPLERATE_FUNC_t25AB56A22F09DA2A058DC879C9916BB13E9C2E02_il2cpp_TypeInfo_var));
	unmarshaled.set_getblocksize_4(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_GETBLOCKSIZE_FUNC_t9B624C10ADE32AAC618ACF14395A8A59BDDFDD50>(marshaled.___getblocksize_4, DSP_GETBLOCKSIZE_FUNC_t9B624C10ADE32AAC618ACF14395A8A59BDDFDD50_il2cpp_TypeInfo_var));
	intptr_t unmarshaled_dft_temp_5;
	memset((&unmarshaled_dft_temp_5), 0, sizeof(unmarshaled_dft_temp_5));
	unmarshaled_dft_temp_5 = marshaled.___dft_5;
	unmarshaled.set_dft_5(unmarshaled_dft_temp_5);
	intptr_t unmarshaled_pan_temp_6;
	memset((&unmarshaled_pan_temp_6), 0, sizeof(unmarshaled_pan_temp_6));
	unmarshaled_pan_temp_6 = marshaled.___pan_6;
	unmarshaled.set_pan_6(unmarshaled_pan_temp_6);
	unmarshaled.set_getspeakermode_7(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_GETSPEAKERMODE_FUNC_t8047C7AB197EF964C7E2299C1EF3B5A00F345B79>(marshaled.___getspeakermode_7, DSP_GETSPEAKERMODE_FUNC_t8047C7AB197EF964C7E2299C1EF3B5A00F345B79_il2cpp_TypeInfo_var));
	unmarshaled.set_getclock_8(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_GETCLOCK_FUNC_t0449CC42281AF16DB70CB8E93459A7B5D5C62A75>(marshaled.___getclock_8, DSP_GETCLOCK_FUNC_t0449CC42281AF16DB70CB8E93459A7B5D5C62A75_il2cpp_TypeInfo_var));
	unmarshaled.set_getlistenerattributes_9(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_GETLISTENERATTRIBUTES_FUNC_t69622B724F9617BD5217ACCF1EB398B9F6060D7B>(marshaled.___getlistenerattributes_9, DSP_GETLISTENERATTRIBUTES_FUNC_t69622B724F9617BD5217ACCF1EB398B9F6060D7B_il2cpp_TypeInfo_var));
	unmarshaled.set_log_10(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_LOG_FUNC_t85E329EB1F7C54E80A66F8FBA3DB2C2C58E72493>(marshaled.___log_10, DSP_LOG_FUNC_t85E329EB1F7C54E80A66F8FBA3DB2C2C58E72493_il2cpp_TypeInfo_var));
	unmarshaled.set_getuserdata_11(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_GETUSERDATA_FUNC_tF11A456B243BF11A5E4283EBBDA9220E904177A8>(marshaled.___getuserdata_11, DSP_GETUSERDATA_FUNC_tF11A456B243BF11A5E4283EBBDA9220E904177A8_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: FMOD.DSP_STATE_FUNCTIONS
IL2CPP_EXTERN_C void DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B_marshal_com_cleanup(DSP_STATE_FUNCTIONS_t7572D5F3454573947DC13BF2D56B982CFAC6F54B_marshaled_com& marshaled)
{
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: FMOD.DSP_STATE_PAN_FUNCTIONS
IL2CPP_EXTERN_C void DSP_STATE_PAN_FUNCTIONS_tAE8544175DB4E96F165A7CFF512529541ABD9B24_marshal_pinvoke(const DSP_STATE_PAN_FUNCTIONS_tAE8544175DB4E96F165A7CFF512529541ABD9B24& unmarshaled, DSP_STATE_PAN_FUNCTIONS_tAE8544175DB4E96F165A7CFF512529541ABD9B24_marshaled_pinvoke& marshaled)
{
	marshaled.___summonomatrix_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_summonomatrix_0()));
	marshaled.___sumstereomatrix_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_sumstereomatrix_1()));
	marshaled.___sumsurroundmatrix_2 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_sumsurroundmatrix_2()));
	marshaled.___summonotosurroundmatrix_3 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_summonotosurroundmatrix_3()));
	marshaled.___sumstereotosurroundmatrix_4 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_sumstereotosurroundmatrix_4()));
	marshaled.___getrolloffgain_5 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_getrolloffgain_5()));
}
IL2CPP_EXTERN_C void DSP_STATE_PAN_FUNCTIONS_tAE8544175DB4E96F165A7CFF512529541ABD9B24_marshal_pinvoke_back(const DSP_STATE_PAN_FUNCTIONS_tAE8544175DB4E96F165A7CFF512529541ABD9B24_marshaled_pinvoke& marshaled, DSP_STATE_PAN_FUNCTIONS_tAE8544175DB4E96F165A7CFF512529541ABD9B24& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_STATE_PAN_FUNCTIONS_tAE8544175DB4E96F165A7CFF512529541ABD9B24_pinvoke_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_summonomatrix_0(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_PAN_SUMMONOMATRIX_FUNC_t4FEAF41A824EF70D7AE3CC079690C889B3F3584E>(marshaled.___summonomatrix_0, DSP_PAN_SUMMONOMATRIX_FUNC_t4FEAF41A824EF70D7AE3CC079690C889B3F3584E_il2cpp_TypeInfo_var));
	unmarshaled.set_sumstereomatrix_1(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_PAN_SUMSTEREOMATRIX_FUNC_tBDAFBEB725DE435CC966204D9A134DF3D5BB8092>(marshaled.___sumstereomatrix_1, DSP_PAN_SUMSTEREOMATRIX_FUNC_tBDAFBEB725DE435CC966204D9A134DF3D5BB8092_il2cpp_TypeInfo_var));
	unmarshaled.set_sumsurroundmatrix_2(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_PAN_SUMSURROUNDMATRIX_FUNC_t57199FB9B779135FCFB32AFE2B8ADE90F5065619>(marshaled.___sumsurroundmatrix_2, DSP_PAN_SUMSURROUNDMATRIX_FUNC_t57199FB9B779135FCFB32AFE2B8ADE90F5065619_il2cpp_TypeInfo_var));
	unmarshaled.set_summonotosurroundmatrix_3(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC_tA7FBF2E8C0EA206F652B515515C002B789849C7B>(marshaled.___summonotosurroundmatrix_3, DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC_tA7FBF2E8C0EA206F652B515515C002B789849C7B_il2cpp_TypeInfo_var));
	unmarshaled.set_sumstereotosurroundmatrix_4(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC_tD083096D805C0022D80A8CEE8DE038D2588A63F3>(marshaled.___sumstereotosurroundmatrix_4, DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC_tD083096D805C0022D80A8CEE8DE038D2588A63F3_il2cpp_TypeInfo_var));
	unmarshaled.set_getrolloffgain_5(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_PAN_GETROLLOFFGAIN_FUNC_tB6AB67EB1F301E9C6AFD60A29B8314A585D3A05C>(marshaled.___getrolloffgain_5, DSP_PAN_GETROLLOFFGAIN_FUNC_tB6AB67EB1F301E9C6AFD60A29B8314A585D3A05C_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: FMOD.DSP_STATE_PAN_FUNCTIONS
IL2CPP_EXTERN_C void DSP_STATE_PAN_FUNCTIONS_tAE8544175DB4E96F165A7CFF512529541ABD9B24_marshal_pinvoke_cleanup(DSP_STATE_PAN_FUNCTIONS_tAE8544175DB4E96F165A7CFF512529541ABD9B24_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: FMOD.DSP_STATE_PAN_FUNCTIONS
IL2CPP_EXTERN_C void DSP_STATE_PAN_FUNCTIONS_tAE8544175DB4E96F165A7CFF512529541ABD9B24_marshal_com(const DSP_STATE_PAN_FUNCTIONS_tAE8544175DB4E96F165A7CFF512529541ABD9B24& unmarshaled, DSP_STATE_PAN_FUNCTIONS_tAE8544175DB4E96F165A7CFF512529541ABD9B24_marshaled_com& marshaled)
{
	marshaled.___summonomatrix_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_summonomatrix_0()));
	marshaled.___sumstereomatrix_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_sumstereomatrix_1()));
	marshaled.___sumsurroundmatrix_2 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_sumsurroundmatrix_2()));
	marshaled.___summonotosurroundmatrix_3 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_summonotosurroundmatrix_3()));
	marshaled.___sumstereotosurroundmatrix_4 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_sumstereotosurroundmatrix_4()));
	marshaled.___getrolloffgain_5 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_getrolloffgain_5()));
}
IL2CPP_EXTERN_C void DSP_STATE_PAN_FUNCTIONS_tAE8544175DB4E96F165A7CFF512529541ABD9B24_marshal_com_back(const DSP_STATE_PAN_FUNCTIONS_tAE8544175DB4E96F165A7CFF512529541ABD9B24_marshaled_com& marshaled, DSP_STATE_PAN_FUNCTIONS_tAE8544175DB4E96F165A7CFF512529541ABD9B24& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_STATE_PAN_FUNCTIONS_tAE8544175DB4E96F165A7CFF512529541ABD9B24_com_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_summonomatrix_0(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_PAN_SUMMONOMATRIX_FUNC_t4FEAF41A824EF70D7AE3CC079690C889B3F3584E>(marshaled.___summonomatrix_0, DSP_PAN_SUMMONOMATRIX_FUNC_t4FEAF41A824EF70D7AE3CC079690C889B3F3584E_il2cpp_TypeInfo_var));
	unmarshaled.set_sumstereomatrix_1(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_PAN_SUMSTEREOMATRIX_FUNC_tBDAFBEB725DE435CC966204D9A134DF3D5BB8092>(marshaled.___sumstereomatrix_1, DSP_PAN_SUMSTEREOMATRIX_FUNC_tBDAFBEB725DE435CC966204D9A134DF3D5BB8092_il2cpp_TypeInfo_var));
	unmarshaled.set_sumsurroundmatrix_2(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_PAN_SUMSURROUNDMATRIX_FUNC_t57199FB9B779135FCFB32AFE2B8ADE90F5065619>(marshaled.___sumsurroundmatrix_2, DSP_PAN_SUMSURROUNDMATRIX_FUNC_t57199FB9B779135FCFB32AFE2B8ADE90F5065619_il2cpp_TypeInfo_var));
	unmarshaled.set_summonotosurroundmatrix_3(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC_tA7FBF2E8C0EA206F652B515515C002B789849C7B>(marshaled.___summonotosurroundmatrix_3, DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC_tA7FBF2E8C0EA206F652B515515C002B789849C7B_il2cpp_TypeInfo_var));
	unmarshaled.set_sumstereotosurroundmatrix_4(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC_tD083096D805C0022D80A8CEE8DE038D2588A63F3>(marshaled.___sumstereotosurroundmatrix_4, DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC_tD083096D805C0022D80A8CEE8DE038D2588A63F3_il2cpp_TypeInfo_var));
	unmarshaled.set_getrolloffgain_5(il2cpp_codegen_marshal_function_ptr_to_delegate<DSP_PAN_GETROLLOFFGAIN_FUNC_tB6AB67EB1F301E9C6AFD60A29B8314A585D3A05C>(marshaled.___getrolloffgain_5, DSP_PAN_GETROLLOFFGAIN_FUNC_tB6AB67EB1F301E9C6AFD60A29B8314A585D3A05C_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: FMOD.DSP_STATE_PAN_FUNCTIONS
IL2CPP_EXTERN_C void DSP_STATE_PAN_FUNCTIONS_tAE8544175DB4E96F165A7CFF512529541ABD9B24_marshal_com_cleanup(DSP_STATE_PAN_FUNCTIONS_tAE8544175DB4E96F165A7CFF512529541ABD9B24_marshaled_com& marshaled)
{
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_SYSTEM_DEREGISTER_CALLBACK_tB1D240F0C4635096EEDB65641DC430EB03DD0699 (DSP_SYSTEM_DEREGISTER_CALLBACK_tB1D240F0C4635096EEDB65641DC430EB03DD0699 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0);

	return returnValue;
}
// System.Void FMOD.DSP_SYSTEM_DEREGISTER_CALLBACK::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_SYSTEM_DEREGISTER_CALLBACK__ctor_mEB7A03D5FE054145B312F88EBC2785BF69DD8DFA (DSP_SYSTEM_DEREGISTER_CALLBACK_tB1D240F0C4635096EEDB65641DC430EB03DD0699 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_SYSTEM_DEREGISTER_CALLBACK::Invoke(FMOD.DSP_STATE&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_SYSTEM_DEREGISTER_CALLBACK_Invoke_mAAC64CE52C5D062F123B8409ED8DAF78557E12EE (DSP_SYSTEM_DEREGISTER_CALLBACK_tB1D240F0C4635096EEDB65641DC430EB03DD0699 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker1< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * >::Invoke(targetMethod, targetThis, ___dsp_state0);
					else
						result = GenericVirtFuncInvoker1< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * >::Invoke(targetMethod, targetThis, ___dsp_state0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker1< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0);
					else
						result = VirtFuncInvoker1< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_SYSTEM_DEREGISTER_CALLBACK::BeginInvoke(FMOD.DSP_STATE&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_SYSTEM_DEREGISTER_CALLBACK_BeginInvoke_m4E09F021A6014173C00A32FBE513ED79E73F9825 (DSP_SYSTEM_DEREGISTER_CALLBACK_tB1D240F0C4635096EEDB65641DC430EB03DD0699 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_SYSTEM_DEREGISTER_CALLBACK_BeginInvoke_m4E09F021A6014173C00A32FBE513ED79E73F9825_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// FMOD.RESULT FMOD.DSP_SYSTEM_DEREGISTER_CALLBACK::EndInvoke(FMOD.DSP_STATE&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_SYSTEM_DEREGISTER_CALLBACK_EndInvoke_m84B7D266D7E676F4EFA79A9651C6BA463875AF2E (DSP_SYSTEM_DEREGISTER_CALLBACK_tB1D240F0C4635096EEDB65641DC430EB03DD0699 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_SYSTEM_MIX_CALLBACK_t38470781C5A19912A1FFF609AEFB9FC7695C3836 (DSP_SYSTEM_MIX_CALLBACK_t38470781C5A19912A1FFF609AEFB9FC7695C3836 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___stage1, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0, ___stage1);

	return returnValue;
}
// System.Void FMOD.DSP_SYSTEM_MIX_CALLBACK::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_SYSTEM_MIX_CALLBACK__ctor_m034D8ADB1DDA40636BB355D4FEA5482DDF06EB4B (DSP_SYSTEM_MIX_CALLBACK_t38470781C5A19912A1FFF609AEFB9FC7695C3836 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_SYSTEM_MIX_CALLBACK::Invoke(FMOD.DSP_STATE&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_SYSTEM_MIX_CALLBACK_Invoke_m2AE6448D01E00E4218140BE9ADEA6E21370611BE (DSP_SYSTEM_MIX_CALLBACK_t38470781C5A19912A1FFF609AEFB9FC7695C3836 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___stage1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, ___stage1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___stage1, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___stage1);
					else
						result = GenericVirtFuncInvoker2< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t >::Invoke(targetMethod, targetThis, ___dsp_state0, ___stage1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0, ___stage1);
					else
						result = VirtFuncInvoker2< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0, ___stage1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___stage1, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), ___stage1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, ___stage1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_SYSTEM_MIX_CALLBACK::BeginInvoke(FMOD.DSP_STATE&,System.Int32,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_SYSTEM_MIX_CALLBACK_BeginInvoke_m597015EFC44E0158D44302D8A2ADC6307DA7E63A (DSP_SYSTEM_MIX_CALLBACK_t38470781C5A19912A1FFF609AEFB9FC7695C3836 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, int32_t ___stage1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_SYSTEM_MIX_CALLBACK_BeginInvoke_m597015EFC44E0158D44302D8A2ADC6307DA7E63A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	__d_args[1] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___stage1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// FMOD.RESULT FMOD.DSP_SYSTEM_MIX_CALLBACK::EndInvoke(FMOD.DSP_STATE&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_SYSTEM_MIX_CALLBACK_EndInvoke_mB72055C7EB325DAED7765600E852A4ED989D81AC (DSP_SYSTEM_MIX_CALLBACK_t38470781C5A19912A1FFF609AEFB9FC7695C3836 * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_DSP_SYSTEM_REGISTER_CALLBACK_t9D6891252B2A9A8667CF1BE598C9BBC50450CCFA (DSP_SYSTEM_REGISTER_CALLBACK_t9D6891252B2A9A8667CF1BE598C9BBC50450CCFA * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc)(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___dsp_state0);

	return returnValue;
}
// System.Void FMOD.DSP_SYSTEM_REGISTER_CALLBACK::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DSP_SYSTEM_REGISTER_CALLBACK__ctor_mAFF57BB03BC403C2E58E49126743DD7DEB57D964 (DSP_SYSTEM_REGISTER_CALLBACK_t9D6891252B2A9A8667CF1BE598C9BBC50450CCFA * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// FMOD.RESULT FMOD.DSP_SYSTEM_REGISTER_CALLBACK::Invoke(FMOD.DSP_STATE&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_SYSTEM_REGISTER_CALLBACK_Invoke_m3E41CB486B1AED2E698AD1C9D56FEBD167891E16 (DSP_SYSTEM_REGISTER_CALLBACK_t9D6891252B2A9A8667CF1BE598C9BBC50450CCFA * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef int32_t (*FunctionPointerType) (DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___dsp_state0, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker1< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * >::Invoke(targetMethod, targetThis, ___dsp_state0);
					else
						result = GenericVirtFuncInvoker1< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * >::Invoke(targetMethod, targetThis, ___dsp_state0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker1< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___dsp_state0);
					else
						result = VirtFuncInvoker1< int32_t, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___dsp_state0);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___dsp_state0) - 1), targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___dsp_state0, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult FMOD.DSP_SYSTEM_REGISTER_CALLBACK::BeginInvoke(FMOD.DSP_STATE&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DSP_SYSTEM_REGISTER_CALLBACK_BeginInvoke_m7FA177CACC6FF4FC14992C7E66282173F3BFA03D (DSP_SYSTEM_REGISTER_CALLBACK_t9D6891252B2A9A8667CF1BE598C9BBC50450CCFA * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DSP_SYSTEM_REGISTER_CALLBACK_BeginInvoke_m7FA177CACC6FF4FC14992C7E66282173F3BFA03D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2_il2cpp_TypeInfo_var, &*___dsp_state0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// FMOD.RESULT FMOD.DSP_SYSTEM_REGISTER_CALLBACK::EndInvoke(FMOD.DSP_STATE&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t DSP_SYSTEM_REGISTER_CALLBACK_EndInvoke_m21DA1158E71646D9C608E38834DF0B9D0579D7C7 (DSP_SYSTEM_REGISTER_CALLBACK_t9D6891252B2A9A8667CF1BE598C9BBC50450CCFA * __this, DSP_STATE_tF2ABB72D0C583AF3F90A1F41D70B10458A2B1BB2 * ___dsp_state0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___dsp_state0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// FMOD.RESULT FMOD.Debug::Initialize(FMOD.DEBUG_FLAGS,FMOD.DEBUG_MODE,FMOD.DEBUG_CALLBACK,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Debug_Initialize_m40FFA79E069B196800950100EB202FCF5F6D1E67 (uint32_t ___flags0, int32_t ___mode1, DEBUG_CALLBACK_t6A7351E61776A499C1A1BE9A923E71A21416E783 * ___callback2, String_t* ___filename3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Debug_Initialize_m40FFA79E069B196800950100EB202FCF5F6D1E67_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ThreadSafeEncoding_t9C88ACD17730C478FB2685CA11D1ABC64C1A1771 * V_0 = NULL;
	int32_t V_1 = 0;
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		// using (StringHelper.ThreadSafeEncoding encoder = StringHelper.GetFreeHelper())
		IL2CPP_RUNTIME_CLASS_INIT(StringHelper_tCA6285337EBB683D188638581D30D196C340F0FC_il2cpp_TypeInfo_var);
		ThreadSafeEncoding_t9C88ACD17730C478FB2685CA11D1ABC64C1A1771 * L_0 = StringHelper_GetFreeHelper_mF20CD435503694A169A0FBC7EDAD73E3BCE4E257(/*hidden argument*/NULL);
		V_0 = L_0;
	}

IL_0006:
	try
	{ // begin try (depth: 1)
		// return FMOD5_Debug_Initialize(flags, mode, callback, encoder.byteFromStringUTF8(filename));
		uint32_t L_1 = ___flags0;
		int32_t L_2 = ___mode1;
		DEBUG_CALLBACK_t6A7351E61776A499C1A1BE9A923E71A21416E783 * L_3 = ___callback2;
		ThreadSafeEncoding_t9C88ACD17730C478FB2685CA11D1ABC64C1A1771 * L_4 = V_0;
		String_t* L_5 = ___filename3;
		NullCheck(L_4);
		ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* L_6 = ThreadSafeEncoding_byteFromStringUTF8_m1A81615A702C48A0CFF79C417D89286F2A40E22D(L_4, L_5, /*hidden argument*/NULL);
		int32_t L_7 = Debug_FMOD5_Debug_Initialize_mABD6266CA028334D14C51969388B9A1D05727960(L_1, L_2, L_3, L_6, /*hidden argument*/NULL);
		V_1 = L_7;
		IL2CPP_LEAVE(0x22, FINALLY_0018);
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0018;
	}

FINALLY_0018:
	{ // begin finally (depth: 1)
		{
			ThreadSafeEncoding_t9C88ACD17730C478FB2685CA11D1ABC64C1A1771 * L_8 = V_0;
			if (!L_8)
			{
				goto IL_0021;
			}
		}

IL_001b:
		{
			ThreadSafeEncoding_t9C88ACD17730C478FB2685CA11D1ABC64C1A1771 * L_9 = V_0;
			NullCheck(L_9);
			InterfaceActionInvoker0::Invoke(0 /* System.Void System.IDisposable::Dispose() */, IDisposable_t7218B22548186B208D65EA5B7870503810A2D15A_il2cpp_TypeInfo_var, L_9);
		}

IL_0021:
		{
			IL2CPP_END_FINALLY(24)
		}
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(24)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x22, IL_0022)
	}

IL_0022:
	{
		// }
		int32_t L_10 = V_1;
		return L_10;
	}
}
#if FORCE_PINVOKE_INTERNAL
IL2CPP_EXTERN_C int32_t DEFAULT_CALL FMOD5_Debug_Initialize(uint32_t, int32_t, Il2CppMethodPointer, uint8_t*);
#endif
// FMOD.RESULT FMOD.Debug::FMOD5_Debug_Initialize(FMOD.DEBUG_FLAGS,FMOD.DEBUG_MODE,FMOD.DEBUG_CALLBACK,System.Byte[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Debug_FMOD5_Debug_Initialize_mABD6266CA028334D14C51969388B9A1D05727960 (uint32_t ___flags0, int32_t ___mode1, DEBUG_CALLBACK_t6A7351E61776A499C1A1BE9A923E71A21416E783 * ___callback2, ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* ___filename3, const RuntimeMethod* method)
{
	typedef int32_t (DEFAULT_CALL *PInvokeFunc) (uint32_t, int32_t, Il2CppMethodPointer, uint8_t*);
	#if !FORCE_PINVOKE_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(uint32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("fmodstudio"), "FMOD5_Debug_Initialize", IL2CPP_CALL_DEFAULT, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___callback2' to native representation
	Il2CppMethodPointer ____callback2_marshaled = NULL;
	____callback2_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___callback2));

	// Marshaling of parameter '___filename3' to native representation
	uint8_t* ____filename3_marshaled = NULL;
	if (___filename3 != NULL)
	{
		____filename3_marshaled = reinterpret_cast<uint8_t*>((___filename3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(FMOD5_Debug_Initialize)(___flags0, ___mode1, ____callback2_marshaled, ____filename3_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___flags0, ___mode1, ____callback2_marshaled, ____filename3_marshaled);
	#endif

	return returnValue;
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.String FMOD.Error::String(FMOD.RESULT)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* Error_String_m4E033F159090A200942421BB1204E0EF1E0A1C6B (int32_t ___errcode0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Error_String_m4E033F159090A200942421BB1204E0EF1E0A1C6B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// switch (errcode)
		int32_t L_0 = ___errcode0;
		switch (L_0)
		{
			case 0:
			{
				goto IL_0153;
			}
			case 1:
			{
				goto IL_0159;
			}
			case 2:
			{
				goto IL_015f;
			}
			case 3:
			{
				goto IL_0165;
			}
			case 4:
			{
				goto IL_016b;
			}
			case 5:
			{
				goto IL_0171;
			}
			case 6:
			{
				goto IL_0177;
			}
			case 7:
			{
				goto IL_017d;
			}
			case 8:
			{
				goto IL_0183;
			}
			case 9:
			{
				goto IL_0189;
			}
			case 10:
			{
				goto IL_018f;
			}
			case 11:
			{
				goto IL_0195;
			}
			case 12:
			{
				goto IL_019b;
			}
			case 13:
			{
				goto IL_01a1;
			}
			case 14:
			{
				goto IL_01a7;
			}
			case 15:
			{
				goto IL_01ad;
			}
			case 16:
			{
				goto IL_01b3;
			}
			case 17:
			{
				goto IL_01b9;
			}
			case 18:
			{
				goto IL_01bf;
			}
			case 19:
			{
				goto IL_01c5;
			}
			case 20:
			{
				goto IL_01cb;
			}
			case 21:
			{
				goto IL_01d1;
			}
			case 22:
			{
				goto IL_01d7;
			}
			case 23:
			{
				goto IL_01dd;
			}
			case 24:
			{
				goto IL_01e3;
			}
			case 25:
			{
				goto IL_01e9;
			}
			case 26:
			{
				goto IL_01ef;
			}
			case 27:
			{
				goto IL_01f5;
			}
			case 28:
			{
				goto IL_01fb;
			}
			case 29:
			{
				goto IL_0201;
			}
			case 30:
			{
				goto IL_0207;
			}
			case 31:
			{
				goto IL_020d;
			}
			case 32:
			{
				goto IL_0213;
			}
			case 33:
			{
				goto IL_0219;
			}
			case 34:
			{
				goto IL_021f;
			}
			case 35:
			{
				goto IL_0225;
			}
			case 36:
			{
				goto IL_022b;
			}
			case 37:
			{
				goto IL_0231;
			}
			case 38:
			{
				goto IL_0237;
			}
			case 39:
			{
				goto IL_023d;
			}
			case 40:
			{
				goto IL_0243;
			}
			case 41:
			{
				goto IL_0249;
			}
			case 42:
			{
				goto IL_024f;
			}
			case 43:
			{
				goto IL_0255;
			}
			case 44:
			{
				goto IL_025b;
			}
			case 45:
			{
				goto IL_0261;
			}
			case 46:
			{
				goto IL_0267;
			}
			case 47:
			{
				goto IL_026d;
			}
			case 48:
			{
				goto IL_0273;
			}
			case 49:
			{
				goto IL_0279;
			}
			case 50:
			{
				goto IL_027f;
			}
			case 51:
			{
				goto IL_0285;
			}
			case 52:
			{
				goto IL_028b;
			}
			case 53:
			{
				goto IL_0291;
			}
			case 54:
			{
				goto IL_0297;
			}
			case 55:
			{
				goto IL_029d;
			}
			case 56:
			{
				goto IL_02a3;
			}
			case 57:
			{
				goto IL_02a9;
			}
			case 58:
			{
				goto IL_02af;
			}
			case 59:
			{
				goto IL_02b5;
			}
			case 60:
			{
				goto IL_02bb;
			}
			case 61:
			{
				goto IL_02c1;
			}
			case 62:
			{
				goto IL_02c7;
			}
			case 63:
			{
				goto IL_02cd;
			}
			case 64:
			{
				goto IL_02d3;
			}
			case 65:
			{
				goto IL_02d9;
			}
			case 66:
			{
				goto IL_02df;
			}
			case 67:
			{
				goto IL_02e5;
			}
			case 68:
			{
				goto IL_02eb;
			}
			case 69:
			{
				goto IL_02f1;
			}
			case 70:
			{
				goto IL_02f7;
			}
			case 71:
			{
				goto IL_02fd;
			}
			case 72:
			{
				goto IL_0303;
			}
			case 73:
			{
				goto IL_0309;
			}
			case 74:
			{
				goto IL_030f;
			}
			case 75:
			{
				goto IL_0315;
			}
			case 76:
			{
				goto IL_031b;
			}
			case 77:
			{
				goto IL_0321;
			}
			case 78:
			{
				goto IL_0327;
			}
			case 79:
			{
				goto IL_032d;
			}
			case 80:
			{
				goto IL_0333;
			}
			case 81:
			{
				goto IL_0339;
			}
		}
	}
	{
		goto IL_033f;
	}

IL_0153:
	{
		// case FMOD.RESULT.OK:                            return "No errors.";
		return _stringLiteral737DAE0B51BCE2E6E2820BC9093CE3E83F60FF2E;
	}

IL_0159:
	{
		// case FMOD.RESULT.ERR_BADCOMMAND:                return "Tried to call a function on a data type that does not allow this type of functionality (ie calling Sound::lock on a streaming sound).";
		return _stringLiteral2E87BFC418D79CB7DCDE6C0406B71846A52C7E87;
	}

IL_015f:
	{
		// case FMOD.RESULT.ERR_CHANNEL_ALLOC:             return "Error trying to allocate a channel.";
		return _stringLiteralB8A45029C3878A14E011B8243CA653CBD0670100;
	}

IL_0165:
	{
		// case FMOD.RESULT.ERR_CHANNEL_STOLEN:            return "The specified channel has been reused to play another sound.";
		return _stringLiteralFF52EEE98CD53219D87C69133DB0B2EB841E2781;
	}

IL_016b:
	{
		// case FMOD.RESULT.ERR_DMA:                       return "DMA Failure.  See debug output for more information.";
		return _stringLiteralB7100BBEB7CB9346E1769E0BA66A8035F00E1883;
	}

IL_0171:
	{
		// case FMOD.RESULT.ERR_DSP_CONNECTION:            return "DSP connection error.  Connection possibly caused a cyclic dependency or connected dsps with incompatible buffer counts.";
		return _stringLiteral7039092078754EAB2E27854EFEA5657A2EE76ACA;
	}

IL_0177:
	{
		// case FMOD.RESULT.ERR_DSP_DONTPROCESS:           return "DSP return code from a DSP process query callback.  Tells mixer not to call the process callback and therefore not consume CPU.  Use this to optimize the DSP graph.";
		return _stringLiteral6F717CBBC6921445DCD628AC36CC31FD8957630E;
	}

IL_017d:
	{
		// case FMOD.RESULT.ERR_DSP_FORMAT:                return "DSP Format error.  A DSP unit may have attempted to connect to this network with the wrong format, or a matrix may have been set with the wrong size if the target unit has a specified channel map.";
		return _stringLiteral85C4F42855872799BC5CC70ADB474D804E96568A;
	}

IL_0183:
	{
		// case FMOD.RESULT.ERR_DSP_INUSE:                 return "DSP is already in the mixer's DSP network. It must be removed before being reinserted or released.";
		return _stringLiteral37FB64D7B3DB6B01804478A5CCD1910CA30D1C2F;
	}

IL_0189:
	{
		// case FMOD.RESULT.ERR_DSP_NOTFOUND:              return "DSP connection error.  Couldn't find the DSP unit specified.";
		return _stringLiteral1EA33B9041002499391F3C500DEC64A829EAC9E0;
	}

IL_018f:
	{
		// case FMOD.RESULT.ERR_DSP_RESERVED:              return "DSP operation error.  Cannot perform operation on this DSP as it is reserved by the system.";
		return _stringLiteralA3F370A0BCC5D78D4E7D79A1C0B2EDF1CBA01202;
	}

IL_0195:
	{
		// case FMOD.RESULT.ERR_DSP_SILENCE:               return "DSP return code from a DSP process query callback.  Tells mixer silence would be produced from read, so go idle and not consume CPU.  Use this to optimize the DSP graph.";
		return _stringLiteralD888D7A9D7614798D56A6D0CCC306BB8459AC2BA;
	}

IL_019b:
	{
		// case FMOD.RESULT.ERR_DSP_TYPE:                  return "DSP operation cannot be performed on a DSP of this type.";
		return _stringLiteral464506B8C3856BCF4F5987373E5853D3FDD0A000;
	}

IL_01a1:
	{
		// case FMOD.RESULT.ERR_FILE_BAD:                  return "Error loading file.";
		return _stringLiteral2A82FBD5000452E77BB92C5CFE9271BA08271A8B;
	}

IL_01a7:
	{
		// case FMOD.RESULT.ERR_FILE_COULDNOTSEEK:         return "Couldn't perform seek operation.  This is a limitation of the medium (ie netstreams) or the file format.";
		return _stringLiteral1262E28428306BA15867A5BDAAACA60CAD945478;
	}

IL_01ad:
	{
		// case FMOD.RESULT.ERR_FILE_DISKEJECTED:          return "Media was ejected while reading.";
		return _stringLiteralCE6D80392E2071F9BB8DB7A58033C819C07D06C5;
	}

IL_01b3:
	{
		// case FMOD.RESULT.ERR_FILE_EOF:                  return "End of file unexpectedly reached while trying to read essential data (truncated?).";
		return _stringLiteral372DD476A620F27F38A3038098C3B73B973376DE;
	}

IL_01b9:
	{
		// case FMOD.RESULT.ERR_FILE_ENDOFDATA:            return "End of current chunk reached while trying to read data.";
		return _stringLiteral35AC55BE88D18336A51AA9DD8689776AB453352D;
	}

IL_01bf:
	{
		// case FMOD.RESULT.ERR_FILE_NOTFOUND:             return "File not found.";
		return _stringLiteral5D24783BC3514543ED9BD164E49F027D77B501F5;
	}

IL_01c5:
	{
		// case FMOD.RESULT.ERR_FORMAT:                    return "Unsupported file or audio format.";
		return _stringLiteralAE9C75A5B8773536C41D377E4B3D70649E9C6BD5;
	}

IL_01cb:
	{
		// case FMOD.RESULT.ERR_HEADER_MISMATCH:           return "There is a version mismatch between the FMOD header and either the FMOD Studio library or the FMOD Low Level library.";
		return _stringLiteralE43A3D0BA33983E390E47C6A064FC50E314FB877;
	}

IL_01d1:
	{
		// case FMOD.RESULT.ERR_HTTP:                      return "A HTTP error occurred. This is a catch-all for HTTP errors not listed elsewhere.";
		return _stringLiteral67800F5FF638B75A1DE556F29A2EB34799CB292A;
	}

IL_01d7:
	{
		// case FMOD.RESULT.ERR_HTTP_ACCESS:               return "The specified resource requires authentication or is forbidden.";
		return _stringLiteral0C5010009110185671A31A0E07413133941FE55B;
	}

IL_01dd:
	{
		// case FMOD.RESULT.ERR_HTTP_PROXY_AUTH:           return "Proxy authentication is required to access the specified resource.";
		return _stringLiteralB3C8D1763AB0AD1A4F84A1089A0044C6DE0E3A6C;
	}

IL_01e3:
	{
		// case FMOD.RESULT.ERR_HTTP_SERVER_ERROR:         return "A HTTP server error occurred.";
		return _stringLiteral5E6D08EBB6D7C7508C659DEC1FAF9E6F78C62CE2;
	}

IL_01e9:
	{
		// case FMOD.RESULT.ERR_HTTP_TIMEOUT:              return "The HTTP request timed out.";
		return _stringLiteralE43EB9097E9A27052402B7E19F8A21EEC78B89AB;
	}

IL_01ef:
	{
		// case FMOD.RESULT.ERR_INITIALIZATION:            return "FMOD was not initialized correctly to support this function.";
		return _stringLiteral358103AD0C4D35DE02BF55B8A13FCD789BC2A01C;
	}

IL_01f5:
	{
		// case FMOD.RESULT.ERR_INITIALIZED:               return "Cannot call this command after System::init.";
		return _stringLiteral274401FED9C7F8ACC261DB37DB2CFDCB10F26A50;
	}

IL_01fb:
	{
		// case FMOD.RESULT.ERR_INTERNAL:                  return "An error occurred that wasn't supposed to.  Contact support.";
		return _stringLiteralFAC13A829F8125B7B316FC7E50DB89FE94F30EC0;
	}

IL_0201:
	{
		// case FMOD.RESULT.ERR_INVALID_FLOAT:             return "Value passed in was a NaN, Inf or denormalized float.";
		return _stringLiteral7202793CE9C9E5B6DE73F9045E35C1458039098E;
	}

IL_0207:
	{
		// case FMOD.RESULT.ERR_INVALID_HANDLE:            return "An invalid object handle was used.";
		return _stringLiteralFDFBB49255FE696F1E70B404A62ABAF4A4B2C4FF;
	}

IL_020d:
	{
		// case FMOD.RESULT.ERR_INVALID_PARAM:             return "An invalid parameter was passed to this function.";
		return _stringLiteral9E151D8A6223F91FE18701AE2FF1C8F10AD05370;
	}

IL_0213:
	{
		// case FMOD.RESULT.ERR_INVALID_POSITION:          return "An invalid seek position was passed to this function.";
		return _stringLiteralF5DB72504F15ADA3E82328D5C75CEC9E4DE9775B;
	}

IL_0219:
	{
		// case FMOD.RESULT.ERR_INVALID_SPEAKER:           return "An invalid speaker was passed to this function based on the current speaker mode.";
		return _stringLiteralBEA6C6A8BCF150860E2DEE482D4EE7860E576EB7;
	}

IL_021f:
	{
		// case FMOD.RESULT.ERR_INVALID_SYNCPOINT:         return "The syncpoint did not come from this sound handle.";
		return _stringLiteralC8CF3AD6BFF243918463AE6244EB97629454FDC6;
	}

IL_0225:
	{
		// case FMOD.RESULT.ERR_INVALID_THREAD:            return "Tried to call a function on a thread that is not supported.";
		return _stringLiteral62173CC54188FA134B084765935ABDE0F4A746CD;
	}

IL_022b:
	{
		// case FMOD.RESULT.ERR_INVALID_VECTOR:            return "The vectors passed in are not unit length, or perpendicular.";
		return _stringLiteral16E01A10D0A304A64A3EE28A9870520D32B238FB;
	}

IL_0231:
	{
		// case FMOD.RESULT.ERR_MAXAUDIBLE:                return "Reached maximum audible playback count for this sound's soundgroup.";
		return _stringLiteral8369934099AA41CFF00B2563E03224B57942E09E;
	}

IL_0237:
	{
		// case FMOD.RESULT.ERR_MEMORY:                    return "Not enough memory or resources.";
		return _stringLiteralD40527B4F8994F79BB8BFC3692051D6249B94554;
	}

IL_023d:
	{
		// case FMOD.RESULT.ERR_MEMORY_CANTPOINT:          return "Can't use FMOD_OPENMEMORY_POINT on non PCM source data, or non mp3/xma/adpcm data if FMOD_CREATECOMPRESSEDSAMPLE was used.";
		return _stringLiteral04AEAD014F55AC660B0B1182069764F5D0C3BF80;
	}

IL_0243:
	{
		// case FMOD.RESULT.ERR_NEEDS3D:                   return "Tried to call a command on a 2d sound when the command was meant for 3d sound.";
		return _stringLiteral82203622D48EECE467AAD73EDA2AF29EAB27D95E;
	}

IL_0249:
	{
		// case FMOD.RESULT.ERR_NEEDSHARDWARE:             return "Tried to use a feature that requires hardware support.";
		return _stringLiteralEF41E4DCDC1330BF3061C8BEAECEE7FE31300BE3;
	}

IL_024f:
	{
		// case FMOD.RESULT.ERR_NET_CONNECT:               return "Couldn't connect to the specified host.";
		return _stringLiteral524A635A0B998546C2CFD90E667A04818F0DF754;
	}

IL_0255:
	{
		// case FMOD.RESULT.ERR_NET_SOCKET_ERROR:          return "A socket error occurred.  This is a catch-all for socket-related errors not listed elsewhere.";
		return _stringLiteral7E458DCF9436B35C29829158BBB86B837094551F;
	}

IL_025b:
	{
		// case FMOD.RESULT.ERR_NET_URL:                   return "The specified URL couldn't be resolved.";
		return _stringLiteralB54C39247E145C71D52960518EFB2DCC62A6D909;
	}

IL_0261:
	{
		// case FMOD.RESULT.ERR_NET_WOULD_BLOCK:           return "Operation on a non-blocking socket could not complete immediately.";
		return _stringLiteral4C155B7C5F00C9698F2D1A6218FF4AEAFF021490;
	}

IL_0267:
	{
		// case FMOD.RESULT.ERR_NOTREADY:                  return "Operation could not be performed because specified sound/DSP connection is not ready.";
		return _stringLiteralA4E19215C62F4E24F142B85D9D2F7C2404CAA132;
	}

IL_026d:
	{
		// case FMOD.RESULT.ERR_OUTPUT_ALLOCATED:          return "Error initializing output device, but more specifically, the output device is already in use and cannot be reused.";
		return _stringLiteralEB6F586D7370E2CDCBAAE95C6C6C55BDC69784AC;
	}

IL_0273:
	{
		// case FMOD.RESULT.ERR_OUTPUT_CREATEBUFFER:       return "Error creating hardware sound buffer.";
		return _stringLiteral80BE0F7F008E15F5C2CB7BED1371723136E509A5;
	}

IL_0279:
	{
		// case FMOD.RESULT.ERR_OUTPUT_DRIVERCALL:         return "A call to a standard soundcard driver failed, which could possibly mean a bug in the driver or resources were missing or exhausted.";
		return _stringLiteralEE5D8371D4985AFC5063E5B0FFDF67AEA61DEB54;
	}

IL_027f:
	{
		// case FMOD.RESULT.ERR_OUTPUT_FORMAT:             return "Soundcard does not support the specified format.";
		return _stringLiteral507ED0E36352605B93FABBE5DCDAFA0308A43CC7;
	}

IL_0285:
	{
		// case FMOD.RESULT.ERR_OUTPUT_INIT:               return "Error initializing output device.";
		return _stringLiteral337B019F14E948BACB9245F438D79C26DBEEDDD3;
	}

IL_028b:
	{
		// case FMOD.RESULT.ERR_OUTPUT_NODRIVERS:          return "The output device has no drivers installed.  If pre-init, FMOD_OUTPUT_NOSOUND is selected as the output mode.  If post-init, the function just fails.";
		return _stringLiteral291B3ADE2FCBA6E001DCF9BA7AD0F6FEDA3D837F;
	}

IL_0291:
	{
		// case FMOD.RESULT.ERR_PLUGIN:                    return "An unspecified error has been returned from a plugin.";
		return _stringLiteral6347B7ABF2D931AC1CC8D391F199DFCC2ADB172F;
	}

IL_0297:
	{
		// case FMOD.RESULT.ERR_PLUGIN_MISSING:            return "A requested output, dsp unit type or codec was not available.";
		return _stringLiteralC74069EC2237D3A55DAA0A986877ACDC86D6AFAE;
	}

IL_029d:
	{
		// case FMOD.RESULT.ERR_PLUGIN_RESOURCE:           return "A resource that the plugin requires cannot be found. (ie the DLS file for MIDI playback)";
		return _stringLiteral06C9CF7FB416F524DFBD7DFF48E5FA3B11D7B36E;
	}

IL_02a3:
	{
		// case FMOD.RESULT.ERR_PLUGIN_VERSION:            return "A plugin was built with an unsupported SDK version.";
		return _stringLiteralB1E7DCB08463BCC79AA75FB35BBE48A599985451;
	}

IL_02a9:
	{
		// case FMOD.RESULT.ERR_RECORD:                    return "An error occurred trying to initialize the recording device.";
		return _stringLiteral00E35609C478A2A7D2CEC783B9B9059908183DEC;
	}

IL_02af:
	{
		// case FMOD.RESULT.ERR_REVERB_CHANNELGROUP:       return "Reverb properties cannot be set on this channel because a parent channelgroup owns the reverb connection.";
		return _stringLiteralE39C2E0AF4090527216C6BD89025390ABEB1DECE;
	}

IL_02b5:
	{
		// case FMOD.RESULT.ERR_REVERB_INSTANCE:           return "Specified instance in FMOD_REVERB_PROPERTIES couldn't be set. Most likely because it is an invalid instance number or the reverb doesn't exist.";
		return _stringLiteralB3A219399951E91DDB2050261B698F81D4FAB090;
	}

IL_02bb:
	{
		// case FMOD.RESULT.ERR_SUBSOUNDS:                 return "The error occurred because the sound referenced contains subsounds when it shouldn't have, or it doesn't contain subsounds when it should have.  The operation may also not be able to be performed on a parent sound.";
		return _stringLiteralD8FFD7C15DA0F79F364814F4C2BC6CCCFAF5D5BB;
	}

IL_02c1:
	{
		// case FMOD.RESULT.ERR_SUBSOUND_ALLOCATED:        return "This subsound is already being used by another sound, you cannot have more than one parent to a sound.  Null out the other parent's entry first.";
		return _stringLiteralB9405E3CE6FF22CF6AEA0C67B3D8730A5257E8D9;
	}

IL_02c7:
	{
		// case FMOD.RESULT.ERR_SUBSOUND_CANTMOVE:         return "Shared subsounds cannot be replaced or moved from their parent stream, such as when the parent stream is an FSB file.";
		return _stringLiteral7BF2F3C68230F7C6D1DAC873639E46E15A12D704;
	}

IL_02cd:
	{
		// case FMOD.RESULT.ERR_TAGNOTFOUND:               return "The specified tag could not be found or there are no tags.";
		return _stringLiteralD3508371B6BE4EDBC387BC309D2983D034F5D1AB;
	}

IL_02d3:
	{
		// case FMOD.RESULT.ERR_TOOMANYCHANNELS:           return "The sound created exceeds the allowable input channel count.  This can be increased using the 'maxinputchannels' parameter in System::setSoftwareFormat.";
		return _stringLiteralA8CE0AEA7B11396BD17BA0ADB88D41DEA6F51697;
	}

IL_02d9:
	{
		// case FMOD.RESULT.ERR_TRUNCATED:                 return "The retrieved string is too long to fit in the supplied buffer and has been truncated.";
		return _stringLiteralCBDB0B22E6485EEBCB74C43B046BA64BAC59610E;
	}

IL_02df:
	{
		// case FMOD.RESULT.ERR_UNIMPLEMENTED:             return "Something in FMOD hasn't been implemented when it should be! contact support!";
		return _stringLiteralEC4570FB97BDF836A6DB79FDBDC3F63125ABFFBA;
	}

IL_02e5:
	{
		// case FMOD.RESULT.ERR_UNINITIALIZED:             return "This command failed because System::init or System::setDriver was not called.";
		return _stringLiteral4CB592841E1CA27BCCD3F0845429E727DE1E4CF1;
	}

IL_02eb:
	{
		// case FMOD.RESULT.ERR_UNSUPPORTED:               return "A command issued was not supported by this object.  Possibly a plugin without certain callbacks specified.";
		return _stringLiteral4C7ECF3C94E4FF975EF117DE4FD95EC459882CBB;
	}

IL_02f1:
	{
		// case FMOD.RESULT.ERR_VERSION:                   return "The version number of this file format is not supported.";
		return _stringLiteral1E0E45298F8961E27346BFE811260535E08F2B7C;
	}

IL_02f7:
	{
		// case FMOD.RESULT.ERR_EVENT_ALREADY_LOADED:      return "The specified bank has already been loaded.";
		return _stringLiteral82A552809AC43EB9D33A9E554F5A4F070DCAEDD8;
	}

IL_02fd:
	{
		// case FMOD.RESULT.ERR_EVENT_LIVEUPDATE_BUSY:     return "The live update connection failed due to the game already being connected.";
		return _stringLiteralF52A1A1AE9D3CB71A16139435112084A5EA37898;
	}

IL_0303:
	{
		// case FMOD.RESULT.ERR_EVENT_LIVEUPDATE_MISMATCH: return "The live update connection failed due to the game data being out of sync with the tool.";
		return _stringLiteral04FE608EFBFC660FA0611648A3914BB64D0130B0;
	}

IL_0309:
	{
		// case FMOD.RESULT.ERR_EVENT_LIVEUPDATE_TIMEOUT:  return "The live update connection timed out.";
		return _stringLiteral0E57DA20603FF34D2332F776AFAB077E04FA4C3B;
	}

IL_030f:
	{
		// case FMOD.RESULT.ERR_EVENT_NOTFOUND:            return "The requested event, bus or vca could not be found.";
		return _stringLiteral6CDC3D5C90BAF4D76ADDE757B61755FF82818A97;
	}

IL_0315:
	{
		// case FMOD.RESULT.ERR_STUDIO_UNINITIALIZED:      return "The Studio::System object is not yet initialized.";
		return _stringLiteralF8F0122104650DF412A4FE26C65D8DEB8C1111B3;
	}

IL_031b:
	{
		// case FMOD.RESULT.ERR_STUDIO_NOT_LOADED:         return "The specified resource is not loaded, so it can't be unloaded.";
		return _stringLiteralDFF58956B175847A604C0B346DF010D37CC56363;
	}

IL_0321:
	{
		// case FMOD.RESULT.ERR_INVALID_STRING:            return "An invalid string was passed to this function.";
		return _stringLiteral5D73A8446848EE8D69BB4D55B7184D3AE36EC357;
	}

IL_0327:
	{
		// case FMOD.RESULT.ERR_ALREADY_LOCKED:            return "The specified resource is already locked.";
		return _stringLiteral44597A0AD2AEF379C9C2274BA9C5BBBBB25CBAC5;
	}

IL_032d:
	{
		// case FMOD.RESULT.ERR_NOT_LOCKED:                return "The specified resource is not locked, so it can't be unlocked.";
		return _stringLiteralD419792622968B091A390F9287163748F26B2C19;
	}

IL_0333:
	{
		// case FMOD.RESULT.ERR_RECORD_DISCONNECTED:       return "The specified recording driver has been disconnected.";
		return _stringLiteral52262EFB96A34A85EE0540DDD94CF71F30F0CA12;
	}

IL_0339:
	{
		// case FMOD.RESULT.ERR_TOOMANYSAMPLES:            return "The length provided exceed the allowable limit.";
		return _stringLiteralB9E81176E055594F0240A4496BB828B8EDB9E34C;
	}

IL_033f:
	{
		// default:                                        return "Unknown error.";
		return _stringLiteral3716D64264F900396F1AF7FC16D7B86FDF992A50;
	}
}
// System.Void FMOD.Error::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Error__ctor_mBFB03C8E69AFB07ED65D8BAFE334D8FAF2073A3B (Error_tF66A4E578ACBA0BAF6AD67ACE64E592AB5ADB83F * __this, const RuntimeMethod* method)
{
	{
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
